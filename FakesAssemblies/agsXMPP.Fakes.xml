<?xml version="1.0"?>
<doc>
    <assembly>
        <name>agsXMPP.Fakes</name>
    </assembly>
    <members>
        <member name="T:agsXMPP.Collections.Fakes.ShimBareJidComparer">
            <summary>agsXMPP.Collections.BareJidComparer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimBareJidComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimBareJidComparer.#ctor(agsXMPP.Collections.BareJidComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Collections.Fakes.ShimBareJidComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimBareJidComparer.AllInstances.CompareObjectObject">
            <summary>设置 BareJidComparer.Compare(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimBareJidComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimBareJidComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimBareJidComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimBareJidComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimBareJidComparer.CompareObjectObject">
            <summary>设置 BareJidComparer.Compare(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimBareJidComparer.Constructor">
            <summary>设置 BareJidComparer.BareJidComparer() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Collections.Fakes.ShimFullJidComparer">
            <summary>agsXMPP.Collections.FullJidComparer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimFullJidComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimFullJidComparer.#ctor(agsXMPP.Collections.FullJidComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Collections.Fakes.ShimFullJidComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimFullJidComparer.AllInstances.CompareObjectObject">
            <summary>设置 FullJidComparer.Compare(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimFullJidComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimFullJidComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimFullJidComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.ShimFullJidComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimFullJidComparer.CompareObjectObject">
            <summary>设置 FullJidComparer.Compare(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.ShimFullJidComparer.Constructor">
            <summary>设置 FullJidComparer.FullJidComparer() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Collections.Fakes.StubBareJidComparer">
            <summary>agsXMPP.Collections.BareJidComparer 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.StubBareJidComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubBareJidComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.StubBareJidComparer.InitializeStub">
            <summary>初始化 type StubBareJidComparer 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubBareJidComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubBareJidComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Collections.Fakes.StubFullJidComparer">
            <summary>agsXMPP.Collections.FullJidComparer 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.StubFullJidComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubFullJidComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Collections.Fakes.StubFullJidComparer.InitializeStub">
            <summary>初始化 type StubFullJidComparer 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubFullJidComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Collections.Fakes.StubFullJidComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimElementFactory">
            <summary>agsXMPP.Factory.ElementFactory 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementFactory.#ctor(agsXMPP.Factory.ElementFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementFactory.AddElementTypeStringStringType">
            <summary>设置 ElementFactory.AddElementType(String tag, String ns, Type t) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimElementFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementFactory.Constructor">
            <summary>设置 ElementFactory.ElementFactory() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementFactory.GetElementStringStringString">
            <summary>设置 ElementFactory.GetElement(String prefix, String tag, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementFactory.StaticConstructor">
            <summary>设置 ElementFactory.ElementFactory() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimElementType">
            <summary>agsXMPP.Factory.ElementType 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementType.#ctor(agsXMPP.Factory.ElementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimElementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementType.AllInstances.ToString01">
            <summary>设置 ElementType.ToString() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimElementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementType.ConstructorStringString">
            <summary>设置 ElementType.ElementType(String TagName, String Namespace) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimElementType.ToString">
            <summary>设置 ElementType.ToString() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimSaslFactory">
            <summary>agsXMPP.Factory.SaslFactory 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimSaslFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimSaslFactory.#ctor(agsXMPP.Factory.SaslFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimSaslFactory.AddMechanismStringType">
            <summary>设置 SaslFactory.AddMechanism(String mechanism, Type t) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.ShimSaslFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimSaslFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.ShimSaslFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimSaslFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimSaslFactory.Constructor">
            <summary>设置 SaslFactory.SaslFactory() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimSaslFactory.GetMechanismString">
            <summary>设置 SaslFactory.GetMechanism(String mechanism) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.ShimSaslFactory.StaticConstructor">
            <summary>设置 SaslFactory.SaslFactory() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.StubElementFactory">
            <summary>agsXMPP.Factory.ElementFactory 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubElementFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubElementFactory.InitializeStub">
            <summary>初始化 type StubElementFactory 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.StubElementType">
            <summary>agsXMPP.Factory.ElementType 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubElementType.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubElementType.InitializeStub">
            <summary>初始化 type StubElementType 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubElementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubElementType.ToString">
            <summary>设置 ElementType.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Factory.Fakes.StubElementType.ToString01">
            <summary>设置 ElementType.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Factory.Fakes.StubSaslFactory">
            <summary>agsXMPP.Factory.SaslFactory 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubSaslFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubSaslFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Factory.Fakes.StubSaslFactory.InitializeStub">
            <summary>初始化 type StubSaslFactory 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubSaslFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Factory.Fakes.StubSaslFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimId">
            <summary>agsXMPP.Id 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimId.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimId.#ctor(agsXMPP.Id)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimId.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimId.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimId.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.Constructor">
            <summary>设置 Id.Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.GetNextId">
            <summary>设置 Id.GetNextId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.PrefixGet">
            <summary>设置 Id.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.PrefixSetString">
            <summary>设置 Id.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.Reset">
            <summary>设置 Id.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.StaticConstructor">
            <summary>设置 Id.Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.TypeGet">
            <summary>设置 Id.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimId.TypeSetIdType">
            <summary>设置 Id.set_Type(IdType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimIqGrabber">
            <summary>agsXMPP.IqGrabber 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimIqGrabber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimIqGrabber.#ctor(agsXMPP.IqGrabber)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimIqGrabber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.OnIqObjectIQ">
            <summary>设置 IqGrabber.OnIq(Object sender, IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SendIqIQ">
            <summary>设置 IqGrabber.SendIq(IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SendIqIQInt32">
            <summary>设置 IqGrabber.SendIq(IQ iq, Int32 timeout) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SendIqIQIqCB">
            <summary>设置 IqGrabber.SendIq(IQ iq, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SendIqIQIqCBObject">
            <summary>设置 IqGrabber.SendIq(IQ iq, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SynchronousIqResultObjectIQObject">
            <summary>设置 IqGrabber.SynchronousIqResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SynchronousTimeoutGet">
            <summary>设置 IqGrabber.get_SynchronousTimeout() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.AllInstances.SynchronousTimeoutSetInt32">
            <summary>设置 IqGrabber.set_SynchronousTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimIqGrabber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimIqGrabber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.ConstructorXmppClientConnection">
            <summary>设置 IqGrabber.IqGrabber(XmppClientConnection conn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.ConstructorXmppComponentConnection">
            <summary>设置 IqGrabber.IqGrabber(XmppComponentConnection conn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.OnIqObjectIQ">
            <summary>设置 IqGrabber.OnIq(Object sender, IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SendIqIQ">
            <summary>设置 IqGrabber.SendIq(IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SendIqIQInt32">
            <summary>设置 IqGrabber.SendIq(IQ iq, Int32 timeout) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SendIqIQIqCB">
            <summary>设置 IqGrabber.SendIq(IQ iq, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SendIqIQIqCBObject">
            <summary>设置 IqGrabber.SendIq(IQ iq, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SynchronousIqResultObjectIQObject">
            <summary>设置 IqGrabber.SynchronousIqResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SynchronousTimeoutGet">
            <summary>设置 IqGrabber.get_SynchronousTimeout() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimIqGrabber.SynchronousTimeoutSetInt32">
            <summary>设置 IqGrabber.set_SynchronousTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimJid">
            <summary>agsXMPP.Jid 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.#ctor(agsXMPP.Jid)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimJid.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.BareGet">
            <summary>设置 Jid.get_Bare() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.BuildJid">
            <summary>设置 Jid.BuildJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.BuildJidStringStringString">
            <summary>设置 Jid.BuildJid(String user, String server, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.CompareToObject">
            <summary>设置 Jid.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.EqualsJid">
            <summary>设置 Jid.Equals(Jid other) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.EqualsObject">
            <summary>设置 Jid.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.EqualsObjectIComparer">
            <summary>设置 Jid.Equals(Object other, IComparer comparer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.GetHashCode01">
            <summary>设置 Jid.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ParseString">
            <summary>设置 Jid.Parse(String fullJid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ResourceGet">
            <summary>设置 Jid.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ResourceSetString">
            <summary>设置 Jid.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ServerGet">
            <summary>设置 Jid.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ServerSetString">
            <summary>设置 Jid.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.ToString01">
            <summary>设置 Jid.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.UserGet">
            <summary>设置 Jid.get_User() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.AllInstances.UserSetString">
            <summary>设置 Jid.set_User(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.BareGet">
            <summary>设置 Jid.get_Bare() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimJid.Bind(System.IEquatable{agsXMPP.Jid})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.BuildJid">
            <summary>设置 Jid.BuildJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.BuildJidStringStringString">
            <summary>设置 Jid.BuildJid(String user, String server, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.CompareToObject">
            <summary>设置 Jid.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ConstructorString">
            <summary>设置 Jid.Jid(String jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ConstructorStringStringString">
            <summary>设置 Jid.Jid(String user, String server, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.EqualsJid">
            <summary>设置 Jid.Equals(Jid other) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.EqualsObject">
            <summary>设置 Jid.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.EqualsObjectIComparer">
            <summary>设置 Jid.Equals(Object other, IComparer comparer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.EscapeNodeString">
            <summary>设置 Jid.EscapeNode(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.GetHashCode">
            <summary>设置 Jid.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ParseString">
            <summary>设置 Jid.Parse(String fullJid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ResourceGet">
            <summary>设置 Jid.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ResourceSetString">
            <summary>设置 Jid.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ServerGet">
            <summary>设置 Jid.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ServerSetString">
            <summary>设置 Jid.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.ToString">
            <summary>设置 Jid.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.UnescapeNodeString">
            <summary>设置 Jid.UnescapeNode(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.UserGet">
            <summary>设置 Jid.get_User() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimJid.UserSetString">
            <summary>设置 Jid.set_User(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimMessageGrabber">
            <summary>agsXMPP.MessageGrabber 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimMessageGrabber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimMessageGrabber.#ctor(agsXMPP.MessageGrabber)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AddJidIComparerMessageCBObject">
            <summary>设置 MessageGrabber.Add(Jid jid, IComparer comparer, MessageCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AddJidMessageCBObject">
            <summary>设置 MessageGrabber.Add(Jid jid, MessageCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimMessageGrabber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AllInstances.AddJidIComparerMessageCBObject">
            <summary>设置 MessageGrabber.Add(Jid jid, IComparer comparer, MessageCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AllInstances.AddJidMessageCBObject">
            <summary>设置 MessageGrabber.Add(Jid jid, MessageCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AllInstances.RemoveJid">
            <summary>设置 MessageGrabber.Remove(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.AllInstances.m_connection_OnMessageObjectMessage">
            <summary>设置 MessageGrabber.m_connection_OnMessage(Object sender, Message msg) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimMessageGrabber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimMessageGrabber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.ConstructorXmppClientConnection">
            <summary>设置 MessageGrabber.MessageGrabber(XmppClientConnection conn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.RemoveJid">
            <summary>设置 MessageGrabber.Remove(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimMessageGrabber.m_connection_OnMessageObjectMessage">
            <summary>设置 MessageGrabber.m_connection_OnMessage(Object sender, Message msg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimPacketGrabber">
            <summary>agsXMPP.PacketGrabber 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPacketGrabber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPacketGrabber.#ctor(agsXMPP.PacketGrabber)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimPacketGrabber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.AllInstances.Clear">
            <summary>设置 PacketGrabber.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.AllInstances.RemoveString">
            <summary>设置 PacketGrabber.Remove(String id) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPacketGrabber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPacketGrabber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.Clear">
            <summary>设置 PacketGrabber.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.Constructor">
            <summary>设置 PacketGrabber.PacketGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPacketGrabber.RemoveString">
            <summary>设置 PacketGrabber.Remove(String id) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimPresenceGrabber">
            <summary>agsXMPP.PresenceGrabber 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPresenceGrabber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPresenceGrabber.#ctor(agsXMPP.PresenceGrabber)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AddJidIComparerPresenceCBObject">
            <summary>设置 PresenceGrabber.Add(Jid jid, IComparer comparer, PresenceCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AddJidPresenceCBObject">
            <summary>设置 PresenceGrabber.Add(Jid jid, PresenceCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimPresenceGrabber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AllInstances.AddJidIComparerPresenceCBObject">
            <summary>设置 PresenceGrabber.Add(Jid jid, IComparer comparer, PresenceCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AllInstances.AddJidPresenceCBObject">
            <summary>设置 PresenceGrabber.Add(Jid jid, PresenceCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AllInstances.RemoveJid">
            <summary>设置 PresenceGrabber.Remove(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.AllInstances.m_connection_OnPresenceObjectPresence">
            <summary>设置 PresenceGrabber.m_connection_OnPresence(Object sender, Presence pres) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPresenceGrabber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimPresenceGrabber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.ConstructorXmppClientConnection">
            <summary>设置 PresenceGrabber.PresenceGrabber(XmppClientConnection conn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.RemoveJid">
            <summary>设置 PresenceGrabber.Remove(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimPresenceGrabber.m_connection_OnPresenceObjectPresence">
            <summary>设置 PresenceGrabber.m_connection_OnPresence(Object sender, Presence pres) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimUri">
            <summary>agsXMPP.Uri 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimUri.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimUri.#ctor(agsXMPP.Uri)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimUri.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimUri.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimUri.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimUri.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimUri.Constructor">
            <summary>设置 Uri.Uri() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppClientConnection">
            <summary>agsXMPP.XmppClientConnection 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppClientConnection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppClientConnection.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AuthenticatedGet">
            <summary>设置 XmppClientConnection.get_Authenticated() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoAgentsGet">
            <summary>设置 XmppClientConnection.get_AutoAgents() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoAgentsSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoAgents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoPresenceGet">
            <summary>设置 XmppClientConnection.get_AutoPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoPresenceSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoRosterGet">
            <summary>设置 XmppClientConnection.get_AutoRoster() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.AutoRosterSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoRoster(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.BindedGet">
            <summary>设置 XmppClientConnection.get_Binded() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.BuildMyJid">
            <summary>设置 XmppClientConnection.BuildMyJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.CapabilitiesGet">
            <summary>设置 XmppClientConnection.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.CapabilitiesSetCapabilities">
            <summary>设置 XmppClientConnection.set_Capabilities(Capabilities value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ChangePasswordString">
            <summary>设置 XmppClientConnection.ChangePassword(String newPass) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.CleanupSession">
            <summary>设置 XmppClientConnection.CleanupSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ClientLanguageGet">
            <summary>设置 XmppClientConnection.get_ClientLanguage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ClientLanguageSetString">
            <summary>设置 XmppClientConnection.set_ClientLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ClientVersionGet">
            <summary>设置 XmppClientConnection.get_ClientVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ClientVersionSetString">
            <summary>设置 XmppClientConnection.set_ClientVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.DiscoInfoGet">
            <summary>设置 XmppClientConnection.get_DiscoInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.DiscoInfoSetDiscoInfo">
            <summary>设置 XmppClientConnection.set_DiscoInfo(DiscoInfo value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.DoRaiseEventBinded">
            <summary>设置 XmppClientConnection.DoRaiseEventBinded() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.EnableCapabilitiesGet">
            <summary>设置 XmppClientConnection.get_EnableCapabilities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.EnableCapabilitiesSetBoolean">
            <summary>设置 XmppClientConnection.set_EnableCapabilities(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.FireOnAuthErrorElement">
            <summary>设置 XmppClientConnection.FireOnAuthError(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.GetRegistrationFieldsObject">
            <summary>设置 XmppClientConnection.GetRegistrationFields(Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.InitSaslHandler">
            <summary>设置 XmppClientConnection.InitSaslHandler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.IqGrabberGet">
            <summary>设置 XmppClientConnection.get_IqGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.MessageGrabberGet">
            <summary>设置 XmppClientConnection.get_MessageGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.MyJIDGet">
            <summary>设置 XmppClientConnection.get_MyJID() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnAgentEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentItemAddXmppClientConnectionAgentHandler">
            <summary>设置 XmppClientConnection.add_OnAgentItem(AgentHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentItemRemoveXmppClientConnectionAgentHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentItem(AgentHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentStartAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnAgentStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentStartRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAgentsObjectIQObject">
            <summary>设置 XmppClientConnection.OnAgents(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAuthErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAuthErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnAuthenticateObjectIQObject">
            <summary>设置 XmppClientConnection.OnAuthenticate(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnBindedAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnBinded(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnBindedRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnBinded(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnChangePasswordResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnChangePasswordResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnCloseAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnCloseRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnGetAuthInfoObjectIQObject">
            <summary>设置 XmppClientConnection.OnGetAuthInfo(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnIqAddIqHandler">
            <summary>设置 XmppClientConnection.add_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnIqRemoveIqHandler">
            <summary>设置 XmppClientConnection.remove_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnLoginAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnLoginRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnMessageAddMessageHandler">
            <summary>设置 XmppClientConnection.add_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnMessageRemoveMessageHandler">
            <summary>设置 XmppClientConnection.remove_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnPasswordChangedAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnPasswordChanged(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnPasswordChangedRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnPasswordChanged(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnPresenceAddPresenceHandler">
            <summary>设置 XmppClientConnection.add_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnPresenceRemovePresenceHandler">
            <summary>设置 XmppClientConnection.remove_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisterErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnRegisterError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisterErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnRegisterError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisterInformationAddRegisterEventHandler">
            <summary>设置 XmppClientConnection.add_OnRegisterInformation(RegisterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisterInformationRemoveRegisterEventHandler">
            <summary>设置 XmppClientConnection.remove_OnRegisterInformation(RegisterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisterResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnRegisterResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisteredAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRegistered(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegisteredRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRegistered(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRegistrationFieldsResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnRegistrationFieldsResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRosterEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterIQIQ">
            <summary>设置 XmppClientConnection.OnRosterIQ(IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterItemAddXmppClientConnectionRosterHandler">
            <summary>设置 XmppClientConnection.add_OnRosterItem(RosterHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterItemRemoveXmppClientConnectionRosterHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterItem(RosterHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterStartAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRosterStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnRosterStartRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSaslEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnSaslEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSaslEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnSaslEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSaslStartAddSaslEventHandler">
            <summary>设置 XmppClientConnection.add_OnSaslStart(SaslEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSaslStartRemoveSaslEventHandler">
            <summary>设置 XmppClientConnection.remove_OnSaslStart(SaslEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSocketErrorAddErrorHandler">
            <summary>设置 XmppClientConnection.add_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnSocketErrorRemoveErrorHandler">
            <summary>设置 XmppClientConnection.remove_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnStreamErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OnStreamErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.Open">
            <summary>设置 XmppClientConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OpenSocket">
            <summary>设置 XmppClientConnection.OpenSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OpenStringString">
            <summary>设置 XmppClientConnection.Open(String username, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OpenStringStringInt32">
            <summary>设置 XmppClientConnection.Open(String username, String password, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OpenStringStringString">
            <summary>设置 XmppClientConnection.Open(String username, String password, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.OpenStringStringStringInt32">
            <summary>设置 XmppClientConnection.Open(String username, String password, String resource, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PasswordGet">
            <summary>设置 XmppClientConnection.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PasswordSetString">
            <summary>设置 XmppClientConnection.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PickSRVRecord">
            <summary>设置 XmppClientConnection.PickSRVRecord() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PresenceGrabberGet">
            <summary>设置 XmppClientConnection.get_PresenceGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PresenceManagerGet">
            <summary>设置 XmppClientConnection.get_PresenceManager() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PriorityGet">
            <summary>设置 XmppClientConnection.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.PrioritySetInt32">
            <summary>设置 XmppClientConnection.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RaiseOnLogin">
            <summary>设置 XmppClientConnection.RaiseOnLogin() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RegisterAccountGet">
            <summary>设置 XmppClientConnection.get_RegisterAccount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RegisterAccountSetBoolean">
            <summary>设置 XmppClientConnection.set_RegisterAccount(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RemoveSrvRecordSRVRecord">
            <summary>设置 XmppClientConnection.RemoveSrvRecord(SRVRecord rec) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RequestAgents">
            <summary>设置 XmppClientConnection.RequestAgents() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RequestLoginInfo">
            <summary>设置 XmppClientConnection.RequestLoginInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RequestRoster">
            <summary>设置 XmppClientConnection.RequestRoster() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.Reset">
            <summary>设置 XmppClientConnection.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ResolveSrv">
            <summary>设置 XmppClientConnection.ResolveSrv() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ResourceGet">
            <summary>设置 XmppClientConnection.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ResourceSetString">
            <summary>设置 XmppClientConnection.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.RosterManagerGet">
            <summary>设置 XmppClientConnection.get_RosterManager() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SendElement">
            <summary>设置 XmppClientConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SendMyPresence">
            <summary>设置 XmppClientConnection.SendMyPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SendStreamHeaderBoolean">
            <summary>设置 XmppClientConnection.SendStreamHeader(Boolean startParser) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ServerLanguageGet">
            <summary>设置 XmppClientConnection.get_ServerLanguage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SetConnectServerFromSRVRecords">
            <summary>设置 XmppClientConnection.SetConnectServerFromSRVRecords() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ShowGet">
            <summary>设置 XmppClientConnection.get_Show() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.ShowSetShowType">
            <summary>设置 XmppClientConnection.set_Show(ShowType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SocketOnConnectObject">
            <summary>设置 XmppClientConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SocketOnDisconnectObject">
            <summary>设置 XmppClientConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.SocketOnErrorObjectException">
            <summary>设置 XmppClientConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StatusGet">
            <summary>设置 XmppClientConnection.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StatusSetString">
            <summary>设置 XmppClientConnection.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppClientConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UpdateCapsVersion">
            <summary>设置 XmppClientConnection.UpdateCapsVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseCompressionGet">
            <summary>设置 XmppClientConnection.get_UseCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseCompressionSetBoolean">
            <summary>设置 XmppClientConnection.set_UseCompression(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseSSLGet">
            <summary>设置 XmppClientConnection.get_UseSSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseSSLSetBoolean">
            <summary>设置 XmppClientConnection.set_UseSSL(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseStartTLSGet">
            <summary>设置 XmppClientConnection.get_UseStartTLS() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UseStartTLSSetBoolean">
            <summary>设置 XmppClientConnection.set_UseStartTLS(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UsernameGet">
            <summary>设置 XmppClientConnection.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.UsernameSetString">
            <summary>设置 XmppClientConnection.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances._Open">
            <summary>设置 XmppClientConnection._Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.m_SaslHandler_OnSaslEndObject">
            <summary>设置 XmppClientConnection.m_SaslHandler_OnSaslEnd(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AllInstances.m_SaslHandler_OnSaslStartObjectSaslEventArgs">
            <summary>设置 XmppClientConnection.m_SaslHandler_OnSaslStart(Object sender, SaslEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AuthenticatedGet">
            <summary>设置 XmppClientConnection.get_Authenticated() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoAgentsGet">
            <summary>设置 XmppClientConnection.get_AutoAgents() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoAgentsSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoAgents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoPresenceGet">
            <summary>设置 XmppClientConnection.get_AutoPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoPresenceSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoRosterGet">
            <summary>设置 XmppClientConnection.get_AutoRoster() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.AutoRosterSetBoolean">
            <summary>设置 XmppClientConnection.set_AutoRoster(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppClientConnection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppClientConnection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.BindedGet">
            <summary>设置 XmppClientConnection.get_Binded() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.BuildMyJid">
            <summary>设置 XmppClientConnection.BuildMyJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.CapabilitiesGet">
            <summary>设置 XmppClientConnection.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.CapabilitiesSetCapabilities">
            <summary>设置 XmppClientConnection.set_Capabilities(Capabilities value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ChangePasswordString">
            <summary>设置 XmppClientConnection.ChangePassword(String newPass) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.CleanupSession">
            <summary>设置 XmppClientConnection.CleanupSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ClientLanguageGet">
            <summary>设置 XmppClientConnection.get_ClientLanguage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ClientLanguageSetString">
            <summary>设置 XmppClientConnection.set_ClientLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ClientVersionGet">
            <summary>设置 XmppClientConnection.get_ClientVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ClientVersionSetString">
            <summary>设置 XmppClientConnection.set_ClientVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.Constructor">
            <summary>设置 XmppClientConnection.XmppClientConnection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ConstructorSocketConnectionType">
            <summary>设置 XmppClientConnection.XmppClientConnection(SocketConnectionType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ConstructorString">
            <summary>设置 XmppClientConnection.XmppClientConnection(String server) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ConstructorStringInt32">
            <summary>设置 XmppClientConnection.XmppClientConnection(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.DiscoInfoGet">
            <summary>设置 XmppClientConnection.get_DiscoInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.DiscoInfoSetDiscoInfo">
            <summary>设置 XmppClientConnection.set_DiscoInfo(DiscoInfo value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.DoRaiseEventBinded">
            <summary>设置 XmppClientConnection.DoRaiseEventBinded() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.EnableCapabilitiesGet">
            <summary>设置 XmppClientConnection.get_EnableCapabilities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.EnableCapabilitiesSetBoolean">
            <summary>设置 XmppClientConnection.set_EnableCapabilities(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.FireOnAuthErrorElement">
            <summary>设置 XmppClientConnection.FireOnAuthError(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.GetRegistrationFieldsObject">
            <summary>设置 XmppClientConnection.GetRegistrationFields(Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.InitSaslHandler">
            <summary>设置 XmppClientConnection.InitSaslHandler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.IqGrabberGet">
            <summary>设置 XmppClientConnection.get_IqGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.MessageGrabberGet">
            <summary>设置 XmppClientConnection.get_MessageGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.MyJIDGet">
            <summary>设置 XmppClientConnection.get_MyJID() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnAgentEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentItemAddXmppClientConnectionAgentHandler">
            <summary>设置 XmppClientConnection.add_OnAgentItem(AgentHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentItemRemoveXmppClientConnectionAgentHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentItem(AgentHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentStartAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnAgentStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentStartRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnAgentStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAgentsObjectIQObject">
            <summary>设置 XmppClientConnection.OnAgents(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAuthErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAuthErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnAuthenticateObjectIQObject">
            <summary>设置 XmppClientConnection.OnAuthenticate(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnBindedAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnBinded(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnBindedRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnBinded(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnChangePasswordResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnChangePasswordResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnCloseAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnCloseRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnGetAuthInfoObjectIQObject">
            <summary>设置 XmppClientConnection.OnGetAuthInfo(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnIqAddIqHandler">
            <summary>设置 XmppClientConnection.add_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnIqRemoveIqHandler">
            <summary>设置 XmppClientConnection.remove_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnLoginAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnLoginRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnMessageAddMessageHandler">
            <summary>设置 XmppClientConnection.add_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnMessageRemoveMessageHandler">
            <summary>设置 XmppClientConnection.remove_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnPasswordChangedAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnPasswordChanged(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnPasswordChangedRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnPasswordChanged(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnPresenceAddPresenceHandler">
            <summary>设置 XmppClientConnection.add_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnPresenceRemovePresenceHandler">
            <summary>设置 XmppClientConnection.remove_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisterErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnRegisterError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisterErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnRegisterError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisterInformationAddRegisterEventHandler">
            <summary>设置 XmppClientConnection.add_OnRegisterInformation(RegisterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisterInformationRemoveRegisterEventHandler">
            <summary>设置 XmppClientConnection.remove_OnRegisterInformation(RegisterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisterResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnRegisterResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisteredAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRegistered(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegisteredRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRegistered(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRegistrationFieldsResultObjectIQObject">
            <summary>设置 XmppClientConnection.OnRegistrationFieldsResult(Object sender, IQ iq, Object data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRosterEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterIQIQ">
            <summary>设置 XmppClientConnection.OnRosterIQ(IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterItemAddXmppClientConnectionRosterHandler">
            <summary>设置 XmppClientConnection.add_OnRosterItem(RosterHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterItemRemoveXmppClientConnectionRosterHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterItem(RosterHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterStartAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnRosterStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnRosterStartRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnRosterStart(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSaslEndAddObjectHandler">
            <summary>设置 XmppClientConnection.add_OnSaslEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSaslEndRemoveObjectHandler">
            <summary>设置 XmppClientConnection.remove_OnSaslEnd(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSaslStartAddSaslEventHandler">
            <summary>设置 XmppClientConnection.add_OnSaslStart(SaslEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSaslStartRemoveSaslEventHandler">
            <summary>设置 XmppClientConnection.remove_OnSaslStart(SaslEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSocketErrorAddErrorHandler">
            <summary>设置 XmppClientConnection.add_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnSocketErrorRemoveErrorHandler">
            <summary>设置 XmppClientConnection.remove_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnStreamErrorAddXmppElementHandler">
            <summary>设置 XmppClientConnection.add_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OnStreamErrorRemoveXmppElementHandler">
            <summary>设置 XmppClientConnection.remove_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.Open">
            <summary>设置 XmppClientConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OpenSocket">
            <summary>设置 XmppClientConnection.OpenSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OpenStringString">
            <summary>设置 XmppClientConnection.Open(String username, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OpenStringStringInt32">
            <summary>设置 XmppClientConnection.Open(String username, String password, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OpenStringStringString">
            <summary>设置 XmppClientConnection.Open(String username, String password, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.OpenStringStringStringInt32">
            <summary>设置 XmppClientConnection.Open(String username, String password, String resource, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PasswordGet">
            <summary>设置 XmppClientConnection.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PasswordSetString">
            <summary>设置 XmppClientConnection.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PickSRVRecord">
            <summary>设置 XmppClientConnection.PickSRVRecord() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PresenceGrabberGet">
            <summary>设置 XmppClientConnection.get_PresenceGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PresenceManagerGet">
            <summary>设置 XmppClientConnection.get_PresenceManager() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PriorityGet">
            <summary>设置 XmppClientConnection.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.PrioritySetInt32">
            <summary>设置 XmppClientConnection.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RaiseOnLogin">
            <summary>设置 XmppClientConnection.RaiseOnLogin() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RegisterAccountGet">
            <summary>设置 XmppClientConnection.get_RegisterAccount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RegisterAccountSetBoolean">
            <summary>设置 XmppClientConnection.set_RegisterAccount(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RemoveSrvRecordSRVRecord">
            <summary>设置 XmppClientConnection.RemoveSrvRecord(SRVRecord rec) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RequestAgents">
            <summary>设置 XmppClientConnection.RequestAgents() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RequestLoginInfo">
            <summary>设置 XmppClientConnection.RequestLoginInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RequestRoster">
            <summary>设置 XmppClientConnection.RequestRoster() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.Reset">
            <summary>设置 XmppClientConnection.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ResolveSrv">
            <summary>设置 XmppClientConnection.ResolveSrv() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ResourceGet">
            <summary>设置 XmppClientConnection.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ResourceSetString">
            <summary>设置 XmppClientConnection.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.RosterManagerGet">
            <summary>设置 XmppClientConnection.get_RosterManager() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SendElement">
            <summary>设置 XmppClientConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SendMyPresence">
            <summary>设置 XmppClientConnection.SendMyPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SendStreamHeaderBoolean">
            <summary>设置 XmppClientConnection.SendStreamHeader(Boolean startParser) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ServerLanguageGet">
            <summary>设置 XmppClientConnection.get_ServerLanguage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SetConnectServerFromSRVRecords">
            <summary>设置 XmppClientConnection.SetConnectServerFromSRVRecords() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ShowGet">
            <summary>设置 XmppClientConnection.get_Show() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.ShowSetShowType">
            <summary>设置 XmppClientConnection.set_Show(ShowType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SocketOnConnectObject">
            <summary>设置 XmppClientConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SocketOnDisconnectObject">
            <summary>设置 XmppClientConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.SocketOnErrorObjectException">
            <summary>设置 XmppClientConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StatusGet">
            <summary>设置 XmppClientConnection.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StatusSetString">
            <summary>设置 XmppClientConnection.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppClientConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UpdateCapsVersion">
            <summary>设置 XmppClientConnection.UpdateCapsVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseCompressionGet">
            <summary>设置 XmppClientConnection.get_UseCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseCompressionSetBoolean">
            <summary>设置 XmppClientConnection.set_UseCompression(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseSSLGet">
            <summary>设置 XmppClientConnection.get_UseSSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseSSLSetBoolean">
            <summary>设置 XmppClientConnection.set_UseSSL(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseStartTLSGet">
            <summary>设置 XmppClientConnection.get_UseStartTLS() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UseStartTLSSetBoolean">
            <summary>设置 XmppClientConnection.set_UseStartTLS(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UsernameGet">
            <summary>设置 XmppClientConnection.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.UsernameSetString">
            <summary>设置 XmppClientConnection.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection._Open">
            <summary>设置 XmppClientConnection._Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.m_SaslHandler_OnSaslEndObject">
            <summary>设置 XmppClientConnection.m_SaslHandler_OnSaslEnd(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppClientConnection.m_SaslHandler_OnSaslStartObjectSaslEventArgs">
            <summary>设置 XmppClientConnection.m_SaslHandler_OnSaslStart(Object sender, SaslEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppComponentConnection">
            <summary>agsXMPP.XmppComponentConnection 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppComponentConnection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppComponentConnection.#ctor(agsXMPP.XmppComponentConnection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.AuthenticatedGet">
            <summary>设置 XmppComponentConnection.get_Authenticated() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.CleanupSession">
            <summary>设置 XmppComponentConnection.CleanupSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.ComponentJidGet">
            <summary>设置 XmppComponentConnection.get_ComponentJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.ComponentJidSetJid">
            <summary>设置 XmppComponentConnection.set_ComponentJid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.IqGrabberGet">
            <summary>设置 XmppComponentConnection.get_IqGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.IqGrabberSetIqGrabber">
            <summary>设置 XmppComponentConnection.set_IqGrabber(IqGrabber value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.Login">
            <summary>设置 XmppComponentConnection.Login() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnAuthErrorAddXmppElementHandler">
            <summary>设置 XmppComponentConnection.add_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnAuthErrorRemoveXmppElementHandler">
            <summary>设置 XmppComponentConnection.remove_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnCloseAddObjectHandler">
            <summary>设置 XmppComponentConnection.add_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnCloseRemoveObjectHandler">
            <summary>设置 XmppComponentConnection.remove_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnIqAddIqHandler">
            <summary>设置 XmppComponentConnection.add_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnIqRemoveIqHandler">
            <summary>设置 XmppComponentConnection.remove_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnLoginAddObjectHandler">
            <summary>设置 XmppComponentConnection.add_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnLoginRemoveObjectHandler">
            <summary>设置 XmppComponentConnection.remove_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnMessageAddMessageHandler">
            <summary>设置 XmppComponentConnection.add_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnMessageRemoveMessageHandler">
            <summary>设置 XmppComponentConnection.remove_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnPresenceAddPresenceHandler">
            <summary>设置 XmppComponentConnection.add_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnPresenceRemovePresenceHandler">
            <summary>设置 XmppComponentConnection.remove_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnRouteAddXmppComponentConnectionRouteHandler">
            <summary>设置 XmppComponentConnection.add_OnRoute(RouteHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnRouteRemoveXmppComponentConnectionRouteHandler">
            <summary>设置 XmppComponentConnection.remove_OnRoute(RouteHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnSocketErrorAddErrorHandler">
            <summary>设置 XmppComponentConnection.add_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnSocketErrorRemoveErrorHandler">
            <summary>设置 XmppComponentConnection.remove_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnStreamErrorAddXmppElementHandler">
            <summary>设置 XmppComponentConnection.add_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OnStreamErrorRemoveXmppElementHandler">
            <summary>设置 XmppComponentConnection.remove_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.Open">
            <summary>设置 XmppComponentConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.OpenStringInt32">
            <summary>设置 XmppComponentConnection.Open(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.PasswordGet">
            <summary>设置 XmppComponentConnection.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.PasswordSetString">
            <summary>设置 XmppComponentConnection.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.SendElement">
            <summary>设置 XmppComponentConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.SendOpenStream">
            <summary>设置 XmppComponentConnection.SendOpenStream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.SocketOnConnectObject">
            <summary>设置 XmppComponentConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.SocketOnDisconnectObject">
            <summary>设置 XmppComponentConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.SocketOnErrorObjectException">
            <summary>设置 XmppComponentConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances._Open">
            <summary>设置 XmppComponentConnection._Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AllInstances.m_StreamParser_OnStreamErrorObjectException">
            <summary>设置 XmppComponentConnection.m_StreamParser_OnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.AuthenticatedGet">
            <summary>设置 XmppComponentConnection.get_Authenticated() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppComponentConnection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppComponentConnection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.CleanupSession">
            <summary>设置 XmppComponentConnection.CleanupSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.ComponentJidGet">
            <summary>设置 XmppComponentConnection.get_ComponentJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.ComponentJidSetJid">
            <summary>设置 XmppComponentConnection.set_ComponentJid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.Constructor">
            <summary>设置 XmppComponentConnection.XmppComponentConnection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.ConstructorStringInt32">
            <summary>设置 XmppComponentConnection.XmppComponentConnection(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.ConstructorStringInt32String">
            <summary>设置 XmppComponentConnection.XmppComponentConnection(String server, Int32 port, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.IqGrabberGet">
            <summary>设置 XmppComponentConnection.get_IqGrabber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.IqGrabberSetIqGrabber">
            <summary>设置 XmppComponentConnection.set_IqGrabber(IqGrabber value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.Login">
            <summary>设置 XmppComponentConnection.Login() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnAuthErrorAddXmppElementHandler">
            <summary>设置 XmppComponentConnection.add_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnAuthErrorRemoveXmppElementHandler">
            <summary>设置 XmppComponentConnection.remove_OnAuthError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnCloseAddObjectHandler">
            <summary>设置 XmppComponentConnection.add_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnCloseRemoveObjectHandler">
            <summary>设置 XmppComponentConnection.remove_OnClose(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnIqAddIqHandler">
            <summary>设置 XmppComponentConnection.add_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnIqRemoveIqHandler">
            <summary>设置 XmppComponentConnection.remove_OnIq(IqHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnLoginAddObjectHandler">
            <summary>设置 XmppComponentConnection.add_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnLoginRemoveObjectHandler">
            <summary>设置 XmppComponentConnection.remove_OnLogin(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnMessageAddMessageHandler">
            <summary>设置 XmppComponentConnection.add_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnMessageRemoveMessageHandler">
            <summary>设置 XmppComponentConnection.remove_OnMessage(MessageHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnPresenceAddPresenceHandler">
            <summary>设置 XmppComponentConnection.add_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnPresenceRemovePresenceHandler">
            <summary>设置 XmppComponentConnection.remove_OnPresence(PresenceHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnRouteAddXmppComponentConnectionRouteHandler">
            <summary>设置 XmppComponentConnection.add_OnRoute(RouteHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnRouteRemoveXmppComponentConnectionRouteHandler">
            <summary>设置 XmppComponentConnection.remove_OnRoute(RouteHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnSocketErrorAddErrorHandler">
            <summary>设置 XmppComponentConnection.add_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnSocketErrorRemoveErrorHandler">
            <summary>设置 XmppComponentConnection.remove_OnSocketError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnStreamErrorAddXmppElementHandler">
            <summary>设置 XmppComponentConnection.add_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OnStreamErrorRemoveXmppElementHandler">
            <summary>设置 XmppComponentConnection.remove_OnStreamError(XmppElementHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.Open">
            <summary>设置 XmppComponentConnection.Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.OpenStringInt32">
            <summary>设置 XmppComponentConnection.Open(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.PasswordGet">
            <summary>设置 XmppComponentConnection.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.PasswordSetString">
            <summary>设置 XmppComponentConnection.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.SendElement">
            <summary>设置 XmppComponentConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.SendOpenStream">
            <summary>设置 XmppComponentConnection.SendOpenStream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.SocketOnConnectObject">
            <summary>设置 XmppComponentConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.SocketOnDisconnectObject">
            <summary>设置 XmppComponentConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.SocketOnErrorObjectException">
            <summary>设置 XmppComponentConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection._Open">
            <summary>设置 XmppComponentConnection._Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppComponentConnection.m_StreamParser_OnStreamErrorObjectException">
            <summary>设置 XmppComponentConnection.m_StreamParser_OnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppConnection">
            <summary>agsXMPP.XmppConnection 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppConnection.#ctor(agsXMPP.XmppConnection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.ShimXmppConnection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.AutoResolveConnectServerGet">
            <summary>设置 XmppConnection.get_AutoResolveConnectServer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.AutoResolveConnectServerSetBoolean">
            <summary>设置 XmppConnection.set_AutoResolveConnectServer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.ClientSocketGet">
            <summary>设置 XmppConnection.get_ClientSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.Close">
            <summary>设置 XmppConnection.Close() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.ConnectServerGet">
            <summary>设置 XmppConnection.get_ConnectServer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.ConnectServerSetString">
            <summary>设置 XmppConnection.set_ConnectServer(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.CreateKeepAliveTimer">
            <summary>设置 XmppConnection.CreateKeepAliveTimer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.DestroyKeepAliveTimer">
            <summary>设置 XmppConnection.DestroyKeepAliveTimer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.DoChangeXmppConnectionStateXmppConnectionState">
            <summary>设置 XmppConnection.DoChangeXmppConnectionState(XmppConnectionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.FireOnErrorObjectException">
            <summary>设置 XmppConnection.FireOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.FireOnReadXmlObjectString">
            <summary>设置 XmppConnection.FireOnReadXml(Object sender, String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.FireOnWriteXmlObjectString">
            <summary>设置 XmppConnection.FireOnWriteXml(Object sender, String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.InitSocket">
            <summary>设置 XmppConnection.InitSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.KeepAliveGet">
            <summary>设置 XmppConnection.get_KeepAlive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.KeepAliveIntervalGet">
            <summary>设置 XmppConnection.get_KeepAliveInterval() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.KeepAliveIntervalSetInt32">
            <summary>设置 XmppConnection.set_KeepAliveInterval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.KeepAliveSetBoolean">
            <summary>设置 XmppConnection.set_KeepAlive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.KeepAliveTickObject">
            <summary>设置 XmppConnection.KeepAliveTick(Object state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnErrorAddErrorHandler">
            <summary>设置 XmppConnection.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnErrorRemoveErrorHandler">
            <summary>设置 XmppConnection.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnReadSocketDataAddBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.add_OnReadSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnReadSocketDataRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.remove_OnReadSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnReadXmlAddXmlHandler">
            <summary>设置 XmppConnection.add_OnReadXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnReadXmlRemoveXmlHandler">
            <summary>设置 XmppConnection.remove_OnReadXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnWriteSocketDataAddBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.add_OnWriteSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnWriteSocketDataRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.remove_OnWriteSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnWriteXmlAddXmlHandler">
            <summary>设置 XmppConnection.add_OnWriteXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnWriteXmlRemoveXmlHandler">
            <summary>设置 XmppConnection.remove_OnWriteXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnXmppConnectionStateChangedAddXmppConnectionStateHandler">
            <summary>设置 XmppConnection.add_OnXmppConnectionStateChanged(XmppConnectionStateHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OnXmppConnectionStateChangedRemoveXmppConnectionStateHandler">
            <summary>设置 XmppConnection.remove_OnXmppConnectionStateChanged(XmppConnectionStateHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.OpenString">
            <summary>设置 XmppConnection.Open(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.PortGet">
            <summary>设置 XmppConnection.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.PortSetInt32">
            <summary>设置 XmppConnection.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SendElement">
            <summary>设置 XmppConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SendString">
            <summary>设置 XmppConnection.Send(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.ServerGet">
            <summary>设置 XmppConnection.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.ServerSetString">
            <summary>设置 XmppConnection.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketConnect">
            <summary>设置 XmppConnection.SocketConnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketConnectStringInt32">
            <summary>设置 XmppConnection.SocketConnect(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketConnectionTypeGet">
            <summary>设置 XmppConnection.get_SocketConnectionType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketConnectionTypeSetSocketConnectionType">
            <summary>设置 XmppConnection.set_SocketConnectionType(SocketConnectionType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketDisconnect">
            <summary>设置 XmppConnection.SocketDisconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketOnConnectObject">
            <summary>设置 XmppConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketOnDisconnectObject">
            <summary>设置 XmppConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketOnErrorObjectException">
            <summary>设置 XmppConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.SocketOnReceiveObjectByteArrayInt32">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamIdGet">
            <summary>设置 XmppConnection.get_StreamId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamIdSetString">
            <summary>设置 XmppConnection.set_StreamId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserGet">
            <summary>设置 XmppConnection.get_StreamParser() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserOnErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamVersionGet">
            <summary>设置 XmppConnection.get_StreamVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.StreamVersionSetString">
            <summary>设置 XmppConnection.set_StreamVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AllInstances.XmppConnectionStateGet">
            <summary>设置 XmppConnection.get_XmppConnectionState() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AutoResolveConnectServerGet">
            <summary>设置 XmppConnection.get_AutoResolveConnectServer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.AutoResolveConnectServerSetBoolean">
            <summary>设置 XmppConnection.set_AutoResolveConnectServer(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppConnection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.ShimXmppConnection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ClientSocketGet">
            <summary>设置 XmppConnection.get_ClientSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.Close">
            <summary>设置 XmppConnection.Close() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ConnectServerGet">
            <summary>设置 XmppConnection.get_ConnectServer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ConnectServerSetString">
            <summary>设置 XmppConnection.set_ConnectServer(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.Constructor">
            <summary>设置 XmppConnection.XmppConnection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ConstructorSocketConnectionType">
            <summary>设置 XmppConnection.XmppConnection(SocketConnectionType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.CreateKeepAliveTimer">
            <summary>设置 XmppConnection.CreateKeepAliveTimer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.DestroyKeepAliveTimer">
            <summary>设置 XmppConnection.DestroyKeepAliveTimer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.DoChangeXmppConnectionStateXmppConnectionState">
            <summary>设置 XmppConnection.DoChangeXmppConnectionState(XmppConnectionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.FireOnErrorObjectException">
            <summary>设置 XmppConnection.FireOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.FireOnReadXmlObjectString">
            <summary>设置 XmppConnection.FireOnReadXml(Object sender, String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.FireOnWriteXmlObjectString">
            <summary>设置 XmppConnection.FireOnWriteXml(Object sender, String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.InitSocket">
            <summary>设置 XmppConnection.InitSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.KeepAliveGet">
            <summary>设置 XmppConnection.get_KeepAlive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.KeepAliveIntervalGet">
            <summary>设置 XmppConnection.get_KeepAliveInterval() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.KeepAliveIntervalSetInt32">
            <summary>设置 XmppConnection.set_KeepAliveInterval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.KeepAliveSetBoolean">
            <summary>设置 XmppConnection.set_KeepAlive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.KeepAliveTickObject">
            <summary>设置 XmppConnection.KeepAliveTick(Object state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnErrorAddErrorHandler">
            <summary>设置 XmppConnection.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnErrorRemoveErrorHandler">
            <summary>设置 XmppConnection.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnReadSocketDataAddBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.add_OnReadSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnReadSocketDataRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.remove_OnReadSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnReadXmlAddXmlHandler">
            <summary>设置 XmppConnection.add_OnReadXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnReadXmlRemoveXmlHandler">
            <summary>设置 XmppConnection.remove_OnReadXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnWriteSocketDataAddBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.add_OnWriteSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnWriteSocketDataRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 XmppConnection.remove_OnWriteSocketData(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnWriteXmlAddXmlHandler">
            <summary>设置 XmppConnection.add_OnWriteXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnWriteXmlRemoveXmlHandler">
            <summary>设置 XmppConnection.remove_OnWriteXml(XmlHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnXmppConnectionStateChangedAddXmppConnectionStateHandler">
            <summary>设置 XmppConnection.add_OnXmppConnectionStateChanged(XmppConnectionStateHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OnXmppConnectionStateChangedRemoveXmppConnectionStateHandler">
            <summary>设置 XmppConnection.remove_OnXmppConnectionStateChanged(XmppConnectionStateHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.OpenString">
            <summary>设置 XmppConnection.Open(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.PortGet">
            <summary>设置 XmppConnection.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.PortSetInt32">
            <summary>设置 XmppConnection.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SendElement">
            <summary>设置 XmppConnection.Send(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SendString">
            <summary>设置 XmppConnection.Send(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ServerGet">
            <summary>设置 XmppConnection.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.ServerSetString">
            <summary>设置 XmppConnection.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketConnect">
            <summary>设置 XmppConnection.SocketConnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketConnectStringInt32">
            <summary>设置 XmppConnection.SocketConnect(String server, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketConnectionTypeGet">
            <summary>设置 XmppConnection.get_SocketConnectionType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketConnectionTypeSetSocketConnectionType">
            <summary>设置 XmppConnection.set_SocketConnectionType(SocketConnectionType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketDisconnect">
            <summary>设置 XmppConnection.SocketDisconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketOnConnectObject">
            <summary>设置 XmppConnection.SocketOnConnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketOnDisconnectObject">
            <summary>设置 XmppConnection.SocketOnDisconnect(Object sender) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketOnErrorObjectException">
            <summary>设置 XmppConnection.SocketOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.SocketOnReceiveObjectByteArrayInt32">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamIdGet">
            <summary>设置 XmppConnection.get_StreamId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamIdSetString">
            <summary>设置 XmppConnection.set_StreamId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserGet">
            <summary>设置 XmppConnection.get_StreamParser() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserOnErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamElement(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamStart(Object sender, Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamVersionGet">
            <summary>设置 XmppConnection.get_StreamVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.StreamVersionSetString">
            <summary>设置 XmppConnection.set_StreamVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Fakes.ShimXmppConnection.XmppConnectionStateGet">
            <summary>设置 XmppConnection.get_XmppConnectionState() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubId">
            <summary>agsXMPP.Id 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubId.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubId.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubId.InitializeStub">
            <summary>初始化 type StubId 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubId.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubId.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubIqGrabber">
            <summary>agsXMPP.IqGrabber 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubIqGrabber.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubIqGrabber.#ctor(agsXMPP.XmppComponentConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubIqGrabber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubIqGrabber.InitializeStub">
            <summary>初始化 type StubIqGrabber 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubIqGrabber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubIqGrabber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubJid">
            <summary>agsXMPP.Jid 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubJid.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.Equals(System.Object)">
            <summary>设置 Jid.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubJid.EqualsObject">
            <summary>设置 Jid.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.GetHashCode">
            <summary>设置 Jid.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubJid.GetHashCode01">
            <summary>设置 Jid.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.InitializeStub">
            <summary>初始化 type StubJid 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubJid.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubJid.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubJid.ToString">
            <summary>设置 Jid.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubJid.ToString01">
            <summary>设置 Jid.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubMessageGrabber">
            <summary>agsXMPP.MessageGrabber 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubMessageGrabber.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubMessageGrabber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubMessageGrabber.InitializeStub">
            <summary>初始化 type StubMessageGrabber 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubMessageGrabber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubMessageGrabber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubPacketGrabber">
            <summary>agsXMPP.PacketGrabber 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubPacketGrabber.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPacketGrabber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubPacketGrabber.InitializeStub">
            <summary>初始化 type StubPacketGrabber 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPacketGrabber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPacketGrabber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubPresenceGrabber">
            <summary>agsXMPP.PresenceGrabber 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubPresenceGrabber.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPresenceGrabber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubPresenceGrabber.InitializeStub">
            <summary>初始化 type StubPresenceGrabber 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPresenceGrabber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubPresenceGrabber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubUri">
            <summary>agsXMPP.Uri 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubUri.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubUri.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubUri.InitializeStub">
            <summary>初始化 type StubUri 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubUri.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubUri.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubXmppClientConnection">
            <summary>agsXMPP.XmppClientConnection 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.#ctor(agsXMPP.net.SocketConnectionType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppClientConnection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.Close">
            <summary>设置 XmppConnection.Close() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.Close01">
            <summary>设置 XmppConnection.Close() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.InitializeStub">
            <summary>初始化 type StubXmppClientConnection 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppClientConnection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppClientConnection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.Send(agsXMPP.Xml.Dom.Element)">
            <summary>设置 XmppClientConnection.Send(Element e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SendElement">
            <summary>设置 XmppClientConnection.Send(Element e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.SocketConnect">
            <summary>设置 XmppConnection.SocketConnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SocketConnect01">
            <summary>设置 XmppConnection.SocketConnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.SocketOnConnect(System.Object)">
            <summary>设置 XmppClientConnection.SocketOnConnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SocketOnConnectObject">
            <summary>设置 XmppClientConnection.SocketOnConnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.SocketOnDisconnect(System.Object)">
            <summary>设置 XmppClientConnection.SocketOnDisconnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SocketOnDisconnectObject">
            <summary>设置 XmppClientConnection.SocketOnDisconnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.SocketOnError(System.Object,System.Exception)">
            <summary>设置 XmppClientConnection.SocketOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SocketOnErrorObjectException">
            <summary>设置 XmppClientConnection.SocketOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.SocketOnReceive(System.Object,System.Byte[],System.Int32)">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.SocketOnReceiveObjectByteArrayInt32">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamElement(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppClientConnection.StreamParserOnStreamElement(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamElement(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamEnd(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppClientConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamError(System.Object,System.Exception)">
            <summary>设置 XmppClientConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppClientConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamStart(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppClientConnection.StreamParserOnStreamStart(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppClientConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppClientConnection.StreamParserOnStreamStart(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubXmppComponentConnection">
            <summary>agsXMPP.XmppComponentConnection 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.#ctor(System.String,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppComponentConnection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.Close">
            <summary>设置 XmppConnection.Close() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.Close01">
            <summary>设置 XmppConnection.Close() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.InitializeStub">
            <summary>初始化 type StubXmppComponentConnection 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppComponentConnection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppComponentConnection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.Send(agsXMPP.Xml.Dom.Element)">
            <summary>设置 XmppComponentConnection.Send(Element e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SendElement">
            <summary>设置 XmppComponentConnection.Send(Element e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.SocketConnect">
            <summary>设置 XmppConnection.SocketConnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SocketConnect01">
            <summary>设置 XmppConnection.SocketConnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnConnect(System.Object)">
            <summary>设置 XmppComponentConnection.SocketOnConnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnConnectObject">
            <summary>设置 XmppComponentConnection.SocketOnConnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnDisconnect(System.Object)">
            <summary>设置 XmppComponentConnection.SocketOnDisconnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnDisconnectObject">
            <summary>设置 XmppComponentConnection.SocketOnDisconnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnError(System.Object,System.Exception)">
            <summary>设置 XmppComponentConnection.SocketOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnErrorObjectException">
            <summary>设置 XmppComponentConnection.SocketOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnReceive(System.Object,System.Byte[],System.Int32)">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.SocketOnReceiveObjectByteArrayInt32">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamElement(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamElement(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamElement(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamEnd(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamStart(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamStart(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppComponentConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppComponentConnection.StreamParserOnStreamStart(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Fakes.StubXmppConnection">
            <summary>agsXMPP.XmppConnection 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.#ctor(agsXMPP.net.SocketConnectionType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppConnection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.Close">
            <summary>设置 XmppConnection.Close() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.Close01">
            <summary>设置 XmppConnection.Close() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.InitializeStub">
            <summary>初始化 type StubXmppConnection 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppConnection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Fakes.StubXmppConnection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.Send(agsXMPP.Xml.Dom.Element)">
            <summary>设置 XmppConnection.Send(Element e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SendElement">
            <summary>设置 XmppConnection.Send(Element e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.SocketConnect">
            <summary>设置 XmppConnection.SocketConnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SocketConnect01">
            <summary>设置 XmppConnection.SocketConnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.SocketOnConnect(System.Object)">
            <summary>设置 XmppConnection.SocketOnConnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SocketOnConnectObject">
            <summary>设置 XmppConnection.SocketOnConnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.SocketOnDisconnect(System.Object)">
            <summary>设置 XmppConnection.SocketOnDisconnect(Object sender) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SocketOnDisconnectObject">
            <summary>设置 XmppConnection.SocketOnDisconnect(Object sender) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.SocketOnError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.SocketOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SocketOnErrorObjectException">
            <summary>设置 XmppConnection.SocketOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.SocketOnReceive(System.Object,System.Byte[],System.Int32)">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.SocketOnReceiveObjectByteArrayInt32">
            <summary>设置 XmppConnection.SocketOnReceive(Object sender, Byte[] data, Int32 count) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.StreamParserOnError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.StreamParserOnErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamElement(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppConnection.StreamParserOnStreamElement(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamElementObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamElement(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamEnd(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamEndObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamEnd(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamError(System.Object,System.Exception)">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamErrorObjectException">
            <summary>设置 XmppConnection.StreamParserOnStreamError(Object sender, Exception ex) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamStart(System.Object,agsXMPP.Xml.Dom.Node)">
            <summary>设置 XmppConnection.StreamParserOnStreamStart(Object sender, Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Fakes.StubXmppConnection.StreamParserOnStreamStartObjectNode">
            <summary>设置 XmppConnection.StreamParserOnStreamStart(Object sender, Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32">
            <summary>agsXMPP.IO.Compression.Checksums.Adler32 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.#ctor(agsXMPP.IO.Compression.Checksums.Adler32)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances.Reset">
            <summary>设置 Adler32.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances.UpdateByteArray">
            <summary>设置 Adler32.Update(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances.UpdateByteArrayInt32Int32">
            <summary>设置 Adler32.Update(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances.UpdateInt32">
            <summary>设置 Adler32.Update(Int32 bval) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.AllInstances.ValueGet">
            <summary>设置 Adler32.get_Value() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.Bind(agsXMPP.IO.Compression.Checksums.IChecksum)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.Constructor">
            <summary>设置 Adler32.Adler32() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.Reset">
            <summary>设置 Adler32.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.StaticConstructor">
            <summary>设置 Adler32.Adler32() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.UpdateByteArray">
            <summary>设置 Adler32.Update(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.UpdateByteArrayInt32Int32">
            <summary>设置 Adler32.Update(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.UpdateInt32">
            <summary>设置 Adler32.Update(Int32 bval) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.ShimAdler32.ValueGet">
            <summary>设置 Adler32.get_Value() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum">
            <summary>agsXMPP.IO.Compression.Checksums.IChecksum 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.#ctor">
            <summary>初始化 type StubIChecksum 的新实例</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.Reset">
            <summary>设置 IChecksum.Reset() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.UpdateByteArray">
            <summary>设置 IChecksum.Update(Byte[] buffer) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.UpdateByteArrayInt32Int32">
            <summary>设置 IChecksum.Update(Byte[] buf, Int32 off, Int32 len) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.UpdateInt32">
            <summary>设置 IChecksum.Update(Int32 bval) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.agsXMPP#IO#Compression#Checksums#IChecksum#Value">
            <summary>设置 IChecksum.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.ValueGet">
            <summary>设置 IChecksum.get_Value() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.agsXMPP#IO#Compression#Checksums#IChecksum#Reset">
            <summary>设置 IChecksum.Reset() 的 存根</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.agsXMPP#IO#Compression#Checksums#IChecksum#Update(System.Int32)">
            <summary>设置 IChecksum.Update(Int32 bval) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.agsXMPP#IO#Compression#Checksums#IChecksum#Update(System.Byte[])">
            <summary>设置 IChecksum.Update(Byte[] buffer) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Checksums.Fakes.StubIChecksum.agsXMPP#IO#Compression#Checksums#IChecksum#Update(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 IChecksum.Update(Byte[] buf, Int32 off, Int32 len) 的 存根</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflater">
            <summary>agsXMPP.IO.Compression.Deflater 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflater.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflater.#ctor(agsXMPP.IO.Compression.Deflater)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AdlerGet">
            <summary>设置 Deflater.get_Adler() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.AdlerGet">
            <summary>设置 Deflater.get_Adler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.DeflateByteArray">
            <summary>设置 Deflater.Deflate(Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.DeflateByteArrayInt32Int32">
            <summary>设置 Deflater.Deflate(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.Finish">
            <summary>设置 Deflater.Finish() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.Flush">
            <summary>设置 Deflater.Flush() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.GetLevel">
            <summary>设置 Deflater.GetLevel() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.IsFinishedGet">
            <summary>设置 Deflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.IsNeedingInputGet">
            <summary>设置 Deflater.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.Reset">
            <summary>设置 Deflater.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetDictionaryByteArray">
            <summary>设置 Deflater.SetDictionary(Byte[] dict) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetDictionaryByteArrayInt32Int32">
            <summary>设置 Deflater.SetDictionary(Byte[] dict, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetInputByteArray">
            <summary>设置 Deflater.SetInput(Byte[] input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetInputByteArrayInt32Int32">
            <summary>设置 Deflater.SetInput(Byte[] input, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetLevelInt32">
            <summary>设置 Deflater.SetLevel(Int32 lvl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.SetStrategyDeflateStrategy">
            <summary>设置 Deflater.SetStrategy(DeflateStrategy strategy) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.TotalInGet">
            <summary>设置 Deflater.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.AllInstances.TotalOutGet">
            <summary>设置 Deflater.get_TotalOut() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflater.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflater.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.Constructor">
            <summary>设置 Deflater.Deflater() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.ConstructorInt32">
            <summary>设置 Deflater.Deflater(Int32 lvl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.ConstructorInt32Boolean">
            <summary>设置 Deflater.Deflater(Int32 level, Boolean noZlibHeaderOrFooter) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.DeflateByteArray">
            <summary>设置 Deflater.Deflate(Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.DeflateByteArrayInt32Int32">
            <summary>设置 Deflater.Deflate(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.Finish">
            <summary>设置 Deflater.Finish() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.Flush">
            <summary>设置 Deflater.Flush() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.GetLevel">
            <summary>设置 Deflater.GetLevel() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.IsFinishedGet">
            <summary>设置 Deflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.IsNeedingInputGet">
            <summary>设置 Deflater.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.Reset">
            <summary>设置 Deflater.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetDictionaryByteArray">
            <summary>设置 Deflater.SetDictionary(Byte[] dict) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetDictionaryByteArrayInt32Int32">
            <summary>设置 Deflater.SetDictionary(Byte[] dict, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetInputByteArray">
            <summary>设置 Deflater.SetInput(Byte[] input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetInputByteArrayInt32Int32">
            <summary>设置 Deflater.SetInput(Byte[] input, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetLevelInt32">
            <summary>设置 Deflater.SetLevel(Int32 lvl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.SetStrategyDeflateStrategy">
            <summary>设置 Deflater.SetStrategy(DeflateStrategy strategy) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.StaticConstructor">
            <summary>设置 Deflater.Deflater() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.TotalInGet">
            <summary>设置 Deflater.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflater.TotalOutGet">
            <summary>设置 Deflater.get_TotalOut() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants">
            <summary>agsXMPP.IO.Compression.DeflaterConstants 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.#ctor(agsXMPP.IO.Compression.DeflaterConstants)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.Constructor">
            <summary>设置 DeflaterConstants.DeflaterConstants() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterConstants.StaticConstructor">
            <summary>设置 DeflaterConstants.DeflaterConstants() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine">
            <summary>agsXMPP.IO.Compression.DeflaterEngine 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.#ctor(agsXMPP.IO.Compression.DeflaterEngine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AdlerGet">
            <summary>设置 DeflaterEngine.get_Adler() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.AdlerGet">
            <summary>设置 DeflaterEngine.get_Adler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.DeflateBooleanBoolean">
            <summary>设置 DeflaterEngine.Deflate(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.DeflateFastBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateFast(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.DeflateSlowBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateSlow(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.DeflateStoredBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateStored(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.FillWindow">
            <summary>设置 DeflaterEngine.FillWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.FindLongestMatchInt32">
            <summary>设置 DeflaterEngine.FindLongestMatch(Int32 curMatch) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.InsertString">
            <summary>设置 DeflaterEngine.InsertString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.NeedsInput">
            <summary>设置 DeflaterEngine.NeedsInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.Reset">
            <summary>设置 DeflaterEngine.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.ResetAdler">
            <summary>设置 DeflaterEngine.ResetAdler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.SetDictionaryByteArrayInt32Int32">
            <summary>设置 DeflaterEngine.SetDictionary(Byte[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.SetInputByteArrayInt32Int32">
            <summary>设置 DeflaterEngine.SetInput(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.SetLevelInt32">
            <summary>设置 DeflaterEngine.SetLevel(Int32 lvl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.SlideWindow">
            <summary>设置 DeflaterEngine.SlideWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.StrategyGet">
            <summary>设置 DeflaterEngine.get_Strategy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.StrategySetDeflateStrategy">
            <summary>设置 DeflaterEngine.set_Strategy(DeflateStrategy value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.TotalInGet">
            <summary>设置 DeflaterEngine.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.AllInstances.UpdateHash">
            <summary>设置 DeflaterEngine.UpdateHash() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.ConstructorDeflaterPending">
            <summary>设置 DeflaterEngine.DeflaterEngine(DeflaterPending pending) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.DeflateBooleanBoolean">
            <summary>设置 DeflaterEngine.Deflate(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.DeflateFastBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateFast(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.DeflateSlowBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateSlow(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.DeflateStoredBooleanBoolean">
            <summary>设置 DeflaterEngine.DeflateStored(Boolean flush, Boolean finish) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.FillWindow">
            <summary>设置 DeflaterEngine.FillWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.FindLongestMatchInt32">
            <summary>设置 DeflaterEngine.FindLongestMatch(Int32 curMatch) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.InsertString">
            <summary>设置 DeflaterEngine.InsertString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.NeedsInput">
            <summary>设置 DeflaterEngine.NeedsInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.Reset">
            <summary>设置 DeflaterEngine.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.ResetAdler">
            <summary>设置 DeflaterEngine.ResetAdler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.SetDictionaryByteArrayInt32Int32">
            <summary>设置 DeflaterEngine.SetDictionary(Byte[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.SetInputByteArrayInt32Int32">
            <summary>设置 DeflaterEngine.SetInput(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.SetLevelInt32">
            <summary>设置 DeflaterEngine.SetLevel(Int32 lvl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.SlideWindow">
            <summary>设置 DeflaterEngine.SlideWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.StaticConstructor">
            <summary>设置 DeflaterEngine.DeflaterEngine() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.StrategyGet">
            <summary>设置 DeflaterEngine.get_Strategy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.StrategySetDeflateStrategy">
            <summary>设置 DeflaterEngine.set_Strategy(DeflateStrategy value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.TotalInGet">
            <summary>设置 DeflaterEngine.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterEngine.UpdateHash">
            <summary>设置 DeflaterEngine.UpdateHash() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman">
            <summary>agsXMPP.IO.Compression.DeflaterHuffman 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.#ctor(agsXMPP.IO.Compression.DeflaterHuffman)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.CompressBlock">
            <summary>设置 DeflaterHuffman.CompressBlock() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.DcodeInt32">
            <summary>设置 DeflaterHuffman.Dcode(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.FlushBlockByteArrayInt32Int32Boolean">
            <summary>设置 DeflaterHuffman.FlushBlock(Byte[] stored, Int32 storedOffset, Int32 storedLength, Boolean lastBlock) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.FlushStoredBlockByteArrayInt32Int32Boolean">
            <summary>设置 DeflaterHuffman.FlushStoredBlock(Byte[] stored, Int32 storedOffset, Int32 storedLength, Boolean lastBlock) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.IsFull">
            <summary>设置 DeflaterHuffman.IsFull() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.LcodeInt32">
            <summary>设置 DeflaterHuffman.Lcode(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.Reset">
            <summary>设置 DeflaterHuffman.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.SendAllTreesInt32">
            <summary>设置 DeflaterHuffman.SendAllTrees(Int32 blTreeCodes) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.TallyDistInt32Int32">
            <summary>设置 DeflaterHuffman.TallyDist(Int32 dist, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.AllInstances.TallyLitInt32">
            <summary>设置 DeflaterHuffman.TallyLit(Int32 lit) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.BitReverseInt32">
            <summary>设置 DeflaterHuffman.BitReverse(Int32 toReverse) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.CompressBlock">
            <summary>设置 DeflaterHuffman.CompressBlock() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ConstructorDeflaterPending">
            <summary>设置 DeflaterHuffman.DeflaterHuffman(DeflaterPending pending) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.DcodeInt32">
            <summary>设置 DeflaterHuffman.Dcode(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.FlushBlockByteArrayInt32Int32Boolean">
            <summary>设置 DeflaterHuffman.FlushBlock(Byte[] stored, Int32 storedOffset, Int32 storedLength, Boolean lastBlock) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.FlushStoredBlockByteArrayInt32Int32Boolean">
            <summary>设置 DeflaterHuffman.FlushStoredBlock(Byte[] stored, Int32 storedOffset, Int32 storedLength, Boolean lastBlock) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.IsFull">
            <summary>设置 DeflaterHuffman.IsFull() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.LcodeInt32">
            <summary>设置 DeflaterHuffman.Lcode(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.Reset">
            <summary>设置 DeflaterHuffman.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.SendAllTreesInt32">
            <summary>设置 DeflaterHuffman.SendAllTrees(Int32 blTreeCodes) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree">
            <summary>agsXMPP.IO.Compression.DeflaterHuffman+Tree 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.#ctor(agsXMPP.IO.Compression.DeflaterHuffman.Tree)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.BuildCodes">
            <summary>设置 Tree.BuildCodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.BuildLengthInt32Array">
            <summary>设置 Tree.BuildLength(Int32[] childs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.BuildTree">
            <summary>设置 Tree.BuildTree() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.CalcBLFreqDeflaterHuffmanTree">
            <summary>设置 Tree.CalcBLFreq(Tree blTree) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.CheckEmpty">
            <summary>设置 Tree.CheckEmpty() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.GetEncodedLength">
            <summary>设置 Tree.GetEncodedLength() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.Reset">
            <summary>设置 Tree.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.SetStaticCodesInt16ArrayByteArray">
            <summary>设置 Tree.SetStaticCodes(Int16[] stCodes, Byte[] stLength) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.WriteSymbolInt32">
            <summary>设置 Tree.WriteSymbol(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.AllInstances.WriteTreeDeflaterHuffmanTree">
            <summary>设置 Tree.WriteTree(Tree blTree) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.BuildCodes">
            <summary>设置 Tree.BuildCodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.BuildLengthInt32Array">
            <summary>设置 Tree.BuildLength(Int32[] childs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.BuildTree">
            <summary>设置 Tree.BuildTree() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.CalcBLFreqDeflaterHuffmanTree">
            <summary>设置 Tree.CalcBLFreq(Tree blTree) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.CheckEmpty">
            <summary>设置 Tree.CheckEmpty() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.ConstructorDeflaterHuffmanInt32Int32Int32">
            <summary>设置 Tree.Tree(DeflaterHuffman dh, Int32 elems, Int32 minCodes, Int32 maxLength) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.GetEncodedLength">
            <summary>设置 Tree.GetEncodedLength() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.Reset">
            <summary>设置 Tree.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.SetStaticCodesInt16ArrayByteArray">
            <summary>设置 Tree.SetStaticCodes(Int16[] stCodes, Byte[] stLength) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.WriteSymbolInt32">
            <summary>设置 Tree.WriteSymbol(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.ShimTree.WriteTreeDeflaterHuffmanTree">
            <summary>设置 Tree.WriteTree(Tree blTree) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.StaticConstructor">
            <summary>设置 DeflaterHuffman.DeflaterHuffman() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.TallyDistInt32Int32">
            <summary>设置 DeflaterHuffman.TallyDist(Int32 dist, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterHuffman.TallyLitInt32">
            <summary>设置 DeflaterHuffman.TallyLit(Int32 lit) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending">
            <summary>agsXMPP.IO.Compression.DeflaterPending 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.#ctor(agsXMPP.IO.Compression.DeflaterPending)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimDeflaterPending.Constructor">
            <summary>设置 DeflaterPending.DeflaterPending() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimInflater">
            <summary>agsXMPP.IO.Compression.Inflater 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflater.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflater.#ctor(agsXMPP.IO.Compression.Inflater)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AdlerGet">
            <summary>设置 Inflater.get_Adler() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.AdlerGet">
            <summary>设置 Inflater.get_Adler() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.Decode">
            <summary>设置 Inflater.Decode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.DecodeChksum">
            <summary>设置 Inflater.DecodeChksum() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.DecodeDict">
            <summary>设置 Inflater.DecodeDict() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.DecodeHeader">
            <summary>设置 Inflater.DecodeHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.DecodeHuffman">
            <summary>设置 Inflater.DecodeHuffman() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.InflateByteArray">
            <summary>设置 Inflater.Inflate(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.InflateByteArrayInt32Int32">
            <summary>设置 Inflater.Inflate(Byte[] buf, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.IsFinishedGet">
            <summary>设置 Inflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.IsNeedingDictionaryGet">
            <summary>设置 Inflater.get_IsNeedingDictionary() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.IsNeedingInputGet">
            <summary>设置 Inflater.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.RemainingInputGet">
            <summary>设置 Inflater.get_RemainingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.Reset">
            <summary>设置 Inflater.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.SetDictionaryByteArray">
            <summary>设置 Inflater.SetDictionary(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.SetDictionaryByteArrayInt32Int32">
            <summary>设置 Inflater.SetDictionary(Byte[] buffer, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.SetInputByteArray">
            <summary>设置 Inflater.SetInput(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.SetInputByteArrayInt32Int32">
            <summary>设置 Inflater.SetInput(Byte[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.TotalInGet">
            <summary>设置 Inflater.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.AllInstances.TotalOutGet">
            <summary>设置 Inflater.get_TotalOut() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflater.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflater.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.Constructor">
            <summary>设置 Inflater.Inflater() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.ConstructorBoolean">
            <summary>设置 Inflater.Inflater(Boolean noHeader) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.Decode">
            <summary>设置 Inflater.Decode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.DecodeChksum">
            <summary>设置 Inflater.DecodeChksum() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.DecodeDict">
            <summary>设置 Inflater.DecodeDict() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.DecodeHeader">
            <summary>设置 Inflater.DecodeHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.DecodeHuffman">
            <summary>设置 Inflater.DecodeHuffman() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.InflateByteArray">
            <summary>设置 Inflater.Inflate(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.InflateByteArrayInt32Int32">
            <summary>设置 Inflater.Inflate(Byte[] buf, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.IsFinishedGet">
            <summary>设置 Inflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.IsNeedingDictionaryGet">
            <summary>设置 Inflater.get_IsNeedingDictionary() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.IsNeedingInputGet">
            <summary>设置 Inflater.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.RemainingInputGet">
            <summary>设置 Inflater.get_RemainingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.Reset">
            <summary>设置 Inflater.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.SetDictionaryByteArray">
            <summary>设置 Inflater.SetDictionary(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.SetDictionaryByteArrayInt32Int32">
            <summary>设置 Inflater.SetDictionary(Byte[] buffer, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.SetInputByteArray">
            <summary>设置 Inflater.SetInput(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.SetInputByteArrayInt32Int32">
            <summary>设置 Inflater.SetInput(Byte[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.StaticConstructor">
            <summary>设置 Inflater.Inflater() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.TotalInGet">
            <summary>设置 Inflater.get_TotalIn() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflater.TotalOutGet">
            <summary>设置 Inflater.get_TotalOut() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree">
            <summary>agsXMPP.IO.Compression.InflaterHuffmanTree 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.#ctor(agsXMPP.IO.Compression.InflaterHuffmanTree)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.AllInstances.BuildTreeByteArray">
            <summary>设置 InflaterHuffmanTree.BuildTree(Byte[] codeLengths) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.AllInstances.GetSymbolStreamManipulator">
            <summary>设置 InflaterHuffmanTree.GetSymbol(StreamManipulator input) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.BuildTreeByteArray">
            <summary>设置 InflaterHuffmanTree.BuildTree(Byte[] codeLengths) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.ConstructorByteArray">
            <summary>设置 InflaterHuffmanTree.InflaterHuffmanTree(Byte[] codeLengths) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.GetSymbolStreamManipulator">
            <summary>设置 InflaterHuffmanTree.GetSymbol(StreamManipulator input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimInflaterHuffmanTree.StaticConstructor">
            <summary>设置 InflaterHuffmanTree.InflaterHuffmanTree() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer">
            <summary>agsXMPP.IO.Compression.PendingBuffer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.#ctor(agsXMPP.IO.Compression.PendingBuffer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AlignToByte">
            <summary>设置 PendingBuffer.AlignToByte() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.AlignToByte">
            <summary>设置 PendingBuffer.AlignToByte() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.BitCountGet">
            <summary>设置 PendingBuffer.get_BitCount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.FlushByteArrayInt32Int32">
            <summary>设置 PendingBuffer.Flush(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.IsFlushedGet">
            <summary>设置 PendingBuffer.get_IsFlushed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.Reset">
            <summary>设置 PendingBuffer.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.ToByteArray">
            <summary>设置 PendingBuffer.ToByteArray() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteBitsInt32Int32">
            <summary>设置 PendingBuffer.WriteBits(Int32 b, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteBlockByteArrayInt32Int32">
            <summary>设置 PendingBuffer.WriteBlock(Byte[] block, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteByteInt32">
            <summary>设置 PendingBuffer.WriteByte(Int32 b) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteIntInt32">
            <summary>设置 PendingBuffer.WriteInt(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteShortInt32">
            <summary>设置 PendingBuffer.WriteShort(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.AllInstances.WriteShortMSBInt32">
            <summary>设置 PendingBuffer.WriteShortMSB(Int32 s) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.BitCountGet">
            <summary>设置 PendingBuffer.get_BitCount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.Constructor">
            <summary>设置 PendingBuffer.PendingBuffer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.ConstructorInt32">
            <summary>设置 PendingBuffer.PendingBuffer(Int32 bufsize) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.FlushByteArrayInt32Int32">
            <summary>设置 PendingBuffer.Flush(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.IsFlushedGet">
            <summary>设置 PendingBuffer.get_IsFlushed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.Reset">
            <summary>设置 PendingBuffer.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.ToByteArray">
            <summary>设置 PendingBuffer.ToByteArray() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteBitsInt32Int32">
            <summary>设置 PendingBuffer.WriteBits(Int32 b, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteBlockByteArrayInt32Int32">
            <summary>设置 PendingBuffer.WriteBlock(Byte[] block, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteByteInt32">
            <summary>设置 PendingBuffer.WriteByte(Int32 b) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteIntInt32">
            <summary>设置 PendingBuffer.WriteInt(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteShortInt32">
            <summary>设置 PendingBuffer.WriteShort(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimPendingBuffer.WriteShortMSBInt32">
            <summary>设置 PendingBuffer.WriteShortMSB(Int32 s) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException">
            <summary>agsXMPP.IO.Compression.SharpZipBaseException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.#ctor(agsXMPP.IO.Compression.SharpZipBaseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.Constructor">
            <summary>设置 SharpZipBaseException.SharpZipBaseException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.ConstructorString">
            <summary>设置 SharpZipBaseException.SharpZipBaseException(String msg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.ShimSharpZipBaseException.ConstructorStringException">
            <summary>设置 SharpZipBaseException.SharpZipBaseException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubDeflater">
            <summary>agsXMPP.IO.Compression.Deflater 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflater.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflater.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflater.#ctor(System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflater.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflater.InitializeStub">
            <summary>初始化 type StubDeflater 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflater.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflater.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants">
            <summary>agsXMPP.IO.Compression.DeflaterConstants 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants.InitializeStub">
            <summary>初始化 type StubDeflaterConstants 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterConstants.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine">
            <summary>agsXMPP.IO.Compression.DeflaterEngine 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine.#ctor(agsXMPP.IO.Compression.DeflaterPending)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine.InitializeStub">
            <summary>初始化 type StubDeflaterEngine 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterEngine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman">
            <summary>agsXMPP.IO.Compression.DeflaterHuffman 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman.#ctor(agsXMPP.IO.Compression.DeflaterPending)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman.InitializeStub">
            <summary>初始化 type StubDeflaterHuffman 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterHuffman.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubDeflaterPending">
            <summary>agsXMPP.IO.Compression.DeflaterPending 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterPending.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterPending.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubDeflaterPending.InitializeStub">
            <summary>初始化 type StubDeflaterPending 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterPending.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubDeflaterPending.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubInflater">
            <summary>agsXMPP.IO.Compression.Inflater 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubInflater.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubInflater.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflater.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubInflater.InitializeStub">
            <summary>初始化 type StubInflater 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflater.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflater.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree">
            <summary>agsXMPP.IO.Compression.InflaterHuffmanTree 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree.#ctor(System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree.InitializeStub">
            <summary>初始化 type StubInflaterHuffmanTree 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubInflaterHuffmanTree.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubPendingBuffer">
            <summary>agsXMPP.IO.Compression.PendingBuffer 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.InitializeStub">
            <summary>初始化 type StubPendingBuffer 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubPendingBuffer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException">
            <summary>agsXMPP.IO.Compression.SharpZipBaseException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSharpZipBaseException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSharpZipBaseException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.InitializeStub">
            <summary>初始化 type StubSharpZipBaseException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.IO.Compression.Fakes.StubSharpZipBaseException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow">
            <summary>agsXMPP.IO.Compression.Streams.OutputWindow 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.#ctor(agsXMPP.IO.Compression.Streams.OutputWindow)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.CopyDictByteArrayInt32Int32">
            <summary>设置 OutputWindow.CopyDict(Byte[] dict, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.CopyOutputByteArrayInt32Int32">
            <summary>设置 OutputWindow.CopyOutput(Byte[] output, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.CopyStoredStreamManipulatorInt32">
            <summary>设置 OutputWindow.CopyStored(StreamManipulator input, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.GetAvailable">
            <summary>设置 OutputWindow.GetAvailable() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.GetFreeSpace">
            <summary>设置 OutputWindow.GetFreeSpace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.RepeatInt32Int32">
            <summary>设置 OutputWindow.Repeat(Int32 len, Int32 dist) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.Reset">
            <summary>设置 OutputWindow.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.SlowRepeatInt32Int32Int32">
            <summary>设置 OutputWindow.SlowRepeat(Int32 repStart, Int32 len, Int32 dist) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.AllInstances.WriteInt32">
            <summary>设置 OutputWindow.Write(Int32 abyte) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.Constructor">
            <summary>设置 OutputWindow.OutputWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.CopyDictByteArrayInt32Int32">
            <summary>设置 OutputWindow.CopyDict(Byte[] dict, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.CopyOutputByteArrayInt32Int32">
            <summary>设置 OutputWindow.CopyOutput(Byte[] output, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.CopyStoredStreamManipulatorInt32">
            <summary>设置 OutputWindow.CopyStored(StreamManipulator input, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.GetAvailable">
            <summary>设置 OutputWindow.GetAvailable() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.GetFreeSpace">
            <summary>设置 OutputWindow.GetFreeSpace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.RepeatInt32Int32">
            <summary>设置 OutputWindow.Repeat(Int32 len, Int32 dist) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.Reset">
            <summary>设置 OutputWindow.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.SlowRepeatInt32Int32Int32">
            <summary>设置 OutputWindow.SlowRepeat(Int32 repStart, Int32 len, Int32 dist) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.StaticConstructor">
            <summary>设置 OutputWindow.OutputWindow() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimOutputWindow.WriteInt32">
            <summary>设置 OutputWindow.Write(Int32 abyte) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator">
            <summary>agsXMPP.IO.Compression.Streams.StreamManipulator 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.#ctor(agsXMPP.IO.Compression.Streams.StreamManipulator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.AvailableBitsGet">
            <summary>设置 StreamManipulator.get_AvailableBits() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.AvailableBytesGet">
            <summary>设置 StreamManipulator.get_AvailableBytes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.CopyBytesByteArrayInt32Int32">
            <summary>设置 StreamManipulator.CopyBytes(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.DropBitsInt32">
            <summary>设置 StreamManipulator.DropBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.GetBitsInt32">
            <summary>设置 StreamManipulator.GetBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.IsNeedingInputGet">
            <summary>设置 StreamManipulator.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.PeekBitsInt32">
            <summary>设置 StreamManipulator.PeekBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.Reset">
            <summary>设置 StreamManipulator.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.SetInputByteArrayInt32Int32">
            <summary>设置 StreamManipulator.SetInput(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AllInstances.SkipToByteBoundary">
            <summary>设置 StreamManipulator.SkipToByteBoundary() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AvailableBitsGet">
            <summary>设置 StreamManipulator.get_AvailableBits() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.AvailableBytesGet">
            <summary>设置 StreamManipulator.get_AvailableBytes() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.Constructor">
            <summary>设置 StreamManipulator.StreamManipulator() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.CopyBytesByteArrayInt32Int32">
            <summary>设置 StreamManipulator.CopyBytes(Byte[] output, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.DropBitsInt32">
            <summary>设置 StreamManipulator.DropBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.GetBitsInt32">
            <summary>设置 StreamManipulator.GetBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.IsNeedingInputGet">
            <summary>设置 StreamManipulator.get_IsNeedingInput() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.PeekBitsInt32">
            <summary>设置 StreamManipulator.PeekBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.Reset">
            <summary>设置 StreamManipulator.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.SetInputByteArrayInt32Int32">
            <summary>设置 StreamManipulator.SetInput(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.ShimStreamManipulator.SkipToByteBoundary">
            <summary>设置 StreamManipulator.SkipToByteBoundary() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow">
            <summary>agsXMPP.IO.Compression.Streams.OutputWindow 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow.InitializeStub">
            <summary>初始化 type StubOutputWindow 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubOutputWindow.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator">
            <summary>agsXMPP.IO.Compression.Streams.StreamManipulator 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator.InitializeStub">
            <summary>初始化 type StubStreamManipulator 的新实例</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.IO.Compression.Streams.Fakes.StubStreamManipulator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding">
            <summary>agsXMPP.IO.StringWriterWithEncoding 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.#ctor(agsXMPP.IO.StringWriterWithEncoding)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.IO.Fakes.ShimStringWriterWithEncoding.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimCombiningClass">
            <summary>agsXMPP.Idn.CombiningClass 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimCombiningClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimCombiningClass.#ctor(agsXMPP.Idn.CombiningClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimCombiningClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimCombiningClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimCombiningClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimCombiningClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimCombiningClass.Constructor">
            <summary>设置 CombiningClass.CombiningClass() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimCombiningClass.StaticConstructor">
            <summary>设置 CombiningClass.CombiningClass() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimComposition">
            <summary>agsXMPP.Idn.Composition 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimComposition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimComposition.#ctor(agsXMPP.Idn.Composition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimComposition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimComposition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimComposition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimComposition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimComposition.Constructor">
            <summary>设置 Composition.Composition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimComposition.StaticConstructor">
            <summary>设置 Composition.Composition() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimDecompositionKeys">
            <summary>agsXMPP.Idn.DecompositionKeys 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionKeys.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionKeys.#ctor(agsXMPP.Idn.DecompositionKeys)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimDecompositionKeys.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionKeys.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionKeys.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionKeys.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionKeys.Constructor">
            <summary>设置 DecompositionKeys.DecompositionKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionKeys.StaticConstructor">
            <summary>设置 DecompositionKeys.DecompositionKeys() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimDecompositionMappings">
            <summary>agsXMPP.Idn.DecompositionMappings 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionMappings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionMappings.#ctor(agsXMPP.Idn.DecompositionMappings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimDecompositionMappings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionMappings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimDecompositionMappings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionMappings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionMappings.Constructor">
            <summary>设置 DecompositionMappings.DecompositionMappings() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimDecompositionMappings.StaticConstructor">
            <summary>设置 DecompositionMappings.DecompositionMappings() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimIDNA">
            <summary>agsXMPP.Idn.IDNA 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNA.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNA.#ctor(agsXMPP.Idn.IDNA)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimIDNA.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNA.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNA.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.Constructor">
            <summary>设置 IDNA.IDNA() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.ToASCIIString">
            <summary>设置 IDNA.ToASCII(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.ToASCIIStringBooleanBoolean">
            <summary>设置 IDNA.ToASCII(String input, Boolean allowUnassigned, Boolean useSTD3ASCIIRules) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.ToUnicodeString">
            <summary>设置 IDNA.ToUnicode(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNA.ToUnicodeStringBooleanBoolean">
            <summary>设置 IDNA.ToUnicode(String input, Boolean allowUnassigned, Boolean useSTD3ASCIIRules) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimIDNAException">
            <summary>agsXMPP.Idn.IDNAException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNAException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNAException.#ctor(agsXMPP.Idn.IDNAException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimIDNAException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNAException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNAException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNAException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimIDNAException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNAException.ConstructorPunycodeException">
            <summary>设置 IDNAException.IDNAException(PunycodeException e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNAException.ConstructorString">
            <summary>设置 IDNAException.IDNAException(String m) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNAException.ConstructorStringprepException">
            <summary>设置 IDNAException.IDNAException(StringprepException e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimIDNAException.StaticConstructor">
            <summary>设置 IDNAException.IDNAException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimNFKC">
            <summary>agsXMPP.Idn.NFKC 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimNFKC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimNFKC.#ctor(agsXMPP.Idn.NFKC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimNFKC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimNFKC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimNFKC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.Constructor">
            <summary>设置 NFKC.NFKC() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.NormalizeNFKCString">
            <summary>设置 NFKC.NormalizeNFKC(String sbIn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.StaticConstructor">
            <summary>设置 NFKC.NFKC() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.canonicalOrderingStringBuilder">
            <summary>设置 NFKC.canonicalOrdering(StringBuilder sbIn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.combiningClassChar">
            <summary>设置 NFKC.combiningClass(Char c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.composeCharChar">
            <summary>设置 NFKC.compose(Char a, Char b) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.composeHangulCharChar">
            <summary>设置 NFKC.composeHangul(Char a, Char b) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.composeIndexChar">
            <summary>设置 NFKC.composeIndex(Char a) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.decomposeHangulChar">
            <summary>设置 NFKC.decomposeHangul(Char s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimNFKC.decomposeIndexChar">
            <summary>设置 NFKC.decomposeIndex(Char c) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimPunycode">
            <summary>agsXMPP.Idn.Punycode 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycode.#ctor(agsXMPP.Idn.Punycode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.AdaptInt32Int32Boolean">
            <summary>设置 Punycode.Adapt(Int32 delta, Int32 numpoints, Boolean first) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimPunycode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.Codepoint2DigitInt32">
            <summary>设置 Punycode.Codepoint2Digit(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.Constructor">
            <summary>设置 Punycode.Punycode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.DecodeString">
            <summary>设置 Punycode.Decode(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.Digit2CodepointInt32">
            <summary>设置 Punycode.Digit2Codepoint(Int32 d) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.EncodeString">
            <summary>设置 Punycode.Encode(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycode.IsBasicChar">
            <summary>设置 Punycode.IsBasic(Char c) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimPunycodeException">
            <summary>agsXMPP.Idn.PunycodeException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycodeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycodeException.#ctor(agsXMPP.Idn.PunycodeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimPunycodeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycodeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycodeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycodeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimPunycodeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycodeException.ConstructorString">
            <summary>设置 PunycodeException.PunycodeException(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimPunycodeException.StaticConstructor">
            <summary>设置 PunycodeException.PunycodeException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimRFC3454">
            <summary>agsXMPP.Idn.RFC3454 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimRFC3454.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimRFC3454.#ctor(agsXMPP.Idn.RFC3454)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimRFC3454.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimRFC3454.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimRFC3454.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimRFC3454.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimRFC3454.Constructor">
            <summary>设置 RFC3454.RFC3454() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimRFC3454.StaticConstructor">
            <summary>设置 RFC3454.RFC3454() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimStringprep">
            <summary>agsXMPP.Idn.Stringprep 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprep.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprep.#ctor(agsXMPP.Idn.Stringprep)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimStringprep.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprep.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprep.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.Constructor">
            <summary>设置 Stringprep.Stringprep() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.ContainsCharCharArrayArray">
            <summary>设置 Stringprep.Contains(Char c, Char[][] p) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.ContainsStringBuilderCharArray">
            <summary>设置 Stringprep.Contains(StringBuilder s, Char[] p) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.ContainsStringBuilderCharArrayArray">
            <summary>设置 Stringprep.Contains(StringBuilder s, Char[][] p) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.FilterStringBuilderCharArray">
            <summary>设置 Stringprep.Filter(StringBuilder s, Char[] f) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.FilterStringBuilderCharArrayArray">
            <summary>设置 Stringprep.Filter(StringBuilder s, Char[][] f) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.MapStringBuilderCharArrayStringArray">
            <summary>设置 Stringprep.Map(StringBuilder s, Char[] search, String[] replace) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.NamePrepString">
            <summary>设置 Stringprep.NamePrep(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.NamePrepStringBoolean">
            <summary>设置 Stringprep.NamePrep(String input, Boolean allowUnassigned) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.NodePrepString">
            <summary>设置 Stringprep.NodePrep(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.NodePrepStringBoolean">
            <summary>设置 Stringprep.NodePrep(String input, Boolean allowUnassigned) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.ResourcePrepString">
            <summary>设置 Stringprep.ResourcePrep(String input) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.ResourcePrepStringBoolean">
            <summary>设置 Stringprep.ResourcePrep(String input, Boolean allowUnassigned) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprep.StaticConstructor">
            <summary>设置 Stringprep.Stringprep() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimStringprepException">
            <summary>agsXMPP.Idn.StringprepException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprepException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprepException.#ctor(agsXMPP.Idn.StringprepException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.ShimStringprepException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprepException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprepException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprepException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.ShimStringprepException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprepException.ConstructorString">
            <summary>设置 StringprepException.StringprepException(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.ShimStringprepException.StaticConstructor">
            <summary>设置 StringprepException.StringprepException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubCombiningClass">
            <summary>agsXMPP.Idn.CombiningClass 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubCombiningClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubCombiningClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubCombiningClass.InitializeStub">
            <summary>初始化 type StubCombiningClass 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubCombiningClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubCombiningClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubComposition">
            <summary>agsXMPP.Idn.Composition 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubComposition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubComposition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubComposition.InitializeStub">
            <summary>初始化 type StubComposition 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubComposition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubComposition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubDecompositionKeys">
            <summary>agsXMPP.Idn.DecompositionKeys 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubDecompositionKeys.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionKeys.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubDecompositionKeys.InitializeStub">
            <summary>初始化 type StubDecompositionKeys 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionKeys.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionKeys.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubDecompositionMappings">
            <summary>agsXMPP.Idn.DecompositionMappings 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubDecompositionMappings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionMappings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubDecompositionMappings.InitializeStub">
            <summary>初始化 type StubDecompositionMappings 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionMappings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubDecompositionMappings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubIDNA">
            <summary>agsXMPP.Idn.IDNA 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNA.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNA.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNA.InitializeStub">
            <summary>初始化 type StubIDNA 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNA.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNA.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubIDNAException">
            <summary>agsXMPP.Idn.IDNAException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.#ctor(agsXMPP.Idn.PunycodeException)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.#ctor(agsXMPP.Idn.StringprepException)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubIDNAException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubIDNAException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.InitializeStub">
            <summary>初始化 type StubIDNAException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubIDNAException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubIDNAException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubIDNAException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubNFKC">
            <summary>agsXMPP.Idn.NFKC 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubNFKC.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubNFKC.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubNFKC.InitializeStub">
            <summary>初始化 type StubNFKC 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubNFKC.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubNFKC.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubPunycode">
            <summary>agsXMPP.Idn.Punycode 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycode.InitializeStub">
            <summary>初始化 type StubPunycode 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubPunycodeException">
            <summary>agsXMPP.Idn.PunycodeException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubPunycodeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubPunycodeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.InitializeStub">
            <summary>初始化 type StubPunycodeException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubPunycodeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubPunycodeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubPunycodeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubRFC3454">
            <summary>agsXMPP.Idn.RFC3454 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubRFC3454.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubRFC3454.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubRFC3454.InitializeStub">
            <summary>初始化 type StubRFC3454 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubRFC3454.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubRFC3454.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubStringprep">
            <summary>agsXMPP.Idn.Stringprep 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprep.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprep.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprep.InitializeStub">
            <summary>初始化 type StubStringprep 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprep.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprep.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Idn.Fakes.StubStringprepException">
            <summary>agsXMPP.Idn.StringprepException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubStringprepException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubStringprepException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.InitializeStub">
            <summary>初始化 type StubStringprepException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Idn.Fakes.StubStringprepException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Idn.Fakes.StubStringprepException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Idn.Fakes.StubStringprepException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimComment">
            <summary>agsXMPP.Xml.Dom.Comment 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimComment.#ctor(agsXMPP.Xml.Dom.Comment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimComment.Constructor">
            <summary>设置 Comment.Comment() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimComment.ConstructorString">
            <summary>设置 Comment.Comment(String text) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimDocument">
            <summary>agsXMPP.Xml.Dom.Document 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimDocument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimDocument.#ctor(agsXMPP.Xml.Dom.Document)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.Clear">
            <summary>设置 Document.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.EncodingGet">
            <summary>设置 Document.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.EncodingSetString">
            <summary>设置 Document.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.LoadFileString">
            <summary>设置 Document.LoadFile(String filename) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.LoadStreamStream">
            <summary>设置 Document.LoadStream(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.LoadXmlString">
            <summary>设置 Document.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.RootElementGet">
            <summary>设置 Document.get_RootElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.SaveString">
            <summary>设置 Document.Save(String filename) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.VersionGet">
            <summary>设置 Document.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.AllInstances.VersionSetString">
            <summary>设置 Document.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimDocument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimDocument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.Clear">
            <summary>设置 Document.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.Constructor">
            <summary>设置 Document.Document() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.EncodingGet">
            <summary>设置 Document.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.EncodingSetString">
            <summary>设置 Document.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.LoadFileString">
            <summary>设置 Document.LoadFile(String filename) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.LoadStreamStream">
            <summary>设置 Document.LoadStream(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.LoadXmlString">
            <summary>设置 Document.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.RootElementGet">
            <summary>设置 Document.get_RootElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.SaveString">
            <summary>设置 Document.Save(String filename) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.VersionGet">
            <summary>设置 Document.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimDocument.VersionSetString">
            <summary>设置 Document.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimElement">
            <summary>agsXMPP.Xml.Dom.Element 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.#ctor(agsXMPP.Xml.Dom.Element)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AddTagString">
            <summary>设置 Element.AddTag(String argTagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AddTagStringString">
            <summary>设置 Element.AddTag(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.AddTagString">
            <summary>设置 Element.AddTag(String argTagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.AddTagStringString">
            <summary>设置 Element.AddTag(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.AttributeString">
            <summary>设置 Element.Attribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.AttributesGet">
            <summary>设置 Element.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.EndTag">
            <summary>设置 Element.EndTag() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.FirstChildGet">
            <summary>设置 Element.get_FirstChild() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.FirstNodeGet">
            <summary>设置 Element.get_FirstNode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeBoolString">
            <summary>设置 Element.GetAttributeBool(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeDoubleString">
            <summary>设置 Element.GetAttributeDouble(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeDoubleStringIFormatProvider">
            <summary>设置 Element.GetAttributeDouble(String name, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeEnumStringType">
            <summary>设置 Element.GetAttributeEnum(String name, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeIntString">
            <summary>设置 Element.GetAttributeInt(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeJidString">
            <summary>设置 Element.GetAttributeJid(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeLongString">
            <summary>设置 Element.GetAttributeLong(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetAttributeString">
            <summary>设置 Element.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagBase64String">
            <summary>设置 Element.GetTagBase64(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagBoolString">
            <summary>设置 Element.GetTagBool(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagDoubleString">
            <summary>设置 Element.GetTagDouble(String argTagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagDoubleStringIFormatProvider">
            <summary>设置 Element.GetTagDouble(String argTagName, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagEnumStringType">
            <summary>设置 Element.GetTagEnum(String name, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagIntString">
            <summary>设置 Element.GetTagInt(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagJidString">
            <summary>设置 Element.GetTagJid(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagString">
            <summary>设置 Element.GetTag(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagStringBoolean">
            <summary>设置 Element.GetTag(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.GetTagType">
            <summary>设置 Element.GetTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasAttributeString">
            <summary>设置 Element.HasAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasChildElementsGet">
            <summary>设置 Element.get_HasChildElements() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasTagEnumType">
            <summary>设置 Element.HasTagEnum(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasTagString">
            <summary>设置 Element.HasTag(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasTagStringBoolean">
            <summary>设置 Element.HasTag(String name, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasTagType">
            <summary>设置 Element.HasTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.HasTagTypeBoolean">
            <summary>设置 Element.HasTag(Type type, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.InnerXmlGet">
            <summary>设置 Element.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.InnerXmlSetString">
            <summary>设置 Element.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.IsRootElementGet">
            <summary>设置 Element.get_IsRootElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.LastNodeGet">
            <summary>设置 Element.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.PrefixGet">
            <summary>设置 Element.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.PrefixSetString">
            <summary>设置 Element.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.RemoveAttributeString">
            <summary>设置 Element.RemoveAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.RemoveTagString">
            <summary>设置 Element.RemoveTag(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.RemoveTagType">
            <summary>设置 Element.RemoveTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.RemoveTagsType">
            <summary>设置 Element.RemoveTags(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.ReplaceChildElement">
            <summary>设置 Element.ReplaceChild(Element e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectElementsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,System.Collections.Generic.List{``0}})">
            <summary>设置 Element.SelectElements() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectElementsOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 Element.SelectElements(Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectElementsString">
            <summary>设置 Element.SelectElements(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectElementsStringBoolean">
            <summary>设置 Element.SelectElements(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectElementsType">
            <summary>设置 Element.SelectElements(Type type) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,``0})">
            <summary>设置 Element.SelectSingleElement() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,System.Boolean,``0})">
            <summary>设置 Element.SelectSingleElement(Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementString">
            <summary>设置 Element.SelectSingleElement(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementStringBoolean">
            <summary>设置 Element.SelectSingleElement(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementStringString">
            <summary>设置 Element.SelectSingleElement(String TagName, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementStringStringBoolean">
            <summary>设置 Element.SelectSingleElement(String TagName, String ns, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementStringStringString">
            <summary>设置 Element.SelectSingleElement(String TagName, String AttribName, String AttribValue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementType">
            <summary>设置 Element.SelectSingleElement(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SelectSingleElementTypeBoolean">
            <summary>设置 Element.SelectSingleElement(Type type, Boolean loopChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringBoolean">
            <summary>设置 Element.SetAttribute(String name, Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringDouble">
            <summary>设置 Element.SetAttribute(String name, Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringDoubleIFormatProvider">
            <summary>设置 Element.SetAttribute(String name, Double value, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringInt32">
            <summary>设置 Element.SetAttribute(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringInt64">
            <summary>设置 Element.SetAttribute(String name, Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringJid">
            <summary>设置 Element.SetAttribute(String name, Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetAttributeStringString">
            <summary>设置 Element.SetAttribute(String name, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetNamespaceString">
            <summary>设置 Element.SetNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagBase64StringByteArray">
            <summary>设置 Element.SetTagBase64(String argTagname, Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagBase64StringString">
            <summary>设置 Element.SetTagBase64(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagString">
            <summary>设置 Element.SetTag(String argTagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringBoolean">
            <summary>设置 Element.SetTag(String argTagname, Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringDouble">
            <summary>设置 Element.SetTag(String argTagname, Double dbl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringDoubleIFormatProvider">
            <summary>设置 Element.SetTag(String argTagname, Double dbl, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringInt32">
            <summary>设置 Element.SetTag(String argTagname, Int32 val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringJid">
            <summary>设置 Element.SetTag(String argTagname, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringString">
            <summary>设置 Element.SetTag(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagStringStringString">
            <summary>设置 Element.SetTag(String argTagname, String argText, String argNS) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagType">
            <summary>设置 Element.SetTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.SetTagTypeString">
            <summary>设置 Element.SetTag(Type type, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.StartTag">
            <summary>设置 Element.StartTag() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.TagNameGet">
            <summary>设置 Element.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.TagNameSetString">
            <summary>设置 Element.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.TextBase64Get">
            <summary>设置 Element.get_TextBase64() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.TextBase64SetString">
            <summary>设置 Element.set_TextBase64(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.ValueGet">
            <summary>设置 Element.get_Value() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeString">
            <summary>设置 Element._SelectElement(Node se, String tagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeStringBoolean">
            <summary>设置 Element._SelectElement(Node se, String tagname, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeStringStringBoolean">
            <summary>设置 Element._SelectElement(Node se, String tagname, String nameSpace, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeStringStringString">
            <summary>设置 Element._SelectElement(Node se, String tagname, String AttribName, String AttribValue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeType">
            <summary>设置 Element._SelectElement(Node se, Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementNodeTypeBoolean">
            <summary>设置 Element._SelectElement(Node se, Type type, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementsElementStringElementListBoolean">
            <summary>设置 Element._SelectElements(Element e, String tagname, ElementList es, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementsElementTypeElementList">
            <summary>设置 Element._SelectElements(Element e, Type type, ElementList es) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementsElementTypeElementListBoolean">
            <summary>设置 Element._SelectElements(Element e, Type type, ElementList es, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.AllInstances._SelectElementsOf1ElementListOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,agsXMPP.Xml.Dom.Element,System.Collections.Generic.List{``0},System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 Element._SelectElements(Element e, List`1&lt;!!0&gt; list, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AttributeString">
            <summary>设置 Element.Attribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.AttributesGet">
            <summary>设置 Element.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.Constructor">
            <summary>设置 Element.Element() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ConstructorString">
            <summary>设置 Element.Element(String tagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ConstructorStringBoolean">
            <summary>设置 Element.Element(String tagName, Boolean tagText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ConstructorStringString">
            <summary>设置 Element.Element(String tagName, String tagText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ConstructorStringStringString">
            <summary>设置 Element.Element(String tagName, String tagText, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.EndTag">
            <summary>设置 Element.EndTag() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.FirstChildGet">
            <summary>设置 Element.get_FirstChild() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.FirstNodeGet">
            <summary>设置 Element.get_FirstNode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeBoolString">
            <summary>设置 Element.GetAttributeBool(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeDoubleString">
            <summary>设置 Element.GetAttributeDouble(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeDoubleStringIFormatProvider">
            <summary>设置 Element.GetAttributeDouble(String name, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeEnumStringType">
            <summary>设置 Element.GetAttributeEnum(String name, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeIntString">
            <summary>设置 Element.GetAttributeInt(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeJidString">
            <summary>设置 Element.GetAttributeJid(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeLongString">
            <summary>设置 Element.GetAttributeLong(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetAttributeString">
            <summary>设置 Element.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagBase64String">
            <summary>设置 Element.GetTagBase64(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagBoolString">
            <summary>设置 Element.GetTagBool(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagDoubleString">
            <summary>设置 Element.GetTagDouble(String argTagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagDoubleStringIFormatProvider">
            <summary>设置 Element.GetTagDouble(String argTagName, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagEnumStringType">
            <summary>设置 Element.GetTagEnum(String name, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagIntString">
            <summary>设置 Element.GetTagInt(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagJidString">
            <summary>设置 Element.GetTagJid(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagString">
            <summary>设置 Element.GetTag(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagStringBoolean">
            <summary>设置 Element.GetTag(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.GetTagType">
            <summary>设置 Element.GetTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasAttributeString">
            <summary>设置 Element.HasAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasChildElementsGet">
            <summary>设置 Element.get_HasChildElements() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasTagEnumType">
            <summary>设置 Element.HasTagEnum(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasTagString">
            <summary>设置 Element.HasTag(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasTagStringBoolean">
            <summary>设置 Element.HasTag(String name, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasTagType">
            <summary>设置 Element.HasTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.HasTagTypeBoolean">
            <summary>设置 Element.HasTag(Type type, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.InnerXmlGet">
            <summary>设置 Element.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.InnerXmlSetString">
            <summary>设置 Element.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.IsRootElementGet">
            <summary>设置 Element.get_IsRootElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.LastNodeGet">
            <summary>设置 Element.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.PrefixGet">
            <summary>设置 Element.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.PrefixSetString">
            <summary>设置 Element.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.RemoveAttributeString">
            <summary>设置 Element.RemoveAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.RemoveTagString">
            <summary>设置 Element.RemoveTag(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.RemoveTagType">
            <summary>设置 Element.RemoveTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.RemoveTagsType">
            <summary>设置 Element.RemoveTags(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ReplaceChildElement">
            <summary>设置 Element.ReplaceChild(Element e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectElementsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 Element.SelectElements() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectElementsOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 Element.SelectElements(Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectElementsString">
            <summary>设置 Element.SelectElements(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectElementsStringBoolean">
            <summary>设置 Element.SelectElements(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectElementsType">
            <summary>设置 Element.SelectElements(Type type) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 Element.SelectSingleElement() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0})">
            <summary>设置 Element.SelectSingleElement(Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementString">
            <summary>设置 Element.SelectSingleElement(String TagName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementStringBoolean">
            <summary>设置 Element.SelectSingleElement(String TagName, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementStringString">
            <summary>设置 Element.SelectSingleElement(String TagName, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementStringStringBoolean">
            <summary>设置 Element.SelectSingleElement(String TagName, String ns, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementStringStringString">
            <summary>设置 Element.SelectSingleElement(String TagName, String AttribName, String AttribValue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementType">
            <summary>设置 Element.SelectSingleElement(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SelectSingleElementTypeBoolean">
            <summary>设置 Element.SelectSingleElement(Type type, Boolean loopChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringBoolean">
            <summary>设置 Element.SetAttribute(String name, Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringDouble">
            <summary>设置 Element.SetAttribute(String name, Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringDoubleIFormatProvider">
            <summary>设置 Element.SetAttribute(String name, Double value, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringInt32">
            <summary>设置 Element.SetAttribute(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringInt64">
            <summary>设置 Element.SetAttribute(String name, Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringJid">
            <summary>设置 Element.SetAttribute(String name, Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetAttributeStringString">
            <summary>设置 Element.SetAttribute(String name, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetNamespaceString">
            <summary>设置 Element.SetNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagBase64StringByteArray">
            <summary>设置 Element.SetTagBase64(String argTagname, Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagBase64StringString">
            <summary>设置 Element.SetTagBase64(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagString">
            <summary>设置 Element.SetTag(String argTagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringBoolean">
            <summary>设置 Element.SetTag(String argTagname, Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringDouble">
            <summary>设置 Element.SetTag(String argTagname, Double dbl) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringDoubleIFormatProvider">
            <summary>设置 Element.SetTag(String argTagname, Double dbl, IFormatProvider ifp) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringInt32">
            <summary>设置 Element.SetTag(String argTagname, Int32 val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringJid">
            <summary>设置 Element.SetTag(String argTagname, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringString">
            <summary>设置 Element.SetTag(String argTagname, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagStringStringString">
            <summary>设置 Element.SetTag(String argTagname, String argText, String argNS) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagType">
            <summary>设置 Element.SetTag(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.SetTagTypeString">
            <summary>设置 Element.SetTag(Type type, String argText) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.StartTag">
            <summary>设置 Element.StartTag() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.TagNameGet">
            <summary>设置 Element.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.TagNameSetString">
            <summary>设置 Element.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.TextBase64Get">
            <summary>设置 Element.get_TextBase64() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.TextBase64SetString">
            <summary>设置 Element.set_TextBase64(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ValueGet">
            <summary>设置 Element.get_Value() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeString">
            <summary>设置 Element._SelectElement(Node se, String tagname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeStringBoolean">
            <summary>设置 Element._SelectElement(Node se, String tagname, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeStringStringBoolean">
            <summary>设置 Element._SelectElement(Node se, String tagname, String nameSpace, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeStringStringString">
            <summary>设置 Element._SelectElement(Node se, String tagname, String AttribName, String AttribValue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeType">
            <summary>设置 Element._SelectElement(Node se, Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementNodeTypeBoolean">
            <summary>设置 Element._SelectElement(Node se, Type type, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementsElementStringElementListBoolean">
            <summary>设置 Element._SelectElements(Element e, String tagname, ElementList es, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementsElementTypeElementList">
            <summary>设置 Element._SelectElements(Element e, Type type, ElementList es) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementsElementTypeElementListBoolean">
            <summary>设置 Element._SelectElements(Element e, Type type, ElementList es, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElement._SelectElementsOf1ElementListOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{agsXMPP.Xml.Dom.Element,System.Collections.Generic.List{``0},System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 Element._SelectElements(Element e, List`1&lt;!!0&gt; list, Boolean traverseChildren) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimElementList">
            <summary>agsXMPP.Xml.Dom.ElementList 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.#ctor(agsXMPP.Xml.Dom.ElementList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.AddNode">
            <summary>设置 ElementList.Add(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimElementList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.AllInstances.AddNode">
            <summary>设置 ElementList.Add(Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.AllInstances.ItemInt32">
            <summary>设置 ElementList.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.AllInstances.RemoveElement">
            <summary>设置 ElementList.Remove(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.AllInstances.RemoveInt32">
            <summary>设置 ElementList.Remove(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimElementList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.Constructor">
            <summary>设置 ElementList.ElementList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.ItemInt32">
            <summary>设置 ElementList.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.RemoveElement">
            <summary>设置 ElementList.Remove(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimElementList.RemoveInt32">
            <summary>设置 ElementList.Remove(Int32 index) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimNode">
            <summary>agsXMPP.Xml.Dom.Node 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNode.#ctor(agsXMPP.Xml.Dom.Node)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.BuildXmlNodeFormattingInt32Char">
            <summary>设置 Node.BuildXml(Node e, Formatting format, Int32 indent, Char indentchar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ChildNodesGet">
            <summary>设置 Node.get_ChildNodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.IndexGet">
            <summary>设置 Node.get_Index() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.NamespaceGet">
            <summary>设置 Node.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.NamespaceSetString">
            <summary>设置 Node.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.NodeTypeGet">
            <summary>设置 Node.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.NodeTypeSetNodeType">
            <summary>设置 Node.set_NodeType(NodeType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.Remove">
            <summary>设置 Node.Remove() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.RemoveAllChildNodes">
            <summary>设置 Node.RemoveAllChildNodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ToString01">
            <summary>设置 Node.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ToStringFormatting">
            <summary>设置 Node.ToString(Formatting format) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ToStringFormattingInt32">
            <summary>设置 Node.ToString(Formatting format, Int32 indent) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ValueGet">
            <summary>设置 Node.get_Value() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.AllInstances.WriteTreeNodeXmlTextWriterNode">
            <summary>设置 Node.WriteTree(Node e, XmlTextWriter tw, Node parent) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.BuildXmlNodeFormattingInt32Char">
            <summary>设置 Node.BuildXml(Node e, Formatting format, Int32 indent, Char indentchar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ChildNodesGet">
            <summary>设置 Node.get_ChildNodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.Constructor">
            <summary>设置 Node.Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.IndexGet">
            <summary>设置 Node.get_Index() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.NamespaceGet">
            <summary>设置 Node.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.NamespaceSetString">
            <summary>设置 Node.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.NodeTypeGet">
            <summary>设置 Node.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.NodeTypeSetNodeType">
            <summary>设置 Node.set_NodeType(NodeType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.Remove">
            <summary>设置 Node.Remove() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.RemoveAllChildNodes">
            <summary>设置 Node.RemoveAllChildNodes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ToString">
            <summary>设置 Node.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ToStringFormatting">
            <summary>设置 Node.ToString(Formatting format) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ToStringFormattingInt32">
            <summary>设置 Node.ToString(Formatting format, Int32 indent) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ValueGet">
            <summary>设置 Node.get_Value() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNode.WriteTreeNodeXmlTextWriterNode">
            <summary>设置 Node.WriteTree(Node e, XmlTextWriter tw, Node parent) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimNodeList">
            <summary>agsXMPP.Xml.Dom.NodeList 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.#ctor(agsXMPP.Xml.Dom.NodeList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AddNode">
            <summary>设置 NodeList.Add(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.AddNode">
            <summary>设置 NodeList.Add(Node e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.ItemInt32">
            <summary>设置 NodeList.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.RebuildIndex">
            <summary>设置 NodeList.RebuildIndex() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.RebuildIndexInt32">
            <summary>设置 NodeList.RebuildIndex(Int32 start) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.RemoveElement">
            <summary>设置 NodeList.Remove(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.RemoveInt32">
            <summary>设置 NodeList.Remove(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.AllInstances.ToArray">
            <summary>设置 NodeList.ToArray() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimNodeList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.Constructor">
            <summary>设置 NodeList.NodeList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.ConstructorNode">
            <summary>设置 NodeList.NodeList(Node owner) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.ItemInt32">
            <summary>设置 NodeList.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.RebuildIndex">
            <summary>设置 NodeList.RebuildIndex() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.RebuildIndexInt32">
            <summary>设置 NodeList.RebuildIndex(Int32 start) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.RemoveElement">
            <summary>设置 NodeList.Remove(Element e) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.RemoveInt32">
            <summary>设置 NodeList.Remove(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimNodeList.ToArray">
            <summary>设置 NodeList.ToArray() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimText">
            <summary>agsXMPP.Xml.Dom.Text 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimText.#ctor(agsXMPP.Xml.Dom.Text)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.ShimText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.ShimText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimText.Constructor">
            <summary>设置 Text.Text() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.ShimText.ConstructorString">
            <summary>设置 Text.Text(String text) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubComment">
            <summary>agsXMPP.Xml.Dom.Comment 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubComment.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.AttachBackingFieldToValue">
            <summary>附加委托以将 StubComment.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubComment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.InitializeStub">
            <summary>初始化 type StubComment 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubComment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubComment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubComment.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubComment.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubComment.Value">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubComment.ValueGet">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubComment.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubDocument">
            <summary>agsXMPP.Xml.Dom.Document 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubDocument.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubDocument.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubDocument.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubDocument.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDocument.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubDocument.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubDocument.InitializeStub">
            <summary>初始化 type StubDocument 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubDocument.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubDocument.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubDocument.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubDocument.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubDocument.Value">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubDocument.ValueGet">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubDocument.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubElement">
            <summary>agsXMPP.Xml.Dom.Element 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElement.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.AttachBackingFieldToValue">
            <summary>附加委托以将 StubElement.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.InitializeStub">
            <summary>初始化 type StubElement 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElement.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElement.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElement.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElement.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElement.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubElementList">
            <summary>agsXMPP.Xml.Dom.ElementList 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElementList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.InitializeStub">
            <summary>初始化 type StubElementList 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElementList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubElementList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubElementList.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubElementList.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubNode">
            <summary>agsXMPP.Xml.Dom.Node 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNode.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNode.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNode.AttachBackingFieldToValue">
            <summary>附加委托以将 StubNode.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNode.InitializeStub">
            <summary>初始化 type StubNode 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNode.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNode.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNode.Value">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNode.ValueGet">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNode.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubNodeList">
            <summary>agsXMPP.Xml.Dom.NodeList 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.#ctor(agsXMPP.Xml.Dom.Node)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNodeList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.InitializeStub">
            <summary>初始化 type StubNodeList 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNodeList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubNodeList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubNodeList.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Dom.Fakes.StubText">
            <summary>agsXMPP.Xml.Dom.Text 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubText.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.AttachBackingFieldToValue">
            <summary>附加委托以将 StubText.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubText.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.InitializeStub">
            <summary>初始化 type StubText 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubText.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubText.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.Dom.Fakes.StubText.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubText.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.Dom.Fakes.StubText.Value">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubText.ValueGet">
            <summary>设置 Node.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.Dom.Fakes.StubText.ValueSetString">
            <summary>设置 Node.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.Fakes.ShimStreamParser">
            <summary>agsXMPP.Xml.StreamParser 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.ShimStreamParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.ShimStreamParser.#ctor(agsXMPP.Xml.StreamParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AddTextString">
            <summary>设置 StreamParser.AddText(String text) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.AddTextString">
            <summary>设置 StreamParser.AddText(String text) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.DepthGet">
            <summary>设置 StreamParser.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.DoRaiseOnStreamElementElement">
            <summary>设置 StreamParser.DoRaiseOnStreamElement(Element el) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.EndTagByteArrayInt32ContentTokenTOK">
            <summary>设置 StreamParser.EndTag(Byte[] buf, Int32 offset, ContentToken ct, TOK tok) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.NormalizeAttributeValueByteArrayInt32Int32">
            <summary>设置 StreamParser.NormalizeAttributeValue(Byte[] buf, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnErrorAddErrorHandler">
            <summary>设置 StreamParser.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnErrorRemoveErrorHandler">
            <summary>设置 StreamParser.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamElementAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamElement(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamElementRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamElement(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamEndAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamEnd(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamEndRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamEnd(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamErrorAddStreamError">
            <summary>设置 StreamParser.add_OnStreamError(StreamError value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamErrorRemoveStreamError">
            <summary>设置 StreamParser.remove_OnStreamError(StreamError value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamStartAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamStart(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.OnStreamStartRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamStart(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.PushByteArrayInt32Int32">
            <summary>设置 StreamParser.Push(Byte[] buf, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.Reset">
            <summary>设置 StreamParser.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.AllInstances.StartTagByteArrayInt32ContentTokenTOK">
            <summary>设置 StreamParser.StartTag(Byte[] buf, Int32 offset, ContentToken ct, TOK tok) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.ShimStreamParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.ShimStreamParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.Constructor">
            <summary>设置 StreamParser.StreamParser() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.DepthGet">
            <summary>设置 StreamParser.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.DoRaiseOnStreamElementElement">
            <summary>设置 StreamParser.DoRaiseOnStreamElement(Element el) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.EndTagByteArrayInt32ContentTokenTOK">
            <summary>设置 StreamParser.EndTag(Byte[] buf, Int32 offset, ContentToken ct, TOK tok) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.NormalizeAttributeValueByteArrayInt32Int32">
            <summary>设置 StreamParser.NormalizeAttributeValue(Byte[] buf, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnErrorAddErrorHandler">
            <summary>设置 StreamParser.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnErrorRemoveErrorHandler">
            <summary>设置 StreamParser.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamElementAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamElement(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamElementRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamElement(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamEndAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamEnd(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamEndRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamEnd(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamErrorAddStreamError">
            <summary>设置 StreamParser.add_OnStreamError(StreamError value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamErrorRemoveStreamError">
            <summary>设置 StreamParser.remove_OnStreamError(StreamError value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamStartAddStreamHandler">
            <summary>设置 StreamParser.add_OnStreamStart(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.OnStreamStartRemoveStreamHandler">
            <summary>设置 StreamParser.remove_OnStreamStart(StreamHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.PushByteArrayInt32Int32">
            <summary>设置 StreamParser.Push(Byte[] buf, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.Reset">
            <summary>设置 StreamParser.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.StartTagByteArrayInt32ContentTokenTOK">
            <summary>设置 StreamParser.StartTag(Byte[] buf, Int32 offset, ContentToken ct, TOK tok) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.ShimStreamParser.StaticConstructor">
            <summary>设置 StreamParser.StreamParser() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.Fakes.StubStreamParser">
            <summary>agsXMPP.Xml.StreamParser 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.StubStreamParser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.StubStreamParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.Fakes.StubStreamParser.InitializeStub">
            <summary>初始化 type StubStreamParser 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.StubStreamParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.Fakes.StubStreamParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate">
            <summary>agsXMPP.Xml.xpnet.BufferAggregate 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.#ctor(agsXMPP.Xml.xpnet.BufferAggregate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.AllInstances.ClearInt32">
            <summary>设置 BufferAggregate.Clear(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.AllInstances.GetBuffer">
            <summary>设置 BufferAggregate.GetBuffer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.AllInstances.ToString01">
            <summary>设置 BufferAggregate.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.AllInstances.WriteByteArray">
            <summary>设置 BufferAggregate.Write(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.ClearInt32">
            <summary>设置 BufferAggregate.Clear(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.Constructor">
            <summary>设置 BufferAggregate.BufferAggregate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.GetBuffer">
            <summary>设置 BufferAggregate.GetBuffer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.ToString">
            <summary>设置 BufferAggregate.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimBufferAggregate.WriteByteArray">
            <summary>设置 BufferAggregate.Write(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimContentToken">
            <summary>agsXMPP.Xml.xpnet.ContentToken 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.#ctor(agsXMPP.Xml.xpnet.ContentToken)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.appendAttributeInt32Int32Int32Int32Boolean">
            <summary>设置 ContentToken.appendAttribute(Int32 nameStart, Int32 nameEnd, Int32 valueStart, Int32 valueEnd, Boolean normalized) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.checkAttributeUniquenessByteArray">
            <summary>设置 ContentToken.checkAttributeUniqueness(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.clearAttributes">
            <summary>设置 ContentToken.clearAttributes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.getAttributeNameEndInt32">
            <summary>设置 ContentToken.getAttributeNameEnd(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.getAttributeNameStartInt32">
            <summary>设置 ContentToken.getAttributeNameStart(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.getAttributeSpecifiedCount">
            <summary>设置 ContentToken.getAttributeSpecifiedCount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.getAttributeValueEndInt32">
            <summary>设置 ContentToken.getAttributeValueEnd(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.getAttributeValueStartInt32">
            <summary>设置 ContentToken.getAttributeValueStart(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.AllInstances.isAttributeNormalizedInt32">
            <summary>设置 ContentToken.isAttributeNormalized(Int32 i) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.Constructor">
            <summary>设置 ContentToken.ContentToken() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.appendAttributeInt32Int32Int32Int32Boolean">
            <summary>设置 ContentToken.appendAttribute(Int32 nameStart, Int32 nameEnd, Int32 valueStart, Int32 valueEnd, Boolean normalized) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.checkAttributeUniquenessByteArray">
            <summary>设置 ContentToken.checkAttributeUniqueness(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.clearAttributes">
            <summary>设置 ContentToken.clearAttributes() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.getAttributeNameEndInt32">
            <summary>设置 ContentToken.getAttributeNameEnd(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.getAttributeNameStartInt32">
            <summary>设置 ContentToken.getAttributeNameStart(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.getAttributeSpecifiedCount">
            <summary>设置 ContentToken.getAttributeSpecifiedCount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.getAttributeValueEndInt32">
            <summary>设置 ContentToken.getAttributeValueEnd(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.getAttributeValueStartInt32">
            <summary>设置 ContentToken.getAttributeValueStart(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.growBooleanArray">
            <summary>设置 ContentToken.grow(Boolean[] v) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.growInt32Array">
            <summary>设置 ContentToken.grow(Int32[] v) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimContentToken.isAttributeNormalizedInt32">
            <summary>设置 ContentToken.isAttributeNormalized(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException">
            <summary>agsXMPP.Xml.xpnet.EmptyTokenException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.#ctor(agsXMPP.Xml.xpnet.EmptyTokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEmptyTokenException.Constructor">
            <summary>设置 EmptyTokenException.EmptyTokenException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEncoding">
            <summary>agsXMPP.Xml.xpnet.Encoding 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.#ctor(agsXMPP.Xml.xpnet.Encoding)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.MinBytesPerCharGet">
            <summary>设置 Encoding.get_MinBytesPerChar() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.adjustEndInt32Int32">
            <summary>设置 Encoding.adjustEnd(Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.byteType2ByteArrayInt32">
            <summary>设置 Encoding.byteType2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.byteType3ByteArrayInt32">
            <summary>设置 Encoding.byteType3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.byteType4ByteArrayInt32">
            <summary>设置 Encoding.byteType4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.check2ByteArrayInt32">
            <summary>设置 Encoding.check2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.check3ByteArrayInt32">
            <summary>设置 Encoding.check3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.check4ByteArrayInt32">
            <summary>设置 Encoding.check4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.checkCharMatchesByteArrayInt32Char">
            <summary>设置 Encoding.checkCharMatches(Byte[] buf, Int32 off, Char c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.extendCdataByteArrayInt32Int32">
            <summary>设置 Encoding.extendCdata(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.extendDataByteArrayInt32Int32">
            <summary>设置 Encoding.extendData(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.getEncodingString">
            <summary>设置 Encoding.getEncoding(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.getPublicIdByteArrayInt32Int32">
            <summary>设置 Encoding.getPublicId(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.getSingleByteEncodingString">
            <summary>设置 Encoding.getSingleByteEncoding(String map) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.isMagicEntityRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.isMagicEntityRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.isNameChar2ByteArrayInt32">
            <summary>设置 Encoding.isNameChar2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.isNameChar3ByteArrayInt32">
            <summary>设置 Encoding.isNameChar3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.isNameChar4ByteArrayInt32">
            <summary>设置 Encoding.isNameChar4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.matchesXMLstringByteArrayInt32Int32String">
            <summary>设置 Encoding.matchesXMLstring(Byte[] buf, Int32 off, Int32 end, String str) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanAttsInt32ByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.scanAtts(Int32 nameStart, Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanCdataSectionByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanCdataSection(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanCharRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanCharRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanCommentByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanComment(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanDeclByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanDecl(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanEndTagByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanEndTag(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanHexCharRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanHexCharRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanLitInt32ByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanLit(Int32 open, Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanLtByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.scanLt(Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanPercentByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPercent(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanPiByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPi(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanPoundNameByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPoundName(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.scanRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.setRefCharInt32Token">
            <summary>设置 Encoding.setRefChar(Int32 num, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.skipIgnoreSectByteArrayInt32Int32">
            <summary>设置 Encoding.skipIgnoreSect(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.skipSByteArrayInt32Int32">
            <summary>设置 Encoding.skipS(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.targetIsXmlByteArrayInt32Int32">
            <summary>设置 Encoding.targetIsXml(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.tokenizeAttributeValueByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeAttributeValue(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.tokenizeCdataSectionByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeCdataSection(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.tokenizeContentByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.tokenizeContent(Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.tokenizeEntityValueByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeEntityValue(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.AllInstances.tokenizePrologByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeProlog(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.ConstructorInt32">
            <summary>设置 Encoding.Encoding(Int32 minBPC) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.MinBytesPerCharGet">
            <summary>设置 Encoding.get_MinBytesPerChar() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.StaticConstructor">
            <summary>设置 Encoding.Encoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.adjustEndInt32Int32">
            <summary>设置 Encoding.adjustEnd(Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.byteType2ByteArrayInt32">
            <summary>设置 Encoding.byteType2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.byteType3ByteArrayInt32">
            <summary>设置 Encoding.byteType3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.byteType4ByteArrayInt32">
            <summary>设置 Encoding.byteType4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.check2ByteArrayInt32">
            <summary>设置 Encoding.check2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.check3ByteArrayInt32">
            <summary>设置 Encoding.check3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.check4ByteArrayInt32">
            <summary>设置 Encoding.check4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.checkCharMatchesByteArrayInt32Char">
            <summary>设置 Encoding.checkCharMatches(Byte[] buf, Int32 off, Char c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.extendCdataByteArrayInt32Int32">
            <summary>设置 Encoding.extendCdata(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.extendDataByteArrayInt32Int32">
            <summary>设置 Encoding.extendData(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getEncodingByte">
            <summary>设置 Encoding.getEncoding(Byte enc) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getEncodingString">
            <summary>设置 Encoding.getEncoding(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getInitialEncodingByteArrayInt32Int32Token">
            <summary>设置 Encoding.getInitialEncoding(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getInternalEncoding">
            <summary>设置 Encoding.getInternalEncoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getPublicIdByteArrayInt32Int32">
            <summary>设置 Encoding.getPublicId(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.getSingleByteEncodingString">
            <summary>设置 Encoding.getSingleByteEncoding(String map) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.isMagicEntityRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.isMagicEntityRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.isNameChar2ByteArrayInt32">
            <summary>设置 Encoding.isNameChar2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.isNameChar3ByteArrayInt32">
            <summary>设置 Encoding.isNameChar3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.isNameChar4ByteArrayInt32">
            <summary>设置 Encoding.isNameChar4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.matchesXMLstringByteArrayInt32Int32String">
            <summary>设置 Encoding.matchesXMLstring(Byte[] buf, Int32 off, Int32 end, String str) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanAttsInt32ByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.scanAtts(Int32 nameStart, Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanCdataSectionByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanCdataSection(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanCharRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanCharRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanCommentByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanComment(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanDeclByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanDecl(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanEndTagByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanEndTag(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanHexCharRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanHexCharRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanLitInt32ByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanLit(Int32 open, Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanLtByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.scanLt(Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanPercentByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPercent(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanPiByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPi(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanPoundNameByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanPoundName(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.scanRefByteArrayInt32Int32Token">
            <summary>设置 Encoding.scanRef(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.setCharTypeCharCharInt32">
            <summary>设置 Encoding.setCharType(Char min, Char max, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.setCharTypeCharInt32">
            <summary>设置 Encoding.setCharType(Char c, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.setRefCharInt32Token">
            <summary>设置 Encoding.setRefChar(Int32 num, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.skipIgnoreSectByteArrayInt32Int32">
            <summary>设置 Encoding.skipIgnoreSect(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.skipSByteArrayInt32Int32">
            <summary>设置 Encoding.skipS(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.targetIsXmlByteArrayInt32Int32">
            <summary>设置 Encoding.targetIsXml(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.tokenizeAttributeValueByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeAttributeValue(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.tokenizeCdataSectionByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeCdataSection(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.tokenizeContentByteArrayInt32Int32ContentToken">
            <summary>设置 Encoding.tokenizeContent(Byte[] buf, Int32 off, Int32 end, ContentToken token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.tokenizeEntityValueByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeEntityValue(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEncoding.tokenizePrologByteArrayInt32Int32Token">
            <summary>设置 Encoding.tokenizeProlog(Byte[] buf, Int32 off, Int32 end, Token token) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException">
            <summary>agsXMPP.Xml.xpnet.EndOfPrologException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.#ctor(agsXMPP.Xml.xpnet.EndOfPrologException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimEndOfPrologException.Constructor">
            <summary>设置 EndOfPrologException.EndOfPrologException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException">
            <summary>agsXMPP.Xml.xpnet.ExtensibleTokenException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.#ctor(agsXMPP.Xml.xpnet.ExtensibleTokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.AllInstances.TokenTypeGet">
            <summary>设置 ExtensibleTokenException.get_TokenType() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.ConstructorTOK">
            <summary>设置 ExtensibleTokenException.ExtensibleTokenException(TOK tokType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimExtensibleTokenException.TokenTypeGet">
            <summary>设置 ExtensibleTokenException.get_TokenType() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException">
            <summary>agsXMPP.Xml.xpnet.InvalidTokenException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.#ctor(agsXMPP.Xml.xpnet.InvalidTokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.AllInstances.OffsetGet">
            <summary>设置 InvalidTokenException.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.AllInstances.TypeGet">
            <summary>设置 InvalidTokenException.get_Type() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.ConstructorInt32">
            <summary>设置 InvalidTokenException.InvalidTokenException(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.ConstructorInt32Byte">
            <summary>设置 InvalidTokenException.InvalidTokenException(Int32 offset, Byte type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.OffsetGet">
            <summary>设置 InvalidTokenException.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimInvalidTokenException.TypeGet">
            <summary>设置 InvalidTokenException.get_Type() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimNS">
            <summary>agsXMPP.Xml.xpnet.NS 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimNS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimNS.#ctor(agsXMPP.Xml.xpnet.NS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AddNamespaceStringString">
            <summary>设置 NS.AddNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.AddNamespaceStringString">
            <summary>设置 NS.AddNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.Clear">
            <summary>设置 NS.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.DefaultNamespaceGet">
            <summary>设置 NS.get_DefaultNamespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.LookupNamespaceString">
            <summary>设置 NS.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.PopScope">
            <summary>设置 NS.PopScope() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.PushScope">
            <summary>设置 NS.PushScope() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.AllInstances.ToString01">
            <summary>设置 NS.ToString() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimNS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimNS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.Clear">
            <summary>设置 NS.Clear() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.Constructor">
            <summary>设置 NS.NS() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.DefaultNamespaceGet">
            <summary>设置 NS.get_DefaultNamespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.LookupNamespaceString">
            <summary>设置 NS.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.PopScope">
            <summary>设置 NS.PopScope() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.PushScope">
            <summary>设置 NS.PushScope() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimNS.ToString">
            <summary>设置 NS.ToString() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException">
            <summary>agsXMPP.Xml.xpnet.PartialCharException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.#ctor(agsXMPP.Xml.xpnet.PartialCharException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.AllInstances.LeadByteIndexGet">
            <summary>设置 PartialCharException.get_LeadByteIndex() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.ConstructorInt32">
            <summary>设置 PartialCharException.PartialCharException(Int32 leadByteIndex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialCharException.LeadByteIndexGet">
            <summary>设置 PartialCharException.get_LeadByteIndex() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException">
            <summary>agsXMPP.Xml.xpnet.PartialTokenException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.#ctor(agsXMPP.Xml.xpnet.PartialTokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPartialTokenException.Constructor">
            <summary>设置 PartialTokenException.PartialTokenException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPosition">
            <summary>agsXMPP.Xml.xpnet.Position 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPosition.#ctor(agsXMPP.Xml.xpnet.Position)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances.Clone">
            <summary>设置 Position.Clone() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances.ColumnNumberGet">
            <summary>设置 Position.get_ColumnNumber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances.ColumnNumberSetInt32">
            <summary>设置 Position.set_ColumnNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances.LineNumberGet">
            <summary>设置 Position.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.AllInstances.LineNumberSetInt32">
            <summary>设置 Position.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimPosition.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.Clone">
            <summary>设置 Position.Clone() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.ColumnNumberGet">
            <summary>设置 Position.get_ColumnNumber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.ColumnNumberSetInt32">
            <summary>设置 Position.set_ColumnNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.Constructor">
            <summary>设置 Position.Position() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.LineNumberGet">
            <summary>设置 Position.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimPosition.LineNumberSetInt32">
            <summary>设置 Position.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimToken">
            <summary>agsXMPP.Xml.xpnet.Token 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimToken.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimToken.#ctor(agsXMPP.Xml.xpnet.Token)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.NameEndGet">
            <summary>设置 Token.get_NameEnd() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.NameEndSetInt32">
            <summary>设置 Token.set_NameEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.RefChar1Get">
            <summary>设置 Token.get_RefChar1() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.RefChar1SetChar">
            <summary>设置 Token.set_RefChar1(Char value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.RefChar2Get">
            <summary>设置 Token.get_RefChar2() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.RefChar2SetChar">
            <summary>设置 Token.set_RefChar2(Char value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.TokenEndGet">
            <summary>设置 Token.get_TokenEnd() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.AllInstances.TokenEndSetInt32">
            <summary>设置 Token.set_TokenEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimToken.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimToken.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.Constructor">
            <summary>设置 Token.Token() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.NameEndGet">
            <summary>设置 Token.get_NameEnd() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.NameEndSetInt32">
            <summary>设置 Token.set_NameEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.RefChar1Get">
            <summary>设置 Token.get_RefChar1() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.RefChar1SetChar">
            <summary>设置 Token.set_RefChar1(Char value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.RefChar2Get">
            <summary>设置 Token.get_RefChar2() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.RefChar2SetChar">
            <summary>设置 Token.set_RefChar2(Char value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.TokenEndGet">
            <summary>设置 Token.get_TokenEnd() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimToken.TokenEndSetInt32">
            <summary>设置 Token.set_TokenEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimTokenException">
            <summary>agsXMPP.Xml.xpnet.TokenException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.#ctor(agsXMPP.Xml.xpnet.TokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimTokenException.Constructor">
            <summary>设置 TokenException.TokenException() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding">
            <summary>agsXMPP.Xml.xpnet.UTF8Encoding 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.#ctor(agsXMPP.Xml.xpnet.UTF8Encoding)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.byteToAsciiByteArrayInt32">
            <summary>设置 UTF8Encoding.byteToAscii(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.byteType2ByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.byteType3ByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.byteTypeByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.charMatchesByteArrayInt32Char">
            <summary>设置 UTF8Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.check3ByteArrayInt32">
            <summary>设置 UTF8Encoding.check3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.check4ByteArrayInt32">
            <summary>设置 UTF8Encoding.check4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.convertByteArrayInt32Int32CharArrayInt32">
            <summary>设置 UTF8Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.extendDataByteArrayInt32Int32">
            <summary>设置 UTF8Encoding.extendData(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.AllInstances.movePositionByteArrayInt32Int32Position">
            <summary>设置 UTF8Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.Constructor">
            <summary>设置 UTF8Encoding.UTF8Encoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.StaticConstructor">
            <summary>设置 UTF8Encoding.UTF8Encoding() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.byteToAsciiByteArrayInt32">
            <summary>设置 UTF8Encoding.byteToAscii(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.byteType2ByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType2(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.byteType3ByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.byteTypeByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.charMatchesByteArrayInt32Char">
            <summary>设置 UTF8Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.check3ByteArrayInt32">
            <summary>设置 UTF8Encoding.check3(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.check4ByteArrayInt32">
            <summary>设置 UTF8Encoding.check4(Byte[] buf, Int32 off) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.convertByteArrayInt32Int32CharArrayInt32">
            <summary>设置 UTF8Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.extendDataByteArrayInt32Int32">
            <summary>设置 UTF8Encoding.extendData(Byte[] buf, Int32 off, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.ShimUTF8Encoding.movePositionByteArrayInt32Int32Position">
            <summary>设置 UTF8Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate">
            <summary>agsXMPP.Xml.xpnet.BufferAggregate 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.InitializeStub">
            <summary>初始化 type StubBufferAggregate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.ToString">
            <summary>设置 BufferAggregate.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubBufferAggregate.ToString01">
            <summary>设置 BufferAggregate.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubContentToken">
            <summary>agsXMPP.Xml.xpnet.ContentToken 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubContentToken.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubContentToken.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubContentToken.InitializeStub">
            <summary>初始化 type StubContentToken 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubContentToken.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubContentToken.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException">
            <summary>agsXMPP.Xml.xpnet.EmptyTokenException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubEmptyTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubEmptyTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.InitializeStub">
            <summary>初始化 type StubEmptyTokenException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEmptyTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubEncoding">
            <summary>agsXMPP.Xml.xpnet.Encoding 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.ByteToAsciiByteArrayInt32">
            <summary>设置 Encoding.byteToAscii(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.ByteType2ByteArrayInt32">
            <summary>设置 Encoding.byteType2(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.ByteTypeByteArrayInt32">
            <summary>设置 Encoding.byteType(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEncoding.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.CharMatchesByteArrayInt32Char">
            <summary>设置 Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.ConvertByteArrayInt32Int32CharArrayInt32">
            <summary>设置 Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.InitializeStub">
            <summary>初始化 type StubEncoding 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEncoding.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEncoding.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEncoding.MovePositionByteArrayInt32Int32Position">
            <summary>设置 Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.byteToAscii(System.Byte[],System.Int32)">
            <summary>设置 Encoding.byteToAscii(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.byteType(System.Byte[],System.Int32)">
            <summary>设置 Encoding.byteType(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.byteType2(System.Byte[],System.Int32)">
            <summary>设置 Encoding.byteType2(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.charMatches(System.Byte[],System.Int32,System.Char)">
            <summary>设置 Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>设置 Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEncoding.movePosition(System.Byte[],System.Int32,System.Int32,agsXMPP.Xml.xpnet.Position)">
            <summary>设置 Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 存根</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException">
            <summary>agsXMPP.Xml.xpnet.EndOfPrologException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubEndOfPrologException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubEndOfPrologException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.InitializeStub">
            <summary>初始化 type StubEndOfPrologException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubEndOfPrologException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException">
            <summary>agsXMPP.Xml.xpnet.ExtensibleTokenException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.#ctor(agsXMPP.Xml.xpnet.TOK)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubExtensibleTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubExtensibleTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.InitializeStub">
            <summary>初始化 type StubExtensibleTokenException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubExtensibleTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException">
            <summary>agsXMPP.Xml.xpnet.InvalidTokenException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.#ctor(System.Int32,System.Byte)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.InitializeStub">
            <summary>初始化 type StubInvalidTokenException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubInvalidTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubNS">
            <summary>agsXMPP.Xml.xpnet.NS 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubNS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubNS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubNS.InitializeStub">
            <summary>初始化 type StubNS 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubNS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubNS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubNS.ToString">
            <summary>设置 NS.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubNS.ToString01">
            <summary>设置 NS.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException">
            <summary>agsXMPP.Xml.xpnet.PartialCharException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubPartialCharException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubPartialCharException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.InitializeStub">
            <summary>初始化 type StubPartialCharException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialCharException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException">
            <summary>agsXMPP.Xml.xpnet.PartialTokenException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubPartialTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubPartialTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.InitializeStub">
            <summary>初始化 type StubPartialTokenException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubPartialTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubPosition">
            <summary>agsXMPP.Xml.xpnet.Position 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPosition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPosition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubPosition.InitializeStub">
            <summary>初始化 type StubPosition 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPosition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubPosition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubToken">
            <summary>agsXMPP.Xml.xpnet.Token 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubToken.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubToken.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubToken.InitializeStub">
            <summary>初始化 type StubToken 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubToken.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubToken.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubTokenException">
            <summary>agsXMPP.Xml.xpnet.TokenException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.InitializeStub">
            <summary>初始化 type StubTokenException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding">
            <summary>agsXMPP.Xml.xpnet.UTF8Encoding 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.ByteToAsciiByteArrayInt32">
            <summary>设置 UTF8Encoding.byteToAscii(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.ByteType2ByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType2(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.ByteTypeByteArrayInt32">
            <summary>设置 UTF8Encoding.byteType(Byte[] buf, Int32 off) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.CharMatchesByteArrayInt32Char">
            <summary>设置 UTF8Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.ConvertByteArrayInt32Int32CharArrayInt32">
            <summary>设置 UTF8Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.InitializeStub">
            <summary>初始化 type StubUTF8Encoding 的新实例</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="F:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.MovePositionByteArrayInt32Int32Position">
            <summary>设置 UTF8Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.byteToAscii(System.Byte[],System.Int32)">
            <summary>设置 UTF8Encoding.byteToAscii(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.byteType(System.Byte[],System.Int32)">
            <summary>设置 UTF8Encoding.byteType(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.byteType2(System.Byte[],System.Int32)">
            <summary>设置 UTF8Encoding.byteType2(Byte[] buf, Int32 off) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.charMatches(System.Byte[],System.Int32,System.Char)">
            <summary>设置 UTF8Encoding.charMatches(Byte[] buf, Int32 off, Char c) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>设置 UTF8Encoding.convert(Byte[] sourceBuf, Int32 sourceStart, Int32 sourceEnd, Char[] targetBuf, Int32 targetStart) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.Xml.xpnet.Fakes.StubUTF8Encoding.movePosition(System.Byte[],System.Int32,System.Int32,agsXMPP.Xml.xpnet.Position)">
            <summary>设置 UTF8Encoding.movePosition(Byte[] buf, Int32 off, Int32 end, Position pos) 的 存根</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimJidException">
            <summary>agsXMPP.exceptions.JidException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimJidException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimJidException.#ctor(agsXMPP.exceptions.JidException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimJidException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimJidException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimJidException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimJidException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimJidException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimJidException.Constructor">
            <summary>设置 JidException.JidException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimJidException.ConstructorString">
            <summary>设置 JidException.JidException(String msg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimRegisterException">
            <summary>agsXMPP.exceptions.RegisterException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimRegisterException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimRegisterException.#ctor(agsXMPP.exceptions.RegisterException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimRegisterException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimRegisterException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimRegisterException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimRegisterException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimRegisterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimRegisterException.Constructor">
            <summary>设置 RegisterException.RegisterException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimRegisterException.ConstructorString">
            <summary>设置 RegisterException.RegisterException(String msg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimXmlRpcException">
            <summary>agsXMPP.exceptions.XmlRpcException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimXmlRpcException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimXmlRpcException.#ctor(agsXMPP.exceptions.XmlRpcException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.ShimXmlRpcException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.AllInstances.CodeGet">
            <summary>设置 XmlRpcException.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.AllInstances.CodeSetInt32">
            <summary>设置 XmlRpcException.set_Code(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimXmlRpcException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimXmlRpcException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.ShimXmlRpcException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.CodeGet">
            <summary>设置 XmlRpcException.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.CodeSetInt32">
            <summary>设置 XmlRpcException.set_Code(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.Constructor">
            <summary>设置 XmlRpcException.XmlRpcException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.ConstructorInt32String">
            <summary>设置 XmlRpcException.XmlRpcException(Int32 code, String msg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.ShimXmlRpcException.ConstructorString">
            <summary>设置 XmlRpcException.XmlRpcException(String msg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.StubJidException">
            <summary>agsXMPP.exceptions.JidException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubJidException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubJidException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.InitializeStub">
            <summary>初始化 type StubJidException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubJidException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubJidException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubJidException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.StubRegisterException">
            <summary>agsXMPP.exceptions.RegisterException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubRegisterException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubRegisterException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.InitializeStub">
            <summary>初始化 type StubRegisterException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubRegisterException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubRegisterException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubRegisterException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.exceptions.Fakes.StubXmlRpcException">
            <summary>agsXMPP.exceptions.XmlRpcException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.#ctor(System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXmlRpcException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXmlRpcException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.InitializeStub">
            <summary>初始化 type StubXmlRpcException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.exceptions.Fakes.StubXmlRpcException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.exceptions.Fakes.StubXmlRpcException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.exceptions.Fakes.StubXmlRpcException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimBaseSocket">
            <summary>agsXMPP.net.BaseSocket 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBaseSocket.#ctor(agsXMPP.net.BaseSocket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AddressGet">
            <summary>设置 BaseSocket.get_Address() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AddressSetString">
            <summary>设置 BaseSocket.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.AddressGet">
            <summary>设置 BaseSocket.get_Address() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.AddressSetString">
            <summary>设置 BaseSocket.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.Connect">
            <summary>设置 BaseSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.ConnectedGet">
            <summary>设置 BaseSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.Disconnect">
            <summary>设置 BaseSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.FireOnConnect">
            <summary>设置 BaseSocket.FireOnConnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.FireOnDisconnect">
            <summary>设置 BaseSocket.FireOnDisconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.FireOnErrorException">
            <summary>设置 BaseSocket.FireOnError(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.FireOnReceiveByteArrayInt32">
            <summary>设置 BaseSocket.FireOnReceive(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.FireOnSendByteArrayInt32">
            <summary>设置 BaseSocket.FireOnSend(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnConnectAddObjectHandler">
            <summary>设置 BaseSocket.add_OnConnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnConnectRemoveObjectHandler">
            <summary>设置 BaseSocket.remove_OnConnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnDisconnectAddObjectHandler">
            <summary>设置 BaseSocket.add_OnDisconnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnDisconnectRemoveObjectHandler">
            <summary>设置 BaseSocket.remove_OnDisconnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnErrorAddErrorHandler">
            <summary>设置 BaseSocket.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnErrorRemoveErrorHandler">
            <summary>设置 BaseSocket.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnReceiveAddBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.add_OnReceive(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnReceiveRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.remove_OnReceive(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnSendAddBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.add_OnSend(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnSendRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.remove_OnSend(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnValidateCertificateAddRemoteCertificateValidationCallback">
            <summary>设置 BaseSocket.add_OnValidateCertificate(RemoteCertificateValidationCallback value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.OnValidateCertificateRemoveRemoteCertificateValidationCallback">
            <summary>设置 BaseSocket.remove_OnValidateCertificate(RemoteCertificateValidationCallback value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.PortGet">
            <summary>设置 BaseSocket.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.PortSetInt32">
            <summary>设置 BaseSocket.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.Reset">
            <summary>设置 BaseSocket.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.SendByteArray">
            <summary>设置 BaseSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.SendString">
            <summary>设置 BaseSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.StartCompression">
            <summary>设置 BaseSocket.StartCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.StartTls">
            <summary>设置 BaseSocket.StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.AllInstances.SupportsStartTlsGet">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBaseSocket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBaseSocket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.Connect">
            <summary>设置 BaseSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.ConnectedGet">
            <summary>设置 BaseSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.Constructor">
            <summary>设置 BaseSocket.BaseSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.Disconnect">
            <summary>设置 BaseSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.FireOnConnect">
            <summary>设置 BaseSocket.FireOnConnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.FireOnDisconnect">
            <summary>设置 BaseSocket.FireOnDisconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.FireOnErrorException">
            <summary>设置 BaseSocket.FireOnError(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.FireOnReceiveByteArrayInt32">
            <summary>设置 BaseSocket.FireOnReceive(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.FireOnSendByteArrayInt32">
            <summary>设置 BaseSocket.FireOnSend(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnConnectAddObjectHandler">
            <summary>设置 BaseSocket.add_OnConnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnConnectRemoveObjectHandler">
            <summary>设置 BaseSocket.remove_OnConnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnDisconnectAddObjectHandler">
            <summary>设置 BaseSocket.add_OnDisconnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnDisconnectRemoveObjectHandler">
            <summary>设置 BaseSocket.remove_OnDisconnect(ObjectHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnErrorAddErrorHandler">
            <summary>设置 BaseSocket.add_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnErrorRemoveErrorHandler">
            <summary>设置 BaseSocket.remove_OnError(ErrorHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnReceiveAddBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.add_OnReceive(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnReceiveRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.remove_OnReceive(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnSendAddBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.add_OnSend(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnSendRemoveBaseSocketOnSocketDataHandler">
            <summary>设置 BaseSocket.remove_OnSend(OnSocketDataHandler value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnValidateCertificateAddRemoteCertificateValidationCallback">
            <summary>设置 BaseSocket.add_OnValidateCertificate(RemoteCertificateValidationCallback value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.OnValidateCertificateRemoveRemoteCertificateValidationCallback">
            <summary>设置 BaseSocket.remove_OnValidateCertificate(RemoteCertificateValidationCallback value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.PortGet">
            <summary>设置 BaseSocket.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.PortSetInt32">
            <summary>设置 BaseSocket.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.Reset">
            <summary>设置 BaseSocket.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.SendByteArray">
            <summary>设置 BaseSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.SendString">
            <summary>设置 BaseSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.StartCompression">
            <summary>设置 BaseSocket.StartCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.StartTls">
            <summary>设置 BaseSocket.StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBaseSocket.SupportsStartTlsGet">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimBoshClientSocket">
            <summary>agsXMPP.net.BoshClientSocket 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBoshClientSocket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBoshClientSocket.#ctor(agsXMPP.net.BoshClientSocket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.BuildPostData">
            <summary>设置 BoshClientSocket.BuildPostData() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.Connect">
            <summary>设置 BoshClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.Disconnect">
            <summary>设置 BoshClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.DummyStreamHeaderGet">
            <summary>设置 BoshClientSocket.get_DummyStreamHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.GenerateKeys">
            <summary>设置 BoshClientSocket.GenerateKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.GenerateRid">
            <summary>设置 BoshClientSocket.GenerateRid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.GenerateSeed">
            <summary>设置 BoshClientSocket.GenerateSeed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.GetRandomNumberInt32Int32">
            <summary>设置 BoshClientSocket.GetRandomNumber(Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.HoldGet">
            <summary>设置 BoshClientSocket.get_Hold() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.HoldSetInt32">
            <summary>设置 BoshClientSocket.set_Hold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.Init">
            <summary>设置 BoshClientSocket.Init() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.KeepAliveGet">
            <summary>设置 BoshClientSocket.get_KeepAlive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.KeepAliveSetBoolean">
            <summary>设置 BoshClientSocket.set_KeepAlive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MaxCountKeysGet">
            <summary>设置 BoshClientSocket.get_MaxCountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MaxCountKeysSetInt32">
            <summary>设置 BoshClientSocket.set_MaxCountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MaxPauseGet">
            <summary>设置 BoshClientSocket.get_MaxPause() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MaxPauseSetInt32">
            <summary>设置 BoshClientSocket.set_MaxPause(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MinCountKeysGet">
            <summary>设置 BoshClientSocket.get_MinCountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.MinCountKeysSetInt32">
            <summary>设置 BoshClientSocket.set_MinCountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.OnEndWriteIAsyncResult">
            <summary>设置 BoshClientSocket.OnEndWrite(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.OnGetRequestStreamIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetRequestStream(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.OnGetResponseIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetResponse(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.OnGetSessionRequestResponseIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetSessionRequestResponse(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.OnGetSessionRequestStreamIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetSessionRequestStream(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.ParseResponseStringStringRefStringRef">
            <summary>设置 BoshClientSocket.ParseResponse(String res, String&amp; body, String&amp; stanzas) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.RequestBoshSession">
            <summary>设置 BoshClientSocket.RequestBoshSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.RequestsGet">
            <summary>设置 BoshClientSocket.get_Requests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.RequestsSetInt32">
            <summary>设置 BoshClientSocket.set_Requests(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.Reset">
            <summary>设置 BoshClientSocket.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.SendByteArray">
            <summary>设置 BoshClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.SendString">
            <summary>设置 BoshClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.StartWebRequest">
            <summary>设置 BoshClientSocket.StartWebRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.StartWebRequestBooleanString">
            <summary>设置 BoshClientSocket.StartWebRequest(Boolean retry, String content) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.SupportsSessionPausingGet">
            <summary>设置 BoshClientSocket.get_SupportsSessionPausing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.TerminateBoshSession">
            <summary>设置 BoshClientSocket.TerminateBoshSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.TimeOutGetRequestStreamObject">
            <summary>设置 BoshClientSocket.TimeOutGetRequestStream(Object stateObj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.ToGet">
            <summary>设置 BoshClientSocket.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.ToSetJid">
            <summary>设置 BoshClientSocket.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.WaitGet">
            <summary>设置 BoshClientSocket.get_Wait() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.AllInstances.WaitSetInt32">
            <summary>设置 BoshClientSocket.set_Wait(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBoshClientSocket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimBoshClientSocket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.BuildPostData">
            <summary>设置 BoshClientSocket.BuildPostData() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.Connect">
            <summary>设置 BoshClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.ConstructorXmppConnection">
            <summary>设置 BoshClientSocket.BoshClientSocket(XmppConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.Disconnect">
            <summary>设置 BoshClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.DummyStreamHeaderGet">
            <summary>设置 BoshClientSocket.get_DummyStreamHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.GenerateKeys">
            <summary>设置 BoshClientSocket.GenerateKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.GenerateRid">
            <summary>设置 BoshClientSocket.GenerateRid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.GenerateSeed">
            <summary>设置 BoshClientSocket.GenerateSeed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.GetRandomNumberInt32Int32">
            <summary>设置 BoshClientSocket.GetRandomNumber(Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.HoldGet">
            <summary>设置 BoshClientSocket.get_Hold() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.HoldSetInt32">
            <summary>设置 BoshClientSocket.set_Hold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.Init">
            <summary>设置 BoshClientSocket.Init() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.KeepAliveGet">
            <summary>设置 BoshClientSocket.get_KeepAlive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.KeepAliveSetBoolean">
            <summary>设置 BoshClientSocket.set_KeepAlive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MaxCountKeysGet">
            <summary>设置 BoshClientSocket.get_MaxCountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MaxCountKeysSetInt32">
            <summary>设置 BoshClientSocket.set_MaxCountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MaxPauseGet">
            <summary>设置 BoshClientSocket.get_MaxPause() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MaxPauseSetInt32">
            <summary>设置 BoshClientSocket.set_MaxPause(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MinCountKeysGet">
            <summary>设置 BoshClientSocket.get_MinCountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.MinCountKeysSetInt32">
            <summary>设置 BoshClientSocket.set_MinCountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.OnEndWriteIAsyncResult">
            <summary>设置 BoshClientSocket.OnEndWrite(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.OnGetRequestStreamIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetRequestStream(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.OnGetResponseIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetResponse(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.OnGetSessionRequestResponseIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetSessionRequestResponse(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.OnGetSessionRequestStreamIAsyncResult">
            <summary>设置 BoshClientSocket.OnGetSessionRequestStream(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.ParseResponseStringStringRefStringRef">
            <summary>设置 BoshClientSocket.ParseResponse(String res, String&amp; body, String&amp; stanzas) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.RequestBoshSession">
            <summary>设置 BoshClientSocket.RequestBoshSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.RequestsGet">
            <summary>设置 BoshClientSocket.get_Requests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.RequestsSetInt32">
            <summary>设置 BoshClientSocket.set_Requests(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.Reset">
            <summary>设置 BoshClientSocket.Reset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.SendByteArray">
            <summary>设置 BoshClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.SendString">
            <summary>设置 BoshClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.StartWebRequest">
            <summary>设置 BoshClientSocket.StartWebRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.StartWebRequestBooleanString">
            <summary>设置 BoshClientSocket.StartWebRequest(Boolean retry, String content) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.SupportsSessionPausingGet">
            <summary>设置 BoshClientSocket.get_SupportsSessionPausing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.TerminateBoshSession">
            <summary>设置 BoshClientSocket.TerminateBoshSession() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.TimeOutGetRequestStreamObject">
            <summary>设置 BoshClientSocket.TimeOutGetRequestStream(Object stateObj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.ToGet">
            <summary>设置 BoshClientSocket.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.ToSetJid">
            <summary>设置 BoshClientSocket.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.WaitGet">
            <summary>设置 BoshClientSocket.get_Wait() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimBoshClientSocket.WaitSetInt32">
            <summary>设置 BoshClientSocket.set_Wait(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimClientSocket">
            <summary>agsXMPP.net.ClientSocket 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimClientSocket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimClientSocket.#ctor(agsXMPP.net.ClientSocket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimClientSocket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.CompressByteArray">
            <summary>设置 ClientSocket.Compress(Byte[] bIn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.CompressedGet">
            <summary>设置 ClientSocket.get_Compressed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.CompressedSetBoolean">
            <summary>设置 ClientSocket.set_Compressed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.Connect">
            <summary>设置 ClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.ConnectStringInt32">
            <summary>设置 ClientSocket.Connect(String address, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.ConnectedGet">
            <summary>设置 ClientSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.DecompressByteArrayInt32">
            <summary>设置 ClientSocket.Decompress(Byte[] bIn, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.Disconnect">
            <summary>设置 ClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.DisplayCertificateInformationSslStream">
            <summary>设置 ClientSocket.DisplayCertificateInformation(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.DisplaySecurityLevelSslStream">
            <summary>设置 ClientSocket.DisplaySecurityLevel(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.DisplaySecurityServicesSslStream">
            <summary>设置 ClientSocket.DisplaySecurityServices(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.DisplayStreamPropertiesSslStream">
            <summary>设置 ClientSocket.DisplayStreamProperties(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.EndConnectIAsyncResult">
            <summary>设置 ClientSocket.EndConnect(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.EndReceiveIAsyncResult">
            <summary>设置 ClientSocket.EndReceive(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.EndSendIAsyncResult">
            <summary>设置 ClientSocket.EndSend(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.InitCompression">
            <summary>设置 ClientSocket.InitCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.InitSSL">
            <summary>设置 ClientSocket.InitSSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.InitSSLSslProtocols">
            <summary>设置 ClientSocket.InitSSL(SslProtocols protocol) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.Receive">
            <summary>设置 ClientSocket.Receive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.SSLGet">
            <summary>设置 ClientSocket.get_SSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.SSLSetBoolean">
            <summary>设置 ClientSocket.set_SSL(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.SendByteArray">
            <summary>设置 ClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.SendString">
            <summary>设置 ClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.StartCompression">
            <summary>设置 ClientSocket.StartCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.StartTls">
            <summary>设置 ClientSocket.StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.SupportsStartTlsGet">
            <summary>设置 ClientSocket.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.AllInstances.connectTimeoutTimerDelegateObject">
            <summary>设置 ClientSocket.connectTimeoutTimerDelegate(Object stateInfo) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimClientSocket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimClientSocket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.CompressByteArray">
            <summary>设置 ClientSocket.Compress(Byte[] bIn) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.CompressedGet">
            <summary>设置 ClientSocket.get_Compressed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.CompressedSetBoolean">
            <summary>设置 ClientSocket.set_Compressed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.Connect">
            <summary>设置 ClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.ConnectStringInt32">
            <summary>设置 ClientSocket.Connect(String address, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.ConnectedGet">
            <summary>设置 ClientSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.Constructor">
            <summary>设置 ClientSocket.ClientSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.DecompressByteArrayInt32">
            <summary>设置 ClientSocket.Decompress(Byte[] bIn, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.Disconnect">
            <summary>设置 ClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.DisplayCertificateInformationSslStream">
            <summary>设置 ClientSocket.DisplayCertificateInformation(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.DisplaySecurityLevelSslStream">
            <summary>设置 ClientSocket.DisplaySecurityLevel(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.DisplaySecurityServicesSslStream">
            <summary>设置 ClientSocket.DisplaySecurityServices(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.DisplayStreamPropertiesSslStream">
            <summary>设置 ClientSocket.DisplayStreamProperties(SslStream stream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.EndConnectIAsyncResult">
            <summary>设置 ClientSocket.EndConnect(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.EndReceiveIAsyncResult">
            <summary>设置 ClientSocket.EndReceive(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.EndSendIAsyncResult">
            <summary>设置 ClientSocket.EndSend(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.InitCompression">
            <summary>设置 ClientSocket.InitCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.InitSSL">
            <summary>设置 ClientSocket.InitSSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.InitSSLSslProtocols">
            <summary>设置 ClientSocket.InitSSL(SslProtocols protocol) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.Receive">
            <summary>设置 ClientSocket.Receive() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.SSLGet">
            <summary>设置 ClientSocket.get_SSL() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.SSLSetBoolean">
            <summary>设置 ClientSocket.set_SSL(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.SendByteArray">
            <summary>设置 ClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.SendString">
            <summary>设置 ClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.StartCompression">
            <summary>设置 ClientSocket.StartCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.StartTls">
            <summary>设置 ClientSocket.StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.SupportsStartTlsGet">
            <summary>设置 ClientSocket.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimClientSocket.connectTimeoutTimerDelegateObject">
            <summary>设置 ClientSocket.connectTimeoutTimerDelegate(Object stateInfo) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimConnectTimeoutException">
            <summary>agsXMPP.net.ConnectTimeoutException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimConnectTimeoutException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimConnectTimeoutException.#ctor(agsXMPP.net.ConnectTimeoutException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimConnectTimeoutException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimConnectTimeoutException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimConnectTimeoutException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimConnectTimeoutException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimConnectTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimConnectTimeoutException.ConstructorString">
            <summary>设置 ConnectTimeoutException.ConnectTimeoutException(String message) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimPollClientSocket">
            <summary>agsXMPP.net.PollClientSocket 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollClientSocket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollClientSocket.#ctor(agsXMPP.net.PollClientSocket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.Connect">
            <summary>设置 PollClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.ConnectedGet">
            <summary>设置 PollClientSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.CountKeysGet">
            <summary>设置 PollClientSocket.get_CountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.CountKeysSetInt32">
            <summary>设置 PollClientSocket.set_CountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.Disconnect">
            <summary>设置 PollClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.GenerateKeys">
            <summary>设置 PollClientSocket.GenerateKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.GenerateRandomKey">
            <summary>设置 PollClientSocket.GenerateRandomKey() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.Init">
            <summary>设置 PollClientSocket.Init() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.IntervalGet">
            <summary>设置 PollClientSocket.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.IntervalSetInt32">
            <summary>设置 PollClientSocket.set_Interval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.PollThread">
            <summary>设置 PollClientSocket.PollThread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.ProxyGet">
            <summary>设置 PollClientSocket.get_Proxy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.ProxySetWebProxy">
            <summary>设置 PollClientSocket.set_Proxy(WebProxy value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.SendByteArray">
            <summary>设置 PollClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.AllInstances.SendString">
            <summary>设置 PollClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollClientSocket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollClientSocket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.Connect">
            <summary>设置 PollClientSocket.Connect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.ConnectedGet">
            <summary>设置 PollClientSocket.get_Connected() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.Constructor">
            <summary>设置 PollClientSocket.PollClientSocket() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.CountKeysGet">
            <summary>设置 PollClientSocket.get_CountKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.CountKeysSetInt32">
            <summary>设置 PollClientSocket.set_CountKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.Disconnect">
            <summary>设置 PollClientSocket.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.GenerateKeys">
            <summary>设置 PollClientSocket.GenerateKeys() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.GenerateRandomKey">
            <summary>设置 PollClientSocket.GenerateRandomKey() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.Init">
            <summary>设置 PollClientSocket.Init() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.IntervalGet">
            <summary>设置 PollClientSocket.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.IntervalSetInt32">
            <summary>设置 PollClientSocket.set_Interval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.PollThread">
            <summary>设置 PollClientSocket.PollThread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.ProxyGet">
            <summary>设置 PollClientSocket.get_Proxy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.ProxySetWebProxy">
            <summary>设置 PollClientSocket.set_Proxy(WebProxy value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.SendByteArray">
            <summary>设置 PollClientSocket.Send(Byte[] bData) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollClientSocket.SendString">
            <summary>设置 PollClientSocket.Send(String data) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimPollSocketException">
            <summary>agsXMPP.net.PollSocketException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollSocketException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollSocketException.#ctor(agsXMPP.net.PollSocketException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimPollSocketException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollSocketException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollSocketException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollSocketException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimPollSocketException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimPollSocketException.ConstructorString">
            <summary>设置 PollSocketException.PollSocketException(String msg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimWebRequestState">
            <summary>agsXMPP.net.WebRequestState 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimWebRequestState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimWebRequestState.#ctor(agsXMPP.net.WebRequestState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AbortedGet">
            <summary>设置 WebRequestState.get_Aborted() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AbortedSetBoolean">
            <summary>设置 WebRequestState.set_Aborted(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.AbortedGet">
            <summary>设置 WebRequestState.get_Aborted() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.AbortedSetBoolean">
            <summary>设置 WebRequestState.set_Aborted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.IsSessionRequestGet">
            <summary>设置 WebRequestState.get_IsSessionRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.IsSessionRequestSetBoolean">
            <summary>设置 WebRequestState.set_IsSessionRequest(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.OutputGet">
            <summary>设置 WebRequestState.get_Output() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.OutputSetString">
            <summary>设置 WebRequestState.set_Output(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.RequestStreamGet">
            <summary>设置 WebRequestState.get_RequestStream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.RequestStreamSetStream">
            <summary>设置 WebRequestState.set_RequestStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.StartedGet">
            <summary>设置 WebRequestState.get_Started() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.StartedSetDateTime">
            <summary>设置 WebRequestState.set_Started(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.WebRequestGet">
            <summary>设置 WebRequestState.get_WebRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.AllInstances.WebRequestSetWebRequest">
            <summary>设置 WebRequestState.set_WebRequest(WebRequest value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimWebRequestState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.ShimWebRequestState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.ConstructorWebRequest">
            <summary>设置 WebRequestState.WebRequestState(WebRequest request) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.IsSessionRequestGet">
            <summary>设置 WebRequestState.get_IsSessionRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.IsSessionRequestSetBoolean">
            <summary>设置 WebRequestState.set_IsSessionRequest(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.OutputGet">
            <summary>设置 WebRequestState.get_Output() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.OutputSetString">
            <summary>设置 WebRequestState.set_Output(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.RequestStreamGet">
            <summary>设置 WebRequestState.get_RequestStream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.RequestStreamSetStream">
            <summary>设置 WebRequestState.set_RequestStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.StartedGet">
            <summary>设置 WebRequestState.get_Started() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.StartedSetDateTime">
            <summary>设置 WebRequestState.set_Started(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.WebRequestGet">
            <summary>设置 WebRequestState.get_WebRequest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.ShimWebRequestState.WebRequestSetWebRequest">
            <summary>设置 WebRequestState.set_WebRequest(WebRequest value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubBaseSocket">
            <summary>agsXMPP.net.BaseSocket 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.AttachBackingFieldToConnectTimeout">
            <summary>附加委托以将 StubBaseSocket.ConnectTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.Connect">
            <summary>设置 BaseSocket.Connect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.Connect01">
            <summary>设置 BaseSocket.Connect() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.ConnectTimeout">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.Connected">
            <summary>设置 BaseSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.ConnectedGet">
            <summary>设置 BaseSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.Disconnect">
            <summary>设置 BaseSocket.Disconnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.Disconnect01">
            <summary>设置 BaseSocket.Disconnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.InitializeStub">
            <summary>初始化 type StubBaseSocket 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.Reset">
            <summary>设置 BaseSocket.Reset() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.Reset01">
            <summary>设置 BaseSocket.Reset() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.Send(System.String)">
            <summary>设置 BaseSocket.Send(String data) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.Send(System.Byte[])">
            <summary>设置 BaseSocket.Send(Byte[] bData) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.SendByteArray">
            <summary>设置 BaseSocket.Send(Byte[] bData) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.SendString">
            <summary>设置 BaseSocket.Send(String data) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.StartCompression">
            <summary>设置 BaseSocket.StartCompression() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.StartCompression01">
            <summary>设置 BaseSocket.StartCompression() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBaseSocket.StartTls">
            <summary>设置 BaseSocket.StartTls() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.StartTls01">
            <summary>设置 BaseSocket.StartTls() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBaseSocket.SupportsStartTls">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBaseSocket.SupportsStartTlsGet">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubBoshClientSocket">
            <summary>agsXMPP.net.BoshClientSocket 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.#ctor(agsXMPP.XmppConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.AttachBackingFieldToConnectTimeout">
            <summary>附加委托以将 StubBoshClientSocket.ConnectTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.Connect">
            <summary>设置 BoshClientSocket.Connect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.Connect01">
            <summary>设置 BoshClientSocket.Connect() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.ConnectTimeout">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.Connected">
            <summary>设置 BaseSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.ConnectedGet">
            <summary>设置 BaseSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.Disconnect">
            <summary>设置 BoshClientSocket.Disconnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.Disconnect01">
            <summary>设置 BoshClientSocket.Disconnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.InitializeStub">
            <summary>初始化 type StubBoshClientSocket 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.Reset">
            <summary>设置 BoshClientSocket.Reset() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.Reset01">
            <summary>设置 BoshClientSocket.Reset() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.Send(System.Byte[])">
            <summary>设置 BoshClientSocket.Send(Byte[] bData) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.Send(System.String)">
            <summary>设置 BoshClientSocket.Send(String data) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.SendByteArray">
            <summary>设置 BoshClientSocket.Send(Byte[] bData) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.SendString">
            <summary>设置 BoshClientSocket.Send(String data) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.StartCompression">
            <summary>设置 BaseSocket.StartCompression() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.StartCompression01">
            <summary>设置 BaseSocket.StartCompression() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubBoshClientSocket.StartTls">
            <summary>设置 BaseSocket.StartTls() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.StartTls01">
            <summary>设置 BaseSocket.StartTls() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubBoshClientSocket.SupportsStartTls">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubBoshClientSocket.SupportsStartTlsGet">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubClientSocket">
            <summary>agsXMPP.net.ClientSocket 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.AttachBackingFieldToConnectTimeout">
            <summary>附加委托以将 StubClientSocket.ConnectTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.Connect">
            <summary>设置 ClientSocket.Connect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.Connect01">
            <summary>设置 ClientSocket.Connect() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.ConnectTimeout">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.Connected">
            <summary>设置 ClientSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.ConnectedGet">
            <summary>设置 ClientSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.Disconnect">
            <summary>设置 ClientSocket.Disconnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.Disconnect01">
            <summary>设置 ClientSocket.Disconnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.InitializeStub">
            <summary>初始化 type StubClientSocket 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.Reset">
            <summary>设置 BaseSocket.Reset() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.Reset01">
            <summary>设置 BaseSocket.Reset() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.Send(System.String)">
            <summary>设置 ClientSocket.Send(String data) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.Send(System.Byte[])">
            <summary>设置 ClientSocket.Send(Byte[] bData) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.SendByteArray">
            <summary>设置 ClientSocket.Send(Byte[] bData) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.SendString">
            <summary>设置 ClientSocket.Send(String data) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.StartCompression">
            <summary>设置 ClientSocket.StartCompression() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.StartCompression01">
            <summary>设置 ClientSocket.StartCompression() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubClientSocket.StartTls">
            <summary>设置 ClientSocket.StartTls() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.StartTls01">
            <summary>设置 ClientSocket.StartTls() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubClientSocket.SupportsStartTls">
            <summary>设置 ClientSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubClientSocket.SupportsStartTlsGet">
            <summary>设置 ClientSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubConnectTimeoutException">
            <summary>agsXMPP.net.ConnectTimeoutException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubConnectTimeoutException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubConnectTimeoutException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.InitializeStub">
            <summary>初始化 type StubConnectTimeoutException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubConnectTimeoutException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubConnectTimeoutException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubConnectTimeoutException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubPollClientSocket">
            <summary>agsXMPP.net.PollClientSocket 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.AttachBackingFieldToConnectTimeout">
            <summary>附加委托以将 StubPollClientSocket.ConnectTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.Connect">
            <summary>设置 PollClientSocket.Connect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.Connect01">
            <summary>设置 PollClientSocket.Connect() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.ConnectTimeout">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.ConnectTimeoutGet">
            <summary>设置 BaseSocket.get_ConnectTimeout() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.ConnectTimeoutSetInt64">
            <summary>设置 BaseSocket.set_ConnectTimeout(Int64 value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.Connected">
            <summary>设置 PollClientSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.ConnectedGet">
            <summary>设置 PollClientSocket.get_Connected() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.Disconnect">
            <summary>设置 PollClientSocket.Disconnect() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.Disconnect01">
            <summary>设置 PollClientSocket.Disconnect() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.InitializeStub">
            <summary>初始化 type StubPollClientSocket 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.Reset">
            <summary>设置 BaseSocket.Reset() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.Reset01">
            <summary>设置 BaseSocket.Reset() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.Send(System.String)">
            <summary>设置 PollClientSocket.Send(String data) 的 存根</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.Send(System.Byte[])">
            <summary>设置 PollClientSocket.Send(Byte[] bData) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.SendByteArray">
            <summary>设置 PollClientSocket.Send(Byte[] bData) 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.SendString">
            <summary>设置 PollClientSocket.Send(String data) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.StartCompression">
            <summary>设置 BaseSocket.StartCompression() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.StartCompression01">
            <summary>设置 BaseSocket.StartCompression() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollClientSocket.StartTls">
            <summary>设置 BaseSocket.StartTls() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.StartTls01">
            <summary>设置 BaseSocket.StartTls() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollClientSocket.SupportsStartTls">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollClientSocket.SupportsStartTlsGet">
            <summary>设置 BaseSocket.get_SupportsStartTls() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubPollSocketException">
            <summary>agsXMPP.net.PollSocketException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubPollSocketException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubPollSocketException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.InitializeStub">
            <summary>初始化 type StubPollSocketException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubPollSocketException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubPollSocketException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.Fakes.StubPollSocketException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.Fakes.StubWebRequestState">
            <summary>agsXMPP.net.WebRequestState 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubWebRequestState.#ctor(System.Net.WebRequest)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubWebRequestState.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.Fakes.StubWebRequestState.InitializeStub">
            <summary>初始化 type StubWebRequestState 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubWebRequestState.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.Fakes.StubWebRequestState.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimAdditionalRecord">
            <summary>agsXMPP.net.dns.AdditionalRecord 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.#ctor(agsXMPP.net.dns.AdditionalRecord)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimAdditionalRecord.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimAnswer">
            <summary>agsXMPP.net.dns.Answer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAnswer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAnswer.#ctor(agsXMPP.net.dns.Answer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimAnswer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAnswer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimAnswer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimAnswer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimFixedInfo">
            <summary>agsXMPP.net.dns.FixedInfo 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimFixedInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimFixedInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimFixedInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimFixedInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimFixedInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap">
            <summary>agsXMPP.net.dns.IPAdapterIndexMap 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPAdapterIndexMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo">
            <summary>agsXMPP.net.dns.IPAdapterInfo 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPAdapterInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAddrString">
            <summary>agsXMPP.net.dns.IPAddrString 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAddrString.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPAddrString.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAddrString.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPAddrString.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPAddrString.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPConfigConst">
            <summary>agsXMPP.net.dns.IPConfigConst 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigConst.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigConst.#ctor(agsXMPP.net.dns.IPConfigConst)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPConfigConst.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigConst.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigConst.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigConst.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigConst.Constructor">
            <summary>设置 IPConfigConst.IPConfigConst() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation">
            <summary>agsXMPP.net.dns.IPConfigurationInformation 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.#ctor(agsXMPP.net.dns.IPConfigurationInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.Constructor">
            <summary>设置 IPConfigurationInformation.IPConfigurationInformation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.DnsServersGet">
            <summary>设置 IPConfigurationInformation.get_DnsServers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.DomainGet">
            <summary>设置 IPConfigurationInformation.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.GetHostInfo">
            <summary>设置 IPConfigurationInformation.GetHostInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.HostnameGet">
            <summary>设置 IPConfigurationInformation.get_Hostname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.Refresh">
            <summary>设置 IPConfigurationInformation.Refresh() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPConfigurationInformation.StaticConstructor">
            <summary>设置 IPConfigurationInformation.IPConfigurationInformation() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo">
            <summary>agsXMPP.net.dns.IPInterfaceInfo 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIPInterfaceInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimInvalidResponseException">
            <summary>agsXMPP.net.dns.InvalidResponseException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.#ctor(agsXMPP.net.dns.InvalidResponseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.Constructor">
            <summary>设置 InvalidResponseException.InvalidResponseException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.ConstructorException">
            <summary>设置 InvalidResponseException.InvalidResponseException(Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimInvalidResponseException.ConstructorStringException">
            <summary>设置 InvalidResponseException.InvalidResponseException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIphlpapi">
            <summary>agsXMPP.net.dns.Iphlpapi 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIphlpapi.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIphlpapi.#ctor(agsXMPP.net.dns.Iphlpapi)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimIphlpapi.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIphlpapi.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimIphlpapi.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIphlpapi.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimIphlpapi.Constructor">
            <summary>设置 Iphlpapi.Iphlpapi() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimMemoryCopier">
            <summary>agsXMPP.net.dns.MemoryCopier 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimMemoryCopier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimMemoryCopier.#ctor(agsXMPP.net.dns.MemoryCopier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimMemoryCopier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimMemoryCopier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimMemoryCopier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimMemoryCopier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimMemoryCopier.Constructor">
            <summary>设置 MemoryCopier.MemoryCopier() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimNameServer">
            <summary>agsXMPP.net.dns.NameServer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNameServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNameServer.#ctor(agsXMPP.net.dns.NameServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimNameServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNameServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNameServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimNameServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimNoResponseException">
            <summary>agsXMPP.net.dns.NoResponseException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNoResponseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNoResponseException.#ctor(agsXMPP.net.dns.NoResponseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimNoResponseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNoResponseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNoResponseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimNoResponseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimNoResponseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimNoResponseException.Constructor">
            <summary>设置 NoResponseException.NoResponseException() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimNoResponseException.ConstructorException">
            <summary>设置 NoResponseException.NoResponseException(Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimNoResponseException.ConstructorStringException">
            <summary>设置 NoResponseException.NoResponseException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimQuestion">
            <summary>agsXMPP.net.dns.Question 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimQuestion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimQuestion.#ctor(agsXMPP.net.dns.Question)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimQuestion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.AllInstances.ClassGet">
            <summary>设置 Question.get_Class() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.AllInstances.DomainGet">
            <summary>设置 Question.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.AllInstances.TypeGet">
            <summary>设置 Question.get_Type() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimQuestion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimQuestion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.ClassGet">
            <summary>设置 Question.get_Class() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.ConstructorStringDnsTypeDnsClass">
            <summary>设置 Question.Question(String domain, DnsType dnsType, DnsClass dnsClass) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.DomainGet">
            <summary>设置 Question.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimQuestion.TypeGet">
            <summary>设置 Question.get_Type() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimRecordBase">
            <summary>agsXMPP.net.dns.RecordBase 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRecordBase.#ctor(agsXMPP.net.dns.RecordBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimRecordBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRecordBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRecordBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRecordBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRecordBase.Constructor">
            <summary>设置 RecordBase.RecordBase() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimRequest">
            <summary>agsXMPP.net.dns.Request 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRequest.#ctor(agsXMPP.net.dns.Request)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AddDomainArrayListString">
            <summary>设置 Request.AddDomain(ArrayList data, String domainName) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AddQuestionQuestion">
            <summary>设置 Request.AddQuestion(Question question) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.AddQuestionQuestion">
            <summary>设置 Request.AddQuestion(Question question) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.GetMessage">
            <summary>设置 Request.GetMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.OpcodeGet">
            <summary>设置 Request.get_Opcode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.OpcodeSetOpcode">
            <summary>设置 Request.set_Opcode(Opcode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.RecursionDesiredGet">
            <summary>设置 Request.get_RecursionDesired() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.AllInstances.RecursionDesiredSetBoolean">
            <summary>设置 Request.set_RecursionDesired(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.Constructor">
            <summary>设置 Request.Request() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.GetMessage">
            <summary>设置 Request.GetMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.OpcodeGet">
            <summary>设置 Request.get_Opcode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.OpcodeSetOpcode">
            <summary>设置 Request.set_Opcode(Opcode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.RecursionDesiredGet">
            <summary>设置 Request.get_RecursionDesired() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimRequest.RecursionDesiredSetBoolean">
            <summary>设置 Request.set_RecursionDesired(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResolver">
            <summary>agsXMPP.net.dns.Resolver 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResolver.#ctor(agsXMPP.net.dns.Resolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResolver.Constructor">
            <summary>设置 Resolver.Resolver() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResolver.LookupRequestIPAddress">
            <summary>设置 Resolver.Lookup(Request request, IPAddress dnsServer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResolver.SRVLookupStringIPAddress">
            <summary>设置 Resolver.SRVLookup(String domain, IPAddress dnsServer) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResolver.UdpTransferIPEndPointByteArray">
            <summary>设置 Resolver.UdpTransfer(IPEndPoint server, Byte[] requestMessage) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResourceRecord">
            <summary>agsXMPP.net.dns.ResourceRecord 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResourceRecord.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResourceRecord.#ctor(agsXMPP.net.dns.ResourceRecord)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances.ClassGet">
            <summary>设置 ResourceRecord.get_Class() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances.DomainGet">
            <summary>设置 ResourceRecord.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances.RecordGet">
            <summary>设置 ResourceRecord.get_Record() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances.TtlGet">
            <summary>设置 ResourceRecord.get_Ttl() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.AllInstances.TypeGet">
            <summary>设置 ResourceRecord.get_Type() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResourceRecord.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResourceRecord.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.ClassGet">
            <summary>设置 ResourceRecord.get_Class() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.DomainGet">
            <summary>设置 ResourceRecord.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.RecordGet">
            <summary>设置 ResourceRecord.get_Record() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.TtlGet">
            <summary>设置 ResourceRecord.get_Ttl() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResourceRecord.TypeGet">
            <summary>设置 ResourceRecord.get_Type() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResponse">
            <summary>agsXMPP.net.dns.Response 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResponse.#ctor(agsXMPP.net.dns.Response)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AdditionalRecordsGet">
            <summary>设置 Response.get_AdditionalRecords() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.AdditionalRecordsGet">
            <summary>设置 Response.get_AdditionalRecords() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.AnswersGet">
            <summary>设置 Response.get_Answers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.AuthoritativeAnswerGet">
            <summary>设置 Response.get_AuthoritativeAnswer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.MessageTruncatedGet">
            <summary>设置 Response.get_MessageTruncated() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.NameServersGet">
            <summary>设置 Response.get_NameServers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.QuestionsGet">
            <summary>设置 Response.get_Questions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.RecursionAvailableGet">
            <summary>设置 Response.get_RecursionAvailable() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AllInstances.ReturnCodeGet">
            <summary>设置 Response.get_ReturnCode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AnswersGet">
            <summary>设置 Response.get_Answers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.AuthoritativeAnswerGet">
            <summary>设置 Response.get_AuthoritativeAnswer() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.ConstructorByteArray">
            <summary>设置 Response.Response(Byte[] message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.GetShortByteArrayInt32">
            <summary>设置 Response.GetShort(Byte[] message, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.MessageTruncatedGet">
            <summary>设置 Response.get_MessageTruncated() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.NameServersGet">
            <summary>设置 Response.get_NameServers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.QuestionsGet">
            <summary>设置 Response.get_Questions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.RecursionAvailableGet">
            <summary>设置 Response.get_RecursionAvailable() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimResponse.ReturnCodeGet">
            <summary>设置 Response.get_ReturnCode() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimSRVRecord">
            <summary>agsXMPP.net.dns.SRVRecord 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimSRVRecord.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimSRVRecord.#ctor(agsXMPP.net.dns.SRVRecord)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.CompareToObject">
            <summary>设置 SRVRecord.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.PortGet">
            <summary>设置 SRVRecord.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.PriorityGet">
            <summary>设置 SRVRecord.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.TargetGet">
            <summary>设置 SRVRecord.get_Target() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.ToString01">
            <summary>设置 SRVRecord.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.AllInstances.WeightGet">
            <summary>设置 SRVRecord.get_Weight() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimSRVRecord.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimSRVRecord.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.ShimSRVRecord.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.CompareToObject">
            <summary>设置 SRVRecord.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.PortGet">
            <summary>设置 SRVRecord.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.PriorityGet">
            <summary>设置 SRVRecord.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.TargetGet">
            <summary>设置 SRVRecord.get_Target() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.ToString">
            <summary>设置 SRVRecord.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.ShimSRVRecord.WeightGet">
            <summary>设置 SRVRecord.get_Weight() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubIPConfigConst">
            <summary>agsXMPP.net.dns.IPConfigConst 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIPConfigConst.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigConst.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIPConfigConst.InitializeStub">
            <summary>初始化 type StubIPConfigConst 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigConst.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigConst.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation">
            <summary>agsXMPP.net.dns.IPConfigurationInformation 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation.InitializeStub">
            <summary>初始化 type StubIPConfigurationInformation 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIPConfigurationInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubInvalidResponseException">
            <summary>agsXMPP.net.dns.InvalidResponseException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidResponseException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidResponseException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.InitializeStub">
            <summary>初始化 type StubInvalidResponseException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubInvalidResponseException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubInvalidResponseException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubInvalidResponseException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubIphlpapi">
            <summary>agsXMPP.net.dns.Iphlpapi 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIphlpapi.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIphlpapi.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubIphlpapi.InitializeStub">
            <summary>初始化 type StubIphlpapi 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIphlpapi.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubIphlpapi.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubMemoryCopier">
            <summary>agsXMPP.net.dns.MemoryCopier 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubMemoryCopier.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubMemoryCopier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubMemoryCopier.InitializeStub">
            <summary>初始化 type StubMemoryCopier 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubMemoryCopier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubMemoryCopier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubNoResponseException">
            <summary>agsXMPP.net.dns.NoResponseException 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubNoResponseException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubNoResponseException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.InitializeStub">
            <summary>初始化 type StubNoResponseException 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubNoResponseException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubNoResponseException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.net.dns.Fakes.StubNoResponseException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubQuestion">
            <summary>agsXMPP.net.dns.Question 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubQuestion.#ctor(System.String,agsXMPP.net.dns.DnsType,agsXMPP.net.dns.DnsClass)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubQuestion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubQuestion.InitializeStub">
            <summary>初始化 type StubQuestion 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubQuestion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubQuestion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubRecordBase">
            <summary>agsXMPP.net.dns.RecordBase 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubRecordBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRecordBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubRecordBase.InitializeStub">
            <summary>初始化 type StubRecordBase 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRecordBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRecordBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.net.dns.Fakes.StubRequest">
            <summary>agsXMPP.net.dns.Request 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubRequest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.net.dns.Fakes.StubRequest.InitializeStub">
            <summary>初始化 type StubRequest 的新实例</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.net.dns.Fakes.StubRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimAvatar">
            <summary>agsXMPP.protocol.Base.Avatar 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimAvatar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimAvatar.#ctor(agsXMPP.protocol.Base.Avatar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimAvatar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.AllInstances.DataGet">
            <summary>设置 Avatar.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.AllInstances.DataSetByteArray">
            <summary>设置 Avatar.set_Data(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.AllInstances.MimeTypeGet">
            <summary>设置 Avatar.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.AllInstances.MimeTypeSetString">
            <summary>设置 Avatar.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimAvatar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimAvatar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.Constructor">
            <summary>设置 Avatar.Avatar() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.DataGet">
            <summary>设置 Avatar.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.DataSetByteArray">
            <summary>设置 Avatar.set_Data(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.MimeTypeGet">
            <summary>设置 Avatar.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimAvatar.MimeTypeSetString">
            <summary>设置 Avatar.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement">
            <summary>agsXMPP.protocol.Base.DirectionalElement 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.#ctor(agsXMPP.protocol.Base.DirectionalElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances.FromGet">
            <summary>设置 DirectionalElement.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances.FromSetJid">
            <summary>设置 DirectionalElement.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances.SwitchDirection">
            <summary>设置 DirectionalElement.SwitchDirection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances.ToGet">
            <summary>设置 DirectionalElement.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.AllInstances.ToSetJid">
            <summary>设置 DirectionalElement.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.Constructor">
            <summary>设置 DirectionalElement.DirectionalElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.ConstructorString">
            <summary>设置 DirectionalElement.DirectionalElement(String tag) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.ConstructorStringString">
            <summary>设置 DirectionalElement.DirectionalElement(String tag, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.ConstructorStringStringString">
            <summary>设置 DirectionalElement.DirectionalElement(String tag, String text, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.FromGet">
            <summary>设置 DirectionalElement.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.FromSetJid">
            <summary>设置 DirectionalElement.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.SwitchDirection">
            <summary>设置 DirectionalElement.SwitchDirection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.ToGet">
            <summary>设置 DirectionalElement.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimDirectionalElement.ToSetJid">
            <summary>设置 DirectionalElement.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimGroup">
            <summary>agsXMPP.protocol.Base.Group 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimGroup.#ctor(agsXMPP.protocol.Base.Group)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.AllInstances.NameGet">
            <summary>设置 Group.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.AllInstances.NameSetString">
            <summary>设置 Group.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.Constructor">
            <summary>设置 Group.Group() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.ConstructorString">
            <summary>设置 Group.Group(String groupname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.NameGet">
            <summary>设置 Group.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimGroup.NameSetString">
            <summary>设置 Group.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimItem">
            <summary>agsXMPP.protocol.Base.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimItem.#ctor(agsXMPP.protocol.Base.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.AllInstances.JidGet">
            <summary>设置 Item.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.AllInstances.JidSetJid">
            <summary>设置 Item.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.AllInstances.NameGet">
            <summary>设置 Item.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.AllInstances.NameSetString">
            <summary>设置 Item.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.JidGet">
            <summary>设置 Item.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.JidSetJid">
            <summary>设置 Item.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.NameGet">
            <summary>设置 Item.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimItem.NameSetString">
            <summary>设置 Item.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimRosterItem">
            <summary>agsXMPP.protocol.Base.RosterItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimRosterItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimRosterItem.#ctor(agsXMPP.protocol.Base.RosterItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AddGroupString">
            <summary>设置 RosterItem.AddGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AllInstances.AddGroupString">
            <summary>设置 RosterItem.AddGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AllInstances.GetGroups">
            <summary>设置 RosterItem.GetGroups() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AllInstances.HasGroupString">
            <summary>设置 RosterItem.HasGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.AllInstances.RemoveGroupString">
            <summary>设置 RosterItem.RemoveGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimRosterItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimRosterItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.Constructor">
            <summary>设置 RosterItem.RosterItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.GetGroups">
            <summary>设置 RosterItem.GetGroups() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.HasGroupString">
            <summary>设置 RosterItem.HasGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimRosterItem.RemoveGroupString">
            <summary>设置 RosterItem.RemoveGroup(String groupname) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimStanza">
            <summary>agsXMPP.protocol.Base.Stanza 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStanza.#ctor(agsXMPP.protocol.Base.Stanza)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances.GenerateId">
            <summary>设置 Stanza.GenerateId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances.IdGet">
            <summary>设置 Stanza.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances.IdSetString">
            <summary>设置 Stanza.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances.LanguageGet">
            <summary>设置 Stanza.get_Language() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.AllInstances.LanguageSetString">
            <summary>设置 Stanza.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStanza.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStanza.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.Constructor">
            <summary>设置 Stanza.Stanza() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.ConstructorString">
            <summary>设置 Stanza.Stanza(String tag) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.ConstructorStringString">
            <summary>设置 Stanza.Stanza(String tag, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.ConstructorStringStringString">
            <summary>设置 Stanza.Stanza(String tag, String text, String ns) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.GenerateId">
            <summary>设置 Stanza.GenerateId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.IdGet">
            <summary>设置 Stanza.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.IdSetString">
            <summary>设置 Stanza.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.LanguageGet">
            <summary>设置 Stanza.get_Language() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStanza.LanguageSetString">
            <summary>设置 Stanza.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimStream">
            <summary>agsXMPP.protocol.Base.Stream 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStream.#ctor(agsXMPP.protocol.Base.Stream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.ShimStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.AllInstances.StreamIdGet">
            <summary>设置 Stream.get_StreamId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.AllInstances.StreamIdSetString">
            <summary>设置 Stream.set_StreamId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.AllInstances.VersionGet">
            <summary>设置 Stream.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.AllInstances.VersionSetString">
            <summary>设置 Stream.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.Constructor">
            <summary>设置 Stream.Stream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.StreamIdGet">
            <summary>设置 Stream.get_StreamId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.StreamIdSetString">
            <summary>设置 Stream.set_StreamId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.VersionGet">
            <summary>设置 Stream.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.ShimStream.VersionSetString">
            <summary>设置 Stream.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubAvatar">
            <summary>agsXMPP.protocol.Base.Avatar 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubAvatar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubAvatar.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubAvatar.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubAvatar.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatar.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubAvatar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubAvatar.InitializeStub">
            <summary>初始化 type StubAvatar 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubAvatar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubAvatar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubAvatar.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubAvatar.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubAvatar.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubAvatar.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubAvatar.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubDirectionalElement">
            <summary>agsXMPP.protocol.Base.DirectionalElement 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDirectionalElement.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.InitializeStub">
            <summary>初始化 type StubDirectionalElement 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubDirectionalElement.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubGroup">
            <summary>agsXMPP.protocol.Base.Group 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubGroup.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.AttachBackingFieldToValue">
            <summary>附加委托以将 StubGroup.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.InitializeStub">
            <summary>初始化 type StubGroup 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubGroup.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubGroup.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubGroup.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubGroup.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubGroup.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubItem">
            <summary>agsXMPP.protocol.Base.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubRosterItem">
            <summary>agsXMPP.protocol.Base.RosterItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubRosterItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubRosterItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubRosterItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubRosterItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRosterItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubRosterItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubRosterItem.InitializeStub">
            <summary>初始化 type StubRosterItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubRosterItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubRosterItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubRosterItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubRosterItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubRosterItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubRosterItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubRosterItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubStanza">
            <summary>agsXMPP.protocol.Base.Stanza 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStanza.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStanza.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStanza.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.InitializeStub">
            <summary>初始化 type StubStanza 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStanza.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStanza.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStanza.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStanza.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStanza.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStanza.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStanza.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Base.Fakes.StubStream">
            <summary>agsXMPP.protocol.Base.Stream 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStream.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStream.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStream.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStream.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStream.InitializeStub">
            <summary>初始化 type StubStream 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Base.Fakes.StubStream.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStream.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Base.Fakes.StubStream.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStream.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Base.Fakes.StubStream.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.ShimError">
            <summary>agsXMPP.protocol.Error 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimError.#ctor(agsXMPP.protocol.Error)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.ShimError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.AllInstances.ConditionGet">
            <summary>设置 Error.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.AllInstances.ConditionSetStreamErrorCondition">
            <summary>设置 Error.set_Condition(StreamErrorCondition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.AllInstances.TextGet">
            <summary>设置 Error.get_Text() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.AllInstances.TextSetString">
            <summary>设置 Error.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.ConditionGet">
            <summary>设置 Error.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.ConditionSetStreamErrorCondition">
            <summary>设置 Error.set_Condition(StreamErrorCondition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.Constructor">
            <summary>设置 Error.Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.ConstructorStreamErrorCondition">
            <summary>设置 Error.Error(StreamErrorCondition condition) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.TextGet">
            <summary>设置 Error.get_Text() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimError.TextSetString">
            <summary>设置 Error.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.ShimStream">
            <summary>agsXMPP.protocol.Stream 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimStream.#ctor(agsXMPP.protocol.Stream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.ShimStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.ShimStream.Constructor">
            <summary>设置 Stream.Stream() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.StubError">
            <summary>agsXMPP.protocol.Error 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.#ctor(agsXMPP.protocol.StreamErrorCondition)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubError.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.AttachBackingFieldToValue">
            <summary>附加委托以将 StubError.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubError.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.InitializeStub">
            <summary>初始化 type StubError 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubError.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubError.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubError.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubError.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubError.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubError.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubError.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.Fakes.StubStream">
            <summary>agsXMPP.protocol.Stream 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubStream.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubStream.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubStream.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStream.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubStream.InitializeStub">
            <summary>初始化 type StubStream 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.Fakes.StubStream.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubStream.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.Fakes.StubStream.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubStream.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.Fakes.StubStream.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimError">
            <summary>agsXMPP.protocol.client.Error 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimError.#ctor(agsXMPP.protocol.client.Error)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.CodeGet">
            <summary>设置 Error.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.CodeSetErrorCode">
            <summary>设置 Error.set_Code(ErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.ConditionGet">
            <summary>设置 Error.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.ConditionSetErrorCondition">
            <summary>设置 Error.set_Condition(ErrorCondition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.MessageGet">
            <summary>设置 Error.get_Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.MessageSetString">
            <summary>设置 Error.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.TypeGet">
            <summary>设置 Error.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.AllInstances.TypeSetErrorType">
            <summary>设置 Error.set_Type(ErrorType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.CodeGet">
            <summary>设置 Error.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.CodeSetErrorCode">
            <summary>设置 Error.set_Code(ErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConditionGet">
            <summary>设置 Error.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConditionSetErrorCondition">
            <summary>设置 Error.set_Condition(ErrorCondition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.Constructor">
            <summary>设置 Error.Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConstructorErrorCode">
            <summary>设置 Error.Error(ErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConstructorErrorCondition">
            <summary>设置 Error.Error(ErrorCondition condition) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConstructorErrorType">
            <summary>设置 Error.Error(ErrorType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConstructorErrorTypeErrorCondition">
            <summary>设置 Error.Error(ErrorType type, ErrorCondition condition) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.ConstructorInt32">
            <summary>设置 Error.Error(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.MessageGet">
            <summary>设置 Error.get_Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.MessageSetString">
            <summary>设置 Error.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.TypeGet">
            <summary>设置 Error.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimError.TypeSetErrorType">
            <summary>设置 Error.set_Type(ErrorType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimIQ">
            <summary>agsXMPP.protocol.client.IQ 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimIQ.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimIQ.#ctor(agsXMPP.protocol.client.IQ)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.BindGet">
            <summary>设置 IQ.get_Bind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.ErrorGet">
            <summary>设置 IQ.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.ErrorSetError">
            <summary>设置 IQ.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.QueryGet">
            <summary>设置 IQ.get_Query() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.QuerySetElement">
            <summary>设置 IQ.set_Query(Element value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.SessionGet">
            <summary>设置 IQ.get_Session() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.TypeGet">
            <summary>设置 IQ.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.TypeSetIqType">
            <summary>设置 IQ.set_Type(IqType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.AllInstances.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimIQ.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimIQ.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.BindGet">
            <summary>设置 IQ.get_Bind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.Constructor">
            <summary>设置 IQ.IQ() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.ConstructorIqType">
            <summary>设置 IQ.IQ(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.ConstructorIqTypeJidJid">
            <summary>设置 IQ.IQ(IqType type, Jid from, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.ConstructorJidJid">
            <summary>设置 IQ.IQ(Jid from, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.ErrorGet">
            <summary>设置 IQ.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.ErrorSetError">
            <summary>设置 IQ.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.QueryGet">
            <summary>设置 IQ.get_Query() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.QuerySetElement">
            <summary>设置 IQ.set_Query(Element value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.SessionGet">
            <summary>设置 IQ.get_Session() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.TypeGet">
            <summary>设置 IQ.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.TypeSetIqType">
            <summary>设置 IQ.set_Type(IqType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimIQ.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimMessage">
            <summary>agsXMPP.protocol.client.Message 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimMessage.#ctor(agsXMPP.protocol.client.Message)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.BodyGet">
            <summary>设置 Message.get_Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.BodySetString">
            <summary>设置 Message.set_Body(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ChatstateGet">
            <summary>设置 Message.get_Chatstate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ChatstateSetChatstate">
            <summary>设置 Message.set_Chatstate(Chatstate value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.CreateNewThread">
            <summary>设置 Message.CreateNewThread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ErrorGet">
            <summary>设置 Message.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ErrorSetError">
            <summary>设置 Message.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.HeadersGet">
            <summary>设置 Message.get_Headers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.HeadersSetHeaders">
            <summary>设置 Message.set_Headers(Headers value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.HtmlGet">
            <summary>设置 Message.get_Html() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.HtmlSetHtml">
            <summary>设置 Message.set_Html(Html value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.NicknameGet">
            <summary>设置 Message.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.NicknameSetNickname">
            <summary>设置 Message.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.RemoveChatstate">
            <summary>设置 Message.RemoveChatstate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.SubjectGet">
            <summary>设置 Message.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.SubjectSetString">
            <summary>设置 Message.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ThreadGet">
            <summary>设置 Message.get_Thread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.ThreadSetString">
            <summary>设置 Message.set_Thread(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.TypeGet">
            <summary>设置 Message.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.TypeSetMessageType">
            <summary>设置 Message.set_Type(MessageType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.XDelayGet">
            <summary>设置 Message.get_XDelay() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.XDelaySetDelay">
            <summary>设置 Message.set_XDelay(Delay value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.XEventGet">
            <summary>设置 Message.get_XEvent() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.AllInstances.XEventSetEvent">
            <summary>设置 Message.set_XEvent(Event value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.BodyGet">
            <summary>设置 Message.get_Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.BodySetString">
            <summary>设置 Message.set_Body(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ChatstateGet">
            <summary>设置 Message.get_Chatstate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ChatstateSetChatstate">
            <summary>设置 Message.set_Chatstate(Chatstate value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.Constructor">
            <summary>设置 Message.Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJid">
            <summary>设置 Message.Message(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJid">
            <summary>设置 Message.Message(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidMessageTypeString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidMessageTypeStringString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidMessageTypeStringStringString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidString">
            <summary>设置 Message.Message(Jid to, Jid from, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidStringString">
            <summary>设置 Message.Message(Jid to, Jid from, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidJidStringStringString">
            <summary>设置 Message.Message(Jid to, Jid from, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidMessageTypeString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidMessageTypeStringString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidMessageTypeStringStringString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidString">
            <summary>设置 Message.Message(Jid to, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidStringString">
            <summary>设置 Message.Message(Jid to, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorJidStringStringString">
            <summary>设置 Message.Message(Jid to, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringMessageTypeString">
            <summary>设置 Message.Message(String to, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringMessageTypeStringString">
            <summary>设置 Message.Message(String to, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringMessageTypeStringStringString">
            <summary>设置 Message.Message(String to, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringString">
            <summary>设置 Message.Message(String to, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringStringString">
            <summary>设置 Message.Message(String to, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ConstructorStringStringStringString">
            <summary>设置 Message.Message(String to, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.CreateNewThread">
            <summary>设置 Message.CreateNewThread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ErrorGet">
            <summary>设置 Message.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ErrorSetError">
            <summary>设置 Message.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.HeadersGet">
            <summary>设置 Message.get_Headers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.HeadersSetHeaders">
            <summary>设置 Message.set_Headers(Headers value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.HtmlGet">
            <summary>设置 Message.get_Html() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.HtmlSetHtml">
            <summary>设置 Message.set_Html(Html value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.NicknameGet">
            <summary>设置 Message.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.NicknameSetNickname">
            <summary>设置 Message.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.RemoveChatstate">
            <summary>设置 Message.RemoveChatstate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.SubjectGet">
            <summary>设置 Message.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.SubjectSetString">
            <summary>设置 Message.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ThreadGet">
            <summary>设置 Message.get_Thread() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.ThreadSetString">
            <summary>设置 Message.set_Thread(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.TypeGet">
            <summary>设置 Message.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.TypeSetMessageType">
            <summary>设置 Message.set_Type(MessageType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.XDelayGet">
            <summary>设置 Message.get_XDelay() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.XDelaySetDelay">
            <summary>设置 Message.set_XDelay(Delay value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.XEventGet">
            <summary>设置 Message.get_XEvent() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimMessage.XEventSetEvent">
            <summary>设置 Message.set_XEvent(Event value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimPresence">
            <summary>agsXMPP.protocol.client.Presence 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresence.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresence.#ctor(agsXMPP.protocol.client.Presence)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.ErrorGet">
            <summary>设置 Presence.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.ErrorSetError">
            <summary>设置 Presence.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.IsPrimaryGet">
            <summary>设置 Presence.get_IsPrimary() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.IsPrimarySetBoolean">
            <summary>设置 Presence.set_IsPrimary(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.MucUserGet">
            <summary>设置 Presence.get_MucUser() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.MucUserSetUser">
            <summary>设置 Presence.set_MucUser(User value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.NicknameGet">
            <summary>设置 Presence.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.NicknameSetNickname">
            <summary>设置 Presence.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.PriorityGet">
            <summary>设置 Presence.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.PrioritySetInt32">
            <summary>设置 Presence.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.ShowGet">
            <summary>设置 Presence.get_Show() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.ShowSetShowType">
            <summary>设置 Presence.set_Show(ShowType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.StatusGet">
            <summary>设置 Presence.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.StatusSetString">
            <summary>设置 Presence.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.TypeGet">
            <summary>设置 Presence.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.TypeSetPresenceType">
            <summary>设置 Presence.set_Type(PresenceType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.XDelayGet">
            <summary>设置 Presence.get_XDelay() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.AllInstances.XDelaySetDelay">
            <summary>设置 Presence.set_XDelay(Delay value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresence.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresence.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.Constructor">
            <summary>设置 Presence.Presence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ConstructorShowTypeString">
            <summary>设置 Presence.Presence(ShowType show, String status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ConstructorShowTypeStringInt32">
            <summary>设置 Presence.Presence(ShowType show, String status, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ErrorGet">
            <summary>设置 Presence.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ErrorSetError">
            <summary>设置 Presence.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.IsPrimaryGet">
            <summary>设置 Presence.get_IsPrimary() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.IsPrimarySetBoolean">
            <summary>设置 Presence.set_IsPrimary(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.MucUserGet">
            <summary>设置 Presence.get_MucUser() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.MucUserSetUser">
            <summary>设置 Presence.set_MucUser(User value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.NicknameGet">
            <summary>设置 Presence.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.NicknameSetNickname">
            <summary>设置 Presence.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.PriorityGet">
            <summary>设置 Presence.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.PrioritySetInt32">
            <summary>设置 Presence.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ShowGet">
            <summary>设置 Presence.get_Show() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.ShowSetShowType">
            <summary>设置 Presence.set_Show(ShowType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.StatusGet">
            <summary>设置 Presence.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.StatusSetString">
            <summary>设置 Presence.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.TypeGet">
            <summary>设置 Presence.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.TypeSetPresenceType">
            <summary>设置 Presence.set_Type(PresenceType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.XDelayGet">
            <summary>设置 Presence.get_XDelay() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresence.XDelaySetDelay">
            <summary>设置 Presence.set_XDelay(Delay value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimPresenceManager">
            <summary>agsXMPP.protocol.client.PresenceManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresenceManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresenceManager.#ctor(agsXMPP.protocol.client.PresenceManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances.ApproveSubscriptionRequestJid">
            <summary>设置 PresenceManager.ApproveSubscriptionRequest(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances.RefuseSubscriptionRequestJid">
            <summary>设置 PresenceManager.RefuseSubscriptionRequest(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances.SubscribeJid">
            <summary>设置 PresenceManager.Subscribe(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances.SubscribeJidString">
            <summary>设置 PresenceManager.Subscribe(Jid to, String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.AllInstances.UnsubscribeJid">
            <summary>设置 PresenceManager.Unsubscribe(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.ApproveSubscriptionRequestJid">
            <summary>设置 PresenceManager.ApproveSubscriptionRequest(Jid to) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresenceManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.ShimPresenceManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.ConstructorXmppClientConnection">
            <summary>设置 PresenceManager.PresenceManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.RefuseSubscriptionRequestJid">
            <summary>设置 PresenceManager.RefuseSubscriptionRequest(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.SubscribeJid">
            <summary>设置 PresenceManager.Subscribe(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.SubscribeJidString">
            <summary>设置 PresenceManager.Subscribe(Jid to, String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.ShimPresenceManager.UnsubscribeJid">
            <summary>设置 PresenceManager.Unsubscribe(Jid to) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.StubError">
            <summary>agsXMPP.protocol.client.Error 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorCode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorCondition)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorType,agsXMPP.protocol.client.ErrorCondition)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubError.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.AttachBackingFieldToValue">
            <summary>附加委托以将 StubError.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubError.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.InitializeStub">
            <summary>初始化 type StubError 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubError.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubError.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubError.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubError.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubError.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubError.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubError.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.StubIQ">
            <summary>agsXMPP.protocol.client.IQ 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.#ctor(agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.AttachBackingFieldToBind">
            <summary>附加委托以将 StubIQ.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.AttachBackingFieldToSession">
            <summary>附加委托以将 StubIQ.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIQ.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubIQ.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.InitializeStub">
            <summary>初始化 type StubIQ 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubIQ.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubIQ.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubIQ.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.StubMessage">
            <summary>agsXMPP.protocol.client.Message 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubMessage.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMessage.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.InitializeStub">
            <summary>初始化 type StubMessage 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubMessage.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubMessage.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubMessage.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubMessage.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubMessage.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.StubPresence">
            <summary>agsXMPP.protocol.client.Presence 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.#ctor(agsXMPP.protocol.client.ShowType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.#ctor(agsXMPP.protocol.client.ShowType,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubPresence.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPresence.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresence.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.InitializeStub">
            <summary>初始化 type StubPresence 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresence.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresence.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresence.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubPresence.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresence.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubPresence.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.client.Fakes.StubPresence.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.client.Fakes.StubPresenceManager">
            <summary>agsXMPP.protocol.client.PresenceManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresenceManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresenceManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.client.Fakes.StubPresenceManager.InitializeStub">
            <summary>初始化 type StubPresenceManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresenceManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.client.Fakes.StubPresenceManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimError">
            <summary>agsXMPP.protocol.component.Error 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimError.#ctor(agsXMPP.protocol.component.Error)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.Constructor">
            <summary>设置 Error.Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.ConstructorErrorCode">
            <summary>设置 Error.Error(ErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.ConstructorErrorCondition">
            <summary>设置 Error.Error(ErrorCondition condition) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.ConstructorErrorType">
            <summary>设置 Error.Error(ErrorType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimError.ConstructorInt32">
            <summary>设置 Error.Error(Int32 code) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimHandshake">
            <summary>agsXMPP.protocol.component.Handshake 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimHandshake.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimHandshake.#ctor(agsXMPP.protocol.component.Handshake)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimHandshake.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.AllInstances.DigestGet">
            <summary>设置 Handshake.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.AllInstances.DigestSetString">
            <summary>设置 Handshake.set_Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.AllInstances.SetAuthStringString">
            <summary>设置 Handshake.SetAuth(String password, String streamId) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimHandshake.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimHandshake.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.Constructor">
            <summary>设置 Handshake.Handshake() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.ConstructorStringString">
            <summary>设置 Handshake.Handshake(String password, String streamid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.DigestGet">
            <summary>设置 Handshake.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.DigestSetString">
            <summary>设置 Handshake.set_Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimHandshake.SetAuthStringString">
            <summary>设置 Handshake.SetAuth(String password, String streamId) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimIQ">
            <summary>agsXMPP.protocol.component.IQ 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimIQ.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimIQ.#ctor(agsXMPP.protocol.component.IQ)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimIQ.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.AllInstances.ErrorGet">
            <summary>设置 IQ.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.AllInstances.ErrorSetError">
            <summary>设置 IQ.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimIQ.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimIQ.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.Constructor">
            <summary>设置 IQ.IQ() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.ConstructorIqType">
            <summary>设置 IQ.IQ(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.ConstructorIqTypeJidJid">
            <summary>设置 IQ.IQ(IqType type, Jid from, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.ConstructorJidJid">
            <summary>设置 IQ.IQ(Jid from, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.ErrorGet">
            <summary>设置 IQ.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimIQ.ErrorSetError">
            <summary>设置 IQ.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimLog">
            <summary>agsXMPP.protocol.component.Log 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimLog.#ctor(agsXMPP.protocol.component.Log)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimLog.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.AllInstances.LogNamespaceGet">
            <summary>设置 Log.get_LogNamespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.AllInstances.LogNamespaceSetString">
            <summary>设置 Log.set_LogNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.AllInstances.TypeGet">
            <summary>设置 Log.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.AllInstances.TypeSetLogType">
            <summary>设置 Log.set_Type(LogType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.Constructor">
            <summary>设置 Log.Log() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.ConstructorString">
            <summary>设置 Log.Log(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.LogNamespaceGet">
            <summary>设置 Log.get_LogNamespace() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.LogNamespaceSetString">
            <summary>设置 Log.set_LogNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.TypeGet">
            <summary>设置 Log.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimLog.TypeSetLogType">
            <summary>设置 Log.set_Type(LogType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimMessage">
            <summary>agsXMPP.protocol.component.Message 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimMessage.#ctor(agsXMPP.protocol.component.Message)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.AllInstances.ErrorGet">
            <summary>设置 Message.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.AllInstances.ErrorSetError">
            <summary>设置 Message.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.Constructor">
            <summary>设置 Message.Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJid">
            <summary>设置 Message.Message(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJid">
            <summary>设置 Message.Message(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidMessageTypeString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidMessageTypeStringString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidMessageTypeStringStringString">
            <summary>设置 Message.Message(Jid to, Jid from, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidString">
            <summary>设置 Message.Message(Jid to, Jid from, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidStringString">
            <summary>设置 Message.Message(Jid to, Jid from, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidJidStringStringString">
            <summary>设置 Message.Message(Jid to, Jid from, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidMessageTypeString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidMessageTypeStringString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidMessageTypeStringStringString">
            <summary>设置 Message.Message(Jid to, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidString">
            <summary>设置 Message.Message(Jid to, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidStringString">
            <summary>设置 Message.Message(Jid to, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorJidStringStringString">
            <summary>设置 Message.Message(Jid to, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringMessageTypeString">
            <summary>设置 Message.Message(String to, MessageType type, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringMessageTypeStringString">
            <summary>设置 Message.Message(String to, MessageType type, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringMessageTypeStringStringString">
            <summary>设置 Message.Message(String to, MessageType type, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringString">
            <summary>设置 Message.Message(String to, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringStringString">
            <summary>设置 Message.Message(String to, String body, String subject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ConstructorStringStringStringString">
            <summary>设置 Message.Message(String to, String body, String subject, String thread) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ErrorGet">
            <summary>设置 Message.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimMessage.ErrorSetError">
            <summary>设置 Message.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimPresence">
            <summary>agsXMPP.protocol.component.Presence 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimPresence.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimPresence.#ctor(agsXMPP.protocol.component.Presence)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimPresence.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.AllInstances.ErrorGet">
            <summary>设置 Presence.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.AllInstances.ErrorSetError">
            <summary>设置 Presence.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimPresence.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimPresence.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.Constructor">
            <summary>设置 Presence.Presence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.ConstructorShowTypeString">
            <summary>设置 Presence.Presence(ShowType show, String status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.ConstructorShowTypeStringInt32">
            <summary>设置 Presence.Presence(ShowType show, String status, Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.ErrorGet">
            <summary>设置 Presence.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimPresence.ErrorSetError">
            <summary>设置 Presence.set_Error(Error value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimRoute">
            <summary>agsXMPP.protocol.component.Route 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimRoute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimRoute.#ctor(agsXMPP.protocol.component.Route)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.ShimRoute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.AllInstances.RouteElementGet">
            <summary>设置 Route.get_RouteElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.AllInstances.RouteElementSetElement">
            <summary>设置 Route.set_RouteElement(Element value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.AllInstances.TypeGet">
            <summary>设置 Route.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.AllInstances.TypeSetRouteType">
            <summary>设置 Route.set_Type(RouteType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimRoute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.ShimRoute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.Constructor">
            <summary>设置 Route.Route() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.ConstructorElement">
            <summary>设置 Route.Route(Element route) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.ConstructorElementJidJid">
            <summary>设置 Route.Route(Element route, Jid from, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.ConstructorElementJidJidRouteType">
            <summary>设置 Route.Route(Element route, Jid from, Jid to, RouteType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.RouteElementGet">
            <summary>设置 Route.get_RouteElement() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.RouteElementSetElement">
            <summary>设置 Route.set_RouteElement(Element value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.TypeGet">
            <summary>设置 Route.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.ShimRoute.TypeSetRouteType">
            <summary>设置 Route.set_Type(RouteType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubError">
            <summary>agsXMPP.protocol.component.Error 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorCode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorCondition)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.#ctor(agsXMPP.protocol.client.ErrorType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubError.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.AttachBackingFieldToValue">
            <summary>附加委托以将 StubError.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubError.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.InitializeStub">
            <summary>初始化 type StubError 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubError.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubError.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubError.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubError.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubError.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubError.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubError.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubHandshake">
            <summary>agsXMPP.protocol.component.Handshake 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubHandshake.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.AttachBackingFieldToValue">
            <summary>附加委托以将 StubHandshake.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubHandshake.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.InitializeStub">
            <summary>初始化 type StubHandshake 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubHandshake.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubHandshake.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubHandshake.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubHandshake.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubHandshake.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubHandshake.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubHandshake.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubIQ">
            <summary>agsXMPP.protocol.component.IQ 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.#ctor(agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.AttachBackingFieldToBind">
            <summary>附加委托以将 StubIQ.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.AttachBackingFieldToSession">
            <summary>附加委托以将 StubIQ.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIQ.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubIQ.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.InitializeStub">
            <summary>初始化 type StubIQ 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubIQ.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubIQ.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubIQ.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubLog">
            <summary>agsXMPP.protocol.component.Log 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubLog.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.AttachBackingFieldToValue">
            <summary>附加委托以将 StubLog.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubLog.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.InitializeStub">
            <summary>初始化 type StubLog 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubLog.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubLog.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubLog.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubLog.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubLog.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubLog.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubLog.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubMessage">
            <summary>agsXMPP.protocol.component.Message 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(System.String,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.#ctor(agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.client.MessageType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubMessage.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMessage.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.InitializeStub">
            <summary>初始化 type StubMessage 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubMessage.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubMessage.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubMessage.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubMessage.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubMessage.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubPresence">
            <summary>agsXMPP.protocol.component.Presence 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.#ctor(agsXMPP.protocol.client.ShowType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.#ctor(agsXMPP.protocol.client.ShowType,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubPresence.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPresence.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubPresence.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.InitializeStub">
            <summary>初始化 type StubPresence 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubPresence.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubPresence.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubPresence.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubPresence.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubPresence.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubPresence.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubPresence.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.component.Fakes.StubRoute">
            <summary>agsXMPP.protocol.component.Route 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.#ctor(agsXMPP.Xml.Dom.Element)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.#ctor(agsXMPP.Xml.Dom.Element,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.#ctor(agsXMPP.Xml.Dom.Element,agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.component.RouteType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubRoute.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRoute.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubRoute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.InitializeStub">
            <summary>初始化 type StubRoute 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubRoute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubRoute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.component.Fakes.StubRoute.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubRoute.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.component.Fakes.StubRoute.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubRoute.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.component.Fakes.StubRoute.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp">
            <summary>agsXMPP.protocol.extensions.amp.Amp 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.#ctor(agsXMPP.protocol.extensions.amp.Amp)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AddRule">
            <summary>设置 Amp.AddRule() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AddRuleRule">
            <summary>设置 Amp.AddRule(Rule rule) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.AddRule">
            <summary>设置 Amp.AddRule() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.AddRuleRule">
            <summary>设置 Amp.AddRule(Rule rule) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.GetRules">
            <summary>设置 Amp.GetRules() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.PerHopGet">
            <summary>设置 Amp.get_PerHop() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.PerHopSetBoolean">
            <summary>设置 Amp.set_PerHop(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.StatusGet">
            <summary>设置 Amp.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.AllInstances.StatusSetAction">
            <summary>设置 Amp.set_Status(Action value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.Constructor">
            <summary>设置 Amp.Amp() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.GetRules">
            <summary>设置 Amp.GetRules() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.PerHopGet">
            <summary>设置 Amp.get_PerHop() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.PerHopSetBoolean">
            <summary>设置 Amp.set_PerHop(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.StatusGet">
            <summary>设置 Amp.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimAmp.StatusSetAction">
            <summary>设置 Amp.set_Status(Action value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.ShimRule">
            <summary>agsXMPP.protocol.extensions.amp.Rule 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.#ctor(agsXMPP.protocol.extensions.amp.Rule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ActionGet">
            <summary>设置 Rule.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ActionSetAction">
            <summary>设置 Rule.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ActionGet">
            <summary>设置 Rule.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ActionSetAction">
            <summary>设置 Rule.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ConditionGet">
            <summary>设置 Rule.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ConditionSetCondition">
            <summary>设置 Rule.set_Condition(Condition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ValGet">
            <summary>设置 Rule.get_Val() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.AllInstances.ValSetString">
            <summary>设置 Rule.set_Val(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ConditionGet">
            <summary>设置 Rule.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ConditionSetCondition">
            <summary>设置 Rule.set_Condition(Condition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.Constructor">
            <summary>设置 Rule.Rule() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ConstructorConditionStringAction">
            <summary>设置 Rule.Rule(Condition condition, String val, Action action) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ValGet">
            <summary>设置 Rule.get_Val() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.ShimRule.ValSetString">
            <summary>设置 Rule.set_Val(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.StubAmp">
            <summary>agsXMPP.protocol.extensions.amp.Amp 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAmp.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.InitializeStub">
            <summary>初始化 type StubAmp 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubAmp.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.amp.Fakes.StubRule">
            <summary>agsXMPP.protocol.extensions.amp.Rule 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.#ctor(agsXMPP.protocol.extensions.amp.Condition,System.String,agsXMPP.protocol.extensions.amp.Action)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubRule.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRule.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.InitializeStub">
            <summary>初始化 type StubRule 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.amp.Fakes.StubRule.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubRule.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.amp.Fakes.StubRule.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubRule.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.amp.Fakes.StubRule.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager">
            <summary>agsXMPP.protocol.extensions.bookmarks.BookmarkManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.#ctor(agsXMPP.protocol.extensions.bookmarks.BookmarkManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.RequestBookmarks">
            <summary>设置 BookmarkManager.RequestBookmarks() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.RequestBookmarksIqCB">
            <summary>设置 BookmarkManager.RequestBookmarks(IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.RequestBookmarksIqCBObject">
            <summary>设置 BookmarkManager.RequestBookmarks(IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksConferenceArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksConferenceArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksConferenceArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArrayConferenceArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArrayConferenceArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArrayConferenceArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.AllInstances.StoreBookmarksUrlArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.ConstructorXmppClientConnection">
            <summary>设置 BookmarkManager.BookmarkManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.RequestBookmarks">
            <summary>设置 BookmarkManager.RequestBookmarks() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.RequestBookmarksIqCB">
            <summary>设置 BookmarkManager.RequestBookmarks(IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.RequestBookmarksIqCBObject">
            <summary>设置 BookmarkManager.RequestBookmarks(IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksConferenceArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksConferenceArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksConferenceArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Conference[] conferences, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArrayConferenceArray">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArrayConferenceArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArrayConferenceArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, Conference[] conferences, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArrayIqCB">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimBookmarkManager.StoreBookmarksUrlArrayIqCBObject">
            <summary>设置 BookmarkManager.StoreBookmarks(Url[] urls, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference">
            <summary>agsXMPP.protocol.extensions.bookmarks.Conference 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.#ctor(agsXMPP.protocol.extensions.bookmarks.Conference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.AutoJoinGet">
            <summary>设置 Conference.get_AutoJoin() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.AutoJoinSetBoolean">
            <summary>设置 Conference.set_AutoJoin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.JidGet">
            <summary>设置 Conference.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.JidSetJid">
            <summary>设置 Conference.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.NameGet">
            <summary>设置 Conference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.NameSetString">
            <summary>设置 Conference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.NicknameGet">
            <summary>设置 Conference.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.NicknameSetString">
            <summary>设置 Conference.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.PasswordGet">
            <summary>设置 Conference.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AllInstances.PasswordSetString">
            <summary>设置 Conference.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AutoJoinGet">
            <summary>设置 Conference.get_AutoJoin() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.AutoJoinSetBoolean">
            <summary>设置 Conference.set_AutoJoin(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.Constructor">
            <summary>设置 Conference.Conference() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.ConstructorJidString">
            <summary>设置 Conference.Conference(Jid jid, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.ConstructorJidStringString">
            <summary>设置 Conference.Conference(Jid jid, String name, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.ConstructorJidStringStringString">
            <summary>设置 Conference.Conference(Jid jid, String name, String nickname, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.ConstructorJidStringStringStringBoolean">
            <summary>设置 Conference.Conference(Jid jid, String name, String nickname, String password, Boolean autojoin) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.JidGet">
            <summary>设置 Conference.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.JidSetJid">
            <summary>设置 Conference.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.NameGet">
            <summary>设置 Conference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.NameSetString">
            <summary>设置 Conference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.NicknameGet">
            <summary>设置 Conference.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.NicknameSetString">
            <summary>设置 Conference.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.PasswordGet">
            <summary>设置 Conference.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimConference.PasswordSetString">
            <summary>设置 Conference.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage">
            <summary>agsXMPP.protocol.extensions.bookmarks.Storage 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.#ctor(agsXMPP.protocol.extensions.bookmarks.Storage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferenceConference">
            <summary>设置 Storage.AddConference(Conference conf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferenceJidString">
            <summary>设置 Storage.AddConference(Jid jid, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferenceJidStringString">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferenceJidStringStringString">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferenceJidStringStringStringBoolean">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname, String password, Boolean autojoin) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddConferencesConferenceArray">
            <summary>设置 Storage.AddConferences(Conference[] confs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddUrlStringString">
            <summary>设置 Storage.AddUrl(String address, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddUrlUrl">
            <summary>设置 Storage.AddUrl(Url url) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AddUrlsUrlArray">
            <summary>设置 Storage.AddUrls(Url[] urls) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferenceConference">
            <summary>设置 Storage.AddConference(Conference conf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferenceJidString">
            <summary>设置 Storage.AddConference(Jid jid, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferenceJidStringString">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferenceJidStringStringString">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferenceJidStringStringStringBoolean">
            <summary>设置 Storage.AddConference(Jid jid, String name, String nickname, String password, Boolean autojoin) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddConferencesConferenceArray">
            <summary>设置 Storage.AddConferences(Conference[] confs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddUrlStringString">
            <summary>设置 Storage.AddUrl(String address, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddUrlUrl">
            <summary>设置 Storage.AddUrl(Url url) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.AddUrlsUrlArray">
            <summary>设置 Storage.AddUrls(Url[] urls) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.GetConferences">
            <summary>设置 Storage.GetConferences() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.AllInstances.GetUrls">
            <summary>设置 Storage.GetUrls() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.Constructor">
            <summary>设置 Storage.Storage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.GetConferences">
            <summary>设置 Storage.GetConferences() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorage.GetUrls">
            <summary>设置 Storage.GetUrls() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq">
            <summary>agsXMPP.protocol.extensions.bookmarks.StorageIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.#ctor(agsXMPP.protocol.extensions.bookmarks.StorageIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.Constructor">
            <summary>设置 StorageIq.StorageIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.ConstructorIqType">
            <summary>设置 StorageIq.StorageIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.ConstructorIqTypeJid">
            <summary>设置 StorageIq.StorageIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimStorageIq.ConstructorIqTypeJidJid">
            <summary>设置 StorageIq.StorageIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl">
            <summary>agsXMPP.protocol.extensions.bookmarks.Url 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.#ctor(agsXMPP.protocol.extensions.bookmarks.Url)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AddressGet">
            <summary>设置 Url.get_Address() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AddressSetString">
            <summary>设置 Url.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AllInstances.AddressGet">
            <summary>设置 Url.get_Address() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AllInstances.AddressSetString">
            <summary>设置 Url.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AllInstances.NameGet">
            <summary>设置 Url.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.AllInstances.NameSetString">
            <summary>设置 Url.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.Constructor">
            <summary>设置 Url.Url() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.ConstructorStringString">
            <summary>设置 Url.Url(String address, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.NameGet">
            <summary>设置 Url.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.ShimUrl.NameSetString">
            <summary>设置 Url.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager">
            <summary>agsXMPP.protocol.extensions.bookmarks.BookmarkManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager.InitializeStub">
            <summary>初始化 type StubBookmarkManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubBookmarkManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference">
            <summary>agsXMPP.protocol.extensions.bookmarks.Conference 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.#ctor(agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.#ctor(agsXMPP.Jid,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.#ctor(agsXMPP.Jid,System.String,System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.AttachBackingFieldToValue">
            <summary>附加委托以将 StubConference.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.InitializeStub">
            <summary>初始化 type StubConference 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubConference.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage">
            <summary>agsXMPP.protocol.extensions.bookmarks.Storage 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStorage.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.InitializeStub">
            <summary>初始化 type StubStorage 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorage.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq">
            <summary>agsXMPP.protocol.extensions.bookmarks.StorageIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubStorageIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubStorageIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStorageIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubStorageIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.InitializeStub">
            <summary>初始化 type StubStorageIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubStorageIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl">
            <summary>agsXMPP.protocol.extensions.bookmarks.Url 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.AttachBackingFieldToValue">
            <summary>附加委托以将 StubUrl.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.InitializeStub">
            <summary>初始化 type StubUrl 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bookmarks.Fakes.StubUrl.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody">
            <summary>agsXMPP.protocol.extensions.bosh.Body 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.#ctor(agsXMPP.protocol.extensions.bosh.Body)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AckGet">
            <summary>设置 Body.get_Ack() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AckSetInt64">
            <summary>设置 Body.set_Ack(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.AckGet">
            <summary>设置 Body.get_Ack() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.AckSetInt64">
            <summary>设置 Body.set_Ack(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.FromGet">
            <summary>设置 Body.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.FromSetJid">
            <summary>设置 Body.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.HoldGet">
            <summary>设置 Body.get_Hold() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.HoldSetInt32">
            <summary>设置 Body.set_Hold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.InactivityGet">
            <summary>设置 Body.get_Inactivity() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.InactivitySetInt32">
            <summary>设置 Body.set_Inactivity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.KeyGet">
            <summary>设置 Body.get_Key() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.KeySetString">
            <summary>设置 Body.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.MaxPauseGet">
            <summary>设置 Body.get_MaxPause() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.MaxPauseSetInt32">
            <summary>设置 Body.set_MaxPause(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.NewKeyGet">
            <summary>设置 Body.get_NewKey() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.NewKeySetString">
            <summary>设置 Body.set_NewKey(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.PollingGet">
            <summary>设置 Body.get_Polling() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.PollingSetInt32">
            <summary>设置 Body.set_Polling(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.RequestsGet">
            <summary>设置 Body.get_Requests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.RequestsSetInt32">
            <summary>设置 Body.set_Requests(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.RidGet">
            <summary>设置 Body.get_Rid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.RidSetInt64">
            <summary>设置 Body.set_Rid(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.SecureGet">
            <summary>设置 Body.get_Secure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.SecureSetBoolean">
            <summary>设置 Body.set_Secure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.SidGet">
            <summary>设置 Body.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.SidSetString">
            <summary>设置 Body.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.ToGet">
            <summary>设置 Body.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.ToSetJid">
            <summary>设置 Body.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.TypeGet">
            <summary>设置 Body.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.TypeSetBoshType">
            <summary>设置 Body.set_Type(BoshType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.VersionGet">
            <summary>设置 Body.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.VersionSetString">
            <summary>设置 Body.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.WaitGet">
            <summary>设置 Body.get_Wait() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.WaitSetInt32">
            <summary>设置 Body.set_Wait(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.XmppRestartGet">
            <summary>设置 Body.get_XmppRestart() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.XmppRestartSetBoolean">
            <summary>设置 Body.set_XmppRestart(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.XmppVersionGet">
            <summary>设置 Body.get_XmppVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.AllInstances.XmppVersionSetString">
            <summary>设置 Body.set_XmppVersion(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.Constructor">
            <summary>设置 Body.Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.FromGet">
            <summary>设置 Body.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.FromSetJid">
            <summary>设置 Body.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.HoldGet">
            <summary>设置 Body.get_Hold() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.HoldSetInt32">
            <summary>设置 Body.set_Hold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.InactivityGet">
            <summary>设置 Body.get_Inactivity() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.InactivitySetInt32">
            <summary>设置 Body.set_Inactivity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.KeyGet">
            <summary>设置 Body.get_Key() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.KeySetString">
            <summary>设置 Body.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.MaxPauseGet">
            <summary>设置 Body.get_MaxPause() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.MaxPauseSetInt32">
            <summary>设置 Body.set_MaxPause(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.NewKeyGet">
            <summary>设置 Body.get_NewKey() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.NewKeySetString">
            <summary>设置 Body.set_NewKey(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.PollingGet">
            <summary>设置 Body.get_Polling() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.PollingSetInt32">
            <summary>设置 Body.set_Polling(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.RequestsGet">
            <summary>设置 Body.get_Requests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.RequestsSetInt32">
            <summary>设置 Body.set_Requests(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.RidGet">
            <summary>设置 Body.get_Rid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.RidSetInt64">
            <summary>设置 Body.set_Rid(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.SecureGet">
            <summary>设置 Body.get_Secure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.SecureSetBoolean">
            <summary>设置 Body.set_Secure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.SidGet">
            <summary>设置 Body.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.SidSetString">
            <summary>设置 Body.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.ToGet">
            <summary>设置 Body.get_To() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.ToSetJid">
            <summary>设置 Body.set_To(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.TypeGet">
            <summary>设置 Body.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.TypeSetBoshType">
            <summary>设置 Body.set_Type(BoshType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.VersionGet">
            <summary>设置 Body.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.VersionSetString">
            <summary>设置 Body.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.WaitGet">
            <summary>设置 Body.get_Wait() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.WaitSetInt32">
            <summary>设置 Body.set_Wait(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.XmppRestartGet">
            <summary>设置 Body.get_XmppRestart() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.XmppRestartSetBoolean">
            <summary>设置 Body.set_XmppRestart(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.XmppVersionGet">
            <summary>设置 Body.get_XmppVersion() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.ShimBody.XmppVersionSetString">
            <summary>设置 Body.set_XmppVersion(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bosh.Fakes.StubBody">
            <summary>agsXMPP.protocol.extensions.bosh.Body 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBody.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.InitializeStub">
            <summary>初始化 type StubBody 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bosh.Fakes.StubBody.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate">
            <summary>agsXMPP.protocol.extensions.bytestreams.Activate 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.#ctor(agsXMPP.protocol.extensions.bytestreams.Activate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.AllInstances.JidGet">
            <summary>设置 Activate.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.AllInstances.JidSetJid">
            <summary>设置 Activate.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.Constructor">
            <summary>设置 Activate.Activate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.ConstructorJid">
            <summary>设置 Activate.Activate(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.JidGet">
            <summary>设置 Activate.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimActivate.JidSetJid">
            <summary>设置 Activate.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream">
            <summary>agsXMPP.protocol.extensions.bytestreams.ByteStream 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.#ctor(agsXMPP.protocol.extensions.bytestreams.ByteStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.ActivateGet">
            <summary>设置 ByteStream.get_Activate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.ActivateSetActivate">
            <summary>设置 ByteStream.set_Activate(Activate value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AddStreamHost">
            <summary>设置 ByteStream.AddStreamHost() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AddStreamHostJidString">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AddStreamHostJidStringInt32">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AddStreamHostJidStringInt32String">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host, Int32 port, String zeroconf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AddStreamHostStreamHost">
            <summary>设置 ByteStream.AddStreamHost(StreamHost sh) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.ActivateGet">
            <summary>设置 ByteStream.get_Activate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.ActivateSetActivate">
            <summary>设置 ByteStream.set_Activate(Activate value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.AddStreamHost">
            <summary>设置 ByteStream.AddStreamHost() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.AddStreamHostJidString">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.AddStreamHostJidStringInt32">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.AddStreamHostJidStringInt32String">
            <summary>设置 ByteStream.AddStreamHost(Jid jid, String host, Int32 port, String zeroconf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.AddStreamHostStreamHost">
            <summary>设置 ByteStream.AddStreamHost(StreamHost sh) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.GetStreamHosts">
            <summary>设置 ByteStream.GetStreamHosts() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.ModeGet">
            <summary>设置 ByteStream.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.ModeSetMode">
            <summary>设置 ByteStream.set_Mode(Mode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.SidGet">
            <summary>设置 ByteStream.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.SidSetString">
            <summary>设置 ByteStream.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.StreamHostUsedGet">
            <summary>设置 ByteStream.get_StreamHostUsed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.AllInstances.StreamHostUsedSetStreamHostUsed">
            <summary>设置 ByteStream.set_StreamHostUsed(StreamHostUsed value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.Constructor">
            <summary>设置 ByteStream.ByteStream() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.GetStreamHosts">
            <summary>设置 ByteStream.GetStreamHosts() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.ModeGet">
            <summary>设置 ByteStream.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.ModeSetMode">
            <summary>设置 ByteStream.set_Mode(Mode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.SidGet">
            <summary>设置 ByteStream.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.SidSetString">
            <summary>设置 ByteStream.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.StreamHostUsedGet">
            <summary>设置 ByteStream.get_StreamHostUsed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStream.StreamHostUsedSetStreamHostUsed">
            <summary>设置 ByteStream.set_StreamHostUsed(StreamHostUsed value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq">
            <summary>agsXMPP.protocol.extensions.bytestreams.ByteStreamIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.#ctor(agsXMPP.protocol.extensions.bytestreams.ByteStreamIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.AllInstances.QueryGet">
            <summary>设置 ByteStreamIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.Constructor">
            <summary>设置 ByteStreamIq.ByteStreamIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.ConstructorIqType">
            <summary>设置 ByteStreamIq.ByteStreamIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.ConstructorIqTypeJid">
            <summary>设置 ByteStreamIq.ByteStreamIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.ConstructorIqTypeJidJid">
            <summary>设置 ByteStreamIq.ByteStreamIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.ConstructorIqTypeJidJidString">
            <summary>设置 ByteStreamIq.ByteStreamIq(IqType type, Jid to, Jid from, String Id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimByteStreamIq.QueryGet">
            <summary>设置 ByteStreamIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost">
            <summary>agsXMPP.protocol.extensions.bytestreams.StreamHost 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.#ctor(agsXMPP.protocol.extensions.bytestreams.StreamHost)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.HostGet">
            <summary>设置 StreamHost.get_Host() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.HostSetString">
            <summary>设置 StreamHost.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.JidGet">
            <summary>设置 StreamHost.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.JidSetJid">
            <summary>设置 StreamHost.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.PortGet">
            <summary>设置 StreamHost.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.PortSetInt32">
            <summary>设置 StreamHost.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.ZeroconfGet">
            <summary>设置 StreamHost.get_Zeroconf() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.AllInstances.ZeroconfSetString">
            <summary>设置 StreamHost.set_Zeroconf(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.Constructor">
            <summary>设置 StreamHost.StreamHost() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.ConstructorJidString">
            <summary>设置 StreamHost.StreamHost(Jid jid, String host) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.ConstructorJidStringInt32">
            <summary>设置 StreamHost.StreamHost(Jid jid, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.ConstructorJidStringInt32String">
            <summary>设置 StreamHost.StreamHost(Jid jid, String host, Int32 port, String zeroconf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.HostGet">
            <summary>设置 StreamHost.get_Host() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.HostSetString">
            <summary>设置 StreamHost.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.JidGet">
            <summary>设置 StreamHost.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.JidSetJid">
            <summary>设置 StreamHost.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.PortGet">
            <summary>设置 StreamHost.get_Port() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.PortSetInt32">
            <summary>设置 StreamHost.set_Port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.ZeroconfGet">
            <summary>设置 StreamHost.get_Zeroconf() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHost.ZeroconfSetString">
            <summary>设置 StreamHost.set_Zeroconf(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed">
            <summary>agsXMPP.protocol.extensions.bytestreams.StreamHostUsed 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.#ctor(agsXMPP.protocol.extensions.bytestreams.StreamHostUsed)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.AllInstances.JidGet">
            <summary>设置 StreamHostUsed.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.AllInstances.JidSetJid">
            <summary>设置 StreamHostUsed.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.Constructor">
            <summary>设置 StreamHostUsed.StreamHostUsed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.ConstructorJid">
            <summary>设置 StreamHostUsed.StreamHostUsed(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.JidGet">
            <summary>设置 StreamHostUsed.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimStreamHostUsed.JidSetJid">
            <summary>设置 StreamHostUsed.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess">
            <summary>agsXMPP.protocol.extensions.bytestreams.UdpSuccess 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.#ctor(agsXMPP.protocol.extensions.bytestreams.UdpSuccess)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.AllInstances.DestinationAddressGet">
            <summary>设置 UdpSuccess.get_DestinationAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.AllInstances.DestinationAddressSetString">
            <summary>设置 UdpSuccess.set_DestinationAddress(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.ConstructorString">
            <summary>设置 UdpSuccess.UdpSuccess(String dstaddr) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.DestinationAddressGet">
            <summary>设置 UdpSuccess.get_DestinationAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.ShimUdpSuccess.DestinationAddressSetString">
            <summary>设置 UdpSuccess.set_DestinationAddress(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate">
            <summary>agsXMPP.protocol.extensions.bytestreams.Activate 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.AttachBackingFieldToValue">
            <summary>附加委托以将 StubActivate.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.InitializeStub">
            <summary>初始化 type StubActivate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubActivate.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream">
            <summary>agsXMPP.protocol.extensions.bytestreams.ByteStream 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.AttachBackingFieldToValue">
            <summary>附加委托以将 StubByteStream.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.InitializeStub">
            <summary>初始化 type StubByteStream 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStream.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq">
            <summary>agsXMPP.protocol.extensions.bytestreams.ByteStreamIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubByteStreamIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubByteStreamIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubByteStreamIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubByteStreamIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.InitializeStub">
            <summary>初始化 type StubByteStreamIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubByteStreamIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost">
            <summary>agsXMPP.protocol.extensions.bytestreams.StreamHost 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.#ctor(agsXMPP.Jid,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.#ctor(agsXMPP.Jid,System.String,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStreamHost.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.InitializeStub">
            <summary>初始化 type StubStreamHost 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHost.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed">
            <summary>agsXMPP.protocol.extensions.bytestreams.StreamHostUsed 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStreamHostUsed.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.InitializeStub">
            <summary>初始化 type StubStreamHostUsed 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubStreamHostUsed.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess">
            <summary>agsXMPP.protocol.extensions.bytestreams.UdpSuccess 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.AttachBackingFieldToValue">
            <summary>附加委托以将 StubUdpSuccess.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.InitializeStub">
            <summary>初始化 type StubUdpSuccess 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.bytestreams.Fakes.StubUdpSuccess.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities">
            <summary>agsXMPP.protocol.extensions.caps.Capabilities 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.#ctor(agsXMPP.protocol.extensions.caps.Capabilities)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AddExtensionString">
            <summary>设置 Capabilities.AddExtension(String ext) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.AddExtensionString">
            <summary>设置 Capabilities.AddExtension(String ext) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.BuildCapsVersionDiscoInfo">
            <summary>设置 Capabilities.BuildCapsVersion(DiscoInfo di) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.ContainsExtensionString">
            <summary>设置 Capabilities.ContainsExtension(String ext) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.ExtensionsGet">
            <summary>设置 Capabilities.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.ExtensionsSetStringArray">
            <summary>设置 Capabilities.set_Extensions(String[] value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.NodeGet">
            <summary>设置 Capabilities.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.NodeSetString">
            <summary>设置 Capabilities.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.RemoveExtensionString">
            <summary>设置 Capabilities.RemoveExtension(String ext) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.SetVersionDiscoInfo">
            <summary>设置 Capabilities.SetVersion(DiscoInfo di) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.VersionGet">
            <summary>设置 Capabilities.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.AllInstances.VersionSetString">
            <summary>设置 Capabilities.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.BuildCapsVersionDiscoInfo">
            <summary>设置 Capabilities.BuildCapsVersion(DiscoInfo di) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.Constructor">
            <summary>设置 Capabilities.Capabilities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.ConstructorStringString">
            <summary>设置 Capabilities.Capabilities(String version, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.ContainsExtensionString">
            <summary>设置 Capabilities.ContainsExtension(String ext) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.ExtensionsGet">
            <summary>设置 Capabilities.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.ExtensionsSetStringArray">
            <summary>设置 Capabilities.set_Extensions(String[] value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.NodeGet">
            <summary>设置 Capabilities.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.NodeSetString">
            <summary>设置 Capabilities.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.RemoveExtensionString">
            <summary>设置 Capabilities.RemoveExtension(String ext) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.SetVersionDiscoInfo">
            <summary>设置 Capabilities.SetVersion(DiscoInfo di) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.VersionGet">
            <summary>设置 Capabilities.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.ShimCapabilities.VersionSetString">
            <summary>设置 Capabilities.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities">
            <summary>agsXMPP.protocol.extensions.caps.Capabilities 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCapabilities.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.InitializeStub">
            <summary>初始化 type StubCapabilities 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.caps.Fakes.StubCapabilities.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive">
            <summary>agsXMPP.protocol.extensions.chatstates.Active 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.#ctor(agsXMPP.protocol.extensions.chatstates.Active)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimActive.Constructor">
            <summary>设置 Active.Active() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing">
            <summary>agsXMPP.protocol.extensions.chatstates.Composing 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.#ctor(agsXMPP.protocol.extensions.chatstates.Composing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimComposing.Constructor">
            <summary>设置 Composing.Composing() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone">
            <summary>agsXMPP.protocol.extensions.chatstates.Gone 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.#ctor(agsXMPP.protocol.extensions.chatstates.Gone)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimGone.Constructor">
            <summary>设置 Gone.Gone() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive">
            <summary>agsXMPP.protocol.extensions.chatstates.Inactive 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.#ctor(agsXMPP.protocol.extensions.chatstates.Inactive)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimInactive.Constructor">
            <summary>设置 Inactive.Inactive() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused">
            <summary>agsXMPP.protocol.extensions.chatstates.Paused 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.#ctor(agsXMPP.protocol.extensions.chatstates.Paused)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.ShimPaused.Constructor">
            <summary>设置 Paused.Paused() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive">
            <summary>agsXMPP.protocol.extensions.chatstates.Active 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.AttachBackingFieldToValue">
            <summary>附加委托以将 StubActive.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.InitializeStub">
            <summary>初始化 type StubActive 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubActive.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing">
            <summary>agsXMPP.protocol.extensions.chatstates.Composing 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.AttachBackingFieldToValue">
            <summary>附加委托以将 StubComposing.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.InitializeStub">
            <summary>初始化 type StubComposing 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubComposing.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone">
            <summary>agsXMPP.protocol.extensions.chatstates.Gone 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.AttachBackingFieldToValue">
            <summary>附加委托以将 StubGone.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.InitializeStub">
            <summary>初始化 type StubGone 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubGone.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive">
            <summary>agsXMPP.protocol.extensions.chatstates.Inactive 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.AttachBackingFieldToValue">
            <summary>附加委托以将 StubInactive.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.InitializeStub">
            <summary>初始化 type StubInactive 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubInactive.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused">
            <summary>agsXMPP.protocol.extensions.chatstates.Paused 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPaused.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.InitializeStub">
            <summary>初始化 type StubPaused 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.chatstates.Fakes.StubPaused.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimActions">
            <summary>agsXMPP.protocol.extensions.commands.Actions 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.#ctor(agsXMPP.protocol.extensions.commands.Actions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.ActionGet">
            <summary>设置 Actions.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.ActionSetAction">
            <summary>设置 Actions.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.ActionGet">
            <summary>设置 Actions.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.ActionSetAction">
            <summary>设置 Actions.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.CompleteGet">
            <summary>设置 Actions.get_Complete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.CompleteSetBoolean">
            <summary>设置 Actions.set_Complete(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.ExecuteGet">
            <summary>设置 Actions.get_Execute() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.ExecuteSetAction">
            <summary>设置 Actions.set_Execute(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.NextGet">
            <summary>设置 Actions.get_Next() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.NextSetBoolean">
            <summary>设置 Actions.set_Next(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.PreviousGet">
            <summary>设置 Actions.get_Previous() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.AllInstances.PreviousSetBoolean">
            <summary>设置 Actions.set_Previous(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.CompleteGet">
            <summary>设置 Actions.get_Complete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.CompleteSetBoolean">
            <summary>设置 Actions.set_Complete(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.Constructor">
            <summary>设置 Actions.Actions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.ExecuteGet">
            <summary>设置 Actions.get_Execute() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.ExecuteSetAction">
            <summary>设置 Actions.set_Execute(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.NextGet">
            <summary>设置 Actions.get_Next() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.NextSetBoolean">
            <summary>设置 Actions.set_Next(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.PreviousGet">
            <summary>设置 Actions.get_Previous() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimActions.PreviousSetBoolean">
            <summary>设置 Actions.set_Previous(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand">
            <summary>agsXMPP.protocol.extensions.commands.Command 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.#ctor(agsXMPP.protocol.extensions.commands.Command)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ActionGet">
            <summary>设置 Command.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ActionSetAction">
            <summary>设置 Command.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ActionsGet">
            <summary>设置 Command.get_Actions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ActionsSetActions">
            <summary>设置 Command.set_Actions(Actions value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.ActionGet">
            <summary>设置 Command.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.ActionSetAction">
            <summary>设置 Command.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.ActionsGet">
            <summary>设置 Command.get_Actions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.ActionsSetActions">
            <summary>设置 Command.set_Actions(Actions value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.DataGet">
            <summary>设置 Command.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.DataSetData">
            <summary>设置 Command.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.NodeGet">
            <summary>设置 Command.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.NodeSetString">
            <summary>设置 Command.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.NoteGet">
            <summary>设置 Command.get_Note() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.NoteSetNote">
            <summary>设置 Command.set_Note(Note value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.SessionIdGet">
            <summary>设置 Command.get_SessionId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.SessionIdSetString">
            <summary>设置 Command.set_SessionId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.StatusGet">
            <summary>设置 Command.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.AllInstances.StatusSetStatus">
            <summary>设置 Command.set_Status(Status value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.Constructor">
            <summary>设置 Command.Command() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorAction">
            <summary>设置 Command.Command(Action action) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorStatus">
            <summary>设置 Command.Command(Status status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorString">
            <summary>设置 Command.Command(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorStringString">
            <summary>设置 Command.Command(String node, String sessionId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorStringStringAction">
            <summary>设置 Command.Command(String node, String sessionId, Action action) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorStringStringActionStatus">
            <summary>设置 Command.Command(String node, String sessionId, Action action, Status status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.ConstructorStringStringStatus">
            <summary>设置 Command.Command(String node, String sessionId, Status status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.DataGet">
            <summary>设置 Command.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.DataSetData">
            <summary>设置 Command.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.NodeGet">
            <summary>设置 Command.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.NodeSetString">
            <summary>设置 Command.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.NoteGet">
            <summary>设置 Command.get_Note() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.NoteSetNote">
            <summary>设置 Command.set_Note(Note value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.SessionIdGet">
            <summary>设置 Command.get_SessionId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.SessionIdSetString">
            <summary>设置 Command.set_SessionId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.StatusGet">
            <summary>设置 Command.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimCommand.StatusSetStatus">
            <summary>设置 Command.set_Status(Status value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimNote">
            <summary>agsXMPP.protocol.extensions.commands.Note 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.#ctor(agsXMPP.protocol.extensions.commands.Note)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.AllInstances.TypeGet">
            <summary>设置 Note.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.AllInstances.TypeSetNoteType">
            <summary>设置 Note.set_Type(NoteType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.Constructor">
            <summary>设置 Note.Note() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.ConstructorNoteType">
            <summary>设置 Note.Note(NoteType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.ConstructorStringNoteType">
            <summary>设置 Note.Note(String text, NoteType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.TypeGet">
            <summary>设置 Note.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.ShimNote.TypeSetNoteType">
            <summary>设置 Note.set_Type(NoteType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.StubActions">
            <summary>agsXMPP.protocol.extensions.commands.Actions 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubActions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubActions.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubActions.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubActions.AttachBackingFieldToValue">
            <summary>附加委托以将 StubActions.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubActions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubActions.InitializeStub">
            <summary>初始化 type StubActions 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubActions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubActions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubActions.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubActions.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubActions.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubActions.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubActions.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.StubCommand">
            <summary>agsXMPP.protocol.extensions.commands.Command 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(agsXMPP.protocol.extensions.commands.Action)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(agsXMPP.protocol.extensions.commands.Status)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(System.String,System.String,agsXMPP.protocol.extensions.commands.Action)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(System.String,System.String,agsXMPP.protocol.extensions.commands.Status)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.#ctor(System.String,System.String,agsXMPP.protocol.extensions.commands.Action,agsXMPP.protocol.extensions.commands.Status)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCommand.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.InitializeStub">
            <summary>初始化 type StubCommand 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubCommand.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.commands.Fakes.StubNote">
            <summary>agsXMPP.protocol.extensions.commands.Note 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.#ctor(agsXMPP.protocol.extensions.commands.NoteType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.#ctor(System.String,agsXMPP.protocol.extensions.commands.NoteType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubNote.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.AttachBackingFieldToValue">
            <summary>附加委托以将 StubNote.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubNote.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.InitializeStub">
            <summary>初始化 type StubNote 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubNote.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubNote.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.commands.Fakes.StubNote.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubNote.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.commands.Fakes.StubNote.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubNote.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.commands.Fakes.StubNote.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress">
            <summary>agsXMPP.protocol.extensions.compression.Compress 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.#ctor(agsXMPP.protocol.extensions.compression.Compress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.AllInstances.MethodGet">
            <summary>设置 Compress.get_Method() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.AllInstances.MethodSetCompressionMethod">
            <summary>设置 Compress.set_Method(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.Constructor">
            <summary>设置 Compress.Compress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.ConstructorCompressionMethod">
            <summary>设置 Compress.Compress(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.MethodGet">
            <summary>设置 Compress.get_Method() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompress.MethodSetCompressionMethod">
            <summary>设置 Compress.set_Method(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed">
            <summary>agsXMPP.protocol.extensions.compression.Compressed 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.#ctor(agsXMPP.protocol.extensions.compression.Compressed)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimCompressed.Constructor">
            <summary>设置 Compressed.Compressed() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure">
            <summary>agsXMPP.protocol.extensions.compression.Failure 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.#ctor(agsXMPP.protocol.extensions.compression.Failure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.ShimFailure.Constructor">
            <summary>设置 Failure.Failure() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.StubCompress">
            <summary>agsXMPP.protocol.extensions.compression.Compress 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.#ctor(agsXMPP.protocol.extensions.compression.CompressionMethod)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCompress.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.InitializeStub">
            <summary>初始化 type StubCompress 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompress.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed">
            <summary>agsXMPP.protocol.extensions.compression.Compressed 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCompressed.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.InitializeStub">
            <summary>初始化 type StubCompressed 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubCompressed.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.compression.Fakes.StubFailure">
            <summary>agsXMPP.protocol.extensions.compression.Failure 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFailure.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.InitializeStub">
            <summary>初始化 type StubFailure 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.compression.Fakes.StubFailure.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg">
            <summary>agsXMPP.protocol.extensions.featureneg.FeatureNeg 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.#ctor(agsXMPP.protocol.extensions.featureneg.FeatureNeg)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.AllInstances.DataGet">
            <summary>设置 FeatureNeg.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.AllInstances.DataSetData">
            <summary>设置 FeatureNeg.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.Constructor">
            <summary>设置 FeatureNeg.FeatureNeg() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.DataGet">
            <summary>设置 FeatureNeg.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNeg.DataSetData">
            <summary>设置 FeatureNeg.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq">
            <summary>agsXMPP.protocol.extensions.featureneg.FeatureNegIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.#ctor(agsXMPP.protocol.extensions.featureneg.FeatureNegIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.AllInstances.FeatureNegGet">
            <summary>设置 FeatureNegIq.get_FeatureNeg() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.Constructor">
            <summary>设置 FeatureNegIq.FeatureNegIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.ConstructorIqType">
            <summary>设置 FeatureNegIq.FeatureNegIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.ShimFeatureNegIq.FeatureNegGet">
            <summary>设置 FeatureNegIq.get_FeatureNeg() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg">
            <summary>agsXMPP.protocol.extensions.featureneg.FeatureNeg 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFeatureNeg.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.InitializeStub">
            <summary>初始化 type StubFeatureNeg 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNeg.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq">
            <summary>agsXMPP.protocol.extensions.featureneg.FeatureNegIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubFeatureNegIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubFeatureNegIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFeatureNegIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubFeatureNegIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.InitializeStub">
            <summary>初始化 type StubFeatureNegIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.featureneg.Fakes.StubFeatureNegIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile">
            <summary>agsXMPP.protocol.extensions.filetransfer.File 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.#ctor(agsXMPP.protocol.extensions.filetransfer.File)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.DateGet">
            <summary>设置 File.get_Date() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.DateSetDateTime">
            <summary>设置 File.set_Date(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.DescriptionGet">
            <summary>设置 File.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.DescriptionSetString">
            <summary>设置 File.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.HashGet">
            <summary>设置 File.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.HashSetString">
            <summary>设置 File.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.NameGet">
            <summary>设置 File.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.NameSetString">
            <summary>设置 File.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.RangeGet">
            <summary>设置 File.get_Range() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.RangeSetRange">
            <summary>设置 File.set_Range(Range value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.SizeGet">
            <summary>设置 File.get_Size() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.AllInstances.SizeSetInt64">
            <summary>设置 File.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.Constructor">
            <summary>设置 File.File() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.ConstructorStringInt64">
            <summary>设置 File.File(String name, Int64 size) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.DateGet">
            <summary>设置 File.get_Date() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.DateSetDateTime">
            <summary>设置 File.set_Date(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.DescriptionGet">
            <summary>设置 File.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.DescriptionSetString">
            <summary>设置 File.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.HashGet">
            <summary>设置 File.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.HashSetString">
            <summary>设置 File.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.NameGet">
            <summary>设置 File.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.NameSetString">
            <summary>设置 File.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.RangeGet">
            <summary>设置 File.get_Range() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.RangeSetRange">
            <summary>设置 File.set_Range(Range value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.SizeGet">
            <summary>设置 File.get_Size() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimFile.SizeSetInt64">
            <summary>设置 File.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange">
            <summary>agsXMPP.protocol.extensions.filetransfer.Range 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.#ctor(agsXMPP.protocol.extensions.filetransfer.Range)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.AllInstances.LengthGet">
            <summary>设置 Range.get_Length() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.AllInstances.LengthSetInt64">
            <summary>设置 Range.set_Length(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.AllInstances.OffsetGet">
            <summary>设置 Range.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.AllInstances.OffsetSetInt64">
            <summary>设置 Range.set_Offset(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.Constructor">
            <summary>设置 Range.Range() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.ConstructorInt64Int64">
            <summary>设置 Range.Range(Int64 offset, Int64 length) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.LengthGet">
            <summary>设置 Range.get_Length() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.LengthSetInt64">
            <summary>设置 Range.set_Length(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.OffsetGet">
            <summary>设置 Range.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.ShimRange.OffsetSetInt64">
            <summary>设置 Range.set_Offset(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile">
            <summary>agsXMPP.protocol.extensions.filetransfer.File 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.#ctor(System.String,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFile.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.InitializeStub">
            <summary>初始化 type StubFile 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubFile.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange">
            <summary>agsXMPP.protocol.extensions.filetransfer.Range 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.#ctor(System.Int64,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRange.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.InitializeStub">
            <summary>初始化 type StubRange 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.filetransfer.Fakes.StubRange.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc">
            <summary>agsXMPP.protocol.extensions.geoloc.GeoLoc 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.#ctor(agsXMPP.protocol.extensions.geoloc.GeoLoc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.AltitudeGet">
            <summary>设置 GeoLoc.get_Altitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.AltitudeSetDouble">
            <summary>设置 GeoLoc.set_Altitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.BearingGet">
            <summary>设置 GeoLoc.get_Bearing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.BearingSetDouble">
            <summary>设置 GeoLoc.set_Bearing(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.DatumGet">
            <summary>设置 GeoLoc.get_Datum() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.DatumSetString">
            <summary>设置 GeoLoc.set_Datum(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.DescriptionGet">
            <summary>设置 GeoLoc.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.DescriptionSetString">
            <summary>设置 GeoLoc.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.ErrorGet">
            <summary>设置 GeoLoc.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.ErrorSetDouble">
            <summary>设置 GeoLoc.set_Error(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.LatitudeGet">
            <summary>设置 GeoLoc.get_Latitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.LatitudeSetDouble">
            <summary>设置 GeoLoc.set_Latitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.LongitudeGet">
            <summary>设置 GeoLoc.get_Longitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.LongitudeSetDouble">
            <summary>设置 GeoLoc.set_Longitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.TimestampGet">
            <summary>设置 GeoLoc.get_Timestamp() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AllInstances.TimestampSetDateTime">
            <summary>设置 GeoLoc.set_Timestamp(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AltitudeGet">
            <summary>设置 GeoLoc.get_Altitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.AltitudeSetDouble">
            <summary>设置 GeoLoc.set_Altitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.BearingGet">
            <summary>设置 GeoLoc.get_Bearing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.BearingSetDouble">
            <summary>设置 GeoLoc.set_Bearing(Double value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.Constructor">
            <summary>设置 GeoLoc.GeoLoc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.ConstructorDoubleDouble">
            <summary>设置 GeoLoc.GeoLoc(Double latitude, Double longitude) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.DatumGet">
            <summary>设置 GeoLoc.get_Datum() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.DatumSetString">
            <summary>设置 GeoLoc.set_Datum(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.DescriptionGet">
            <summary>设置 GeoLoc.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.DescriptionSetString">
            <summary>设置 GeoLoc.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.ErrorGet">
            <summary>设置 GeoLoc.get_Error() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.ErrorSetDouble">
            <summary>设置 GeoLoc.set_Error(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.LatitudeGet">
            <summary>设置 GeoLoc.get_Latitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.LatitudeSetDouble">
            <summary>设置 GeoLoc.set_Latitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.LongitudeGet">
            <summary>设置 GeoLoc.get_Longitude() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.LongitudeSetDouble">
            <summary>设置 GeoLoc.set_Longitude(Double value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.TimestampGet">
            <summary>设置 GeoLoc.get_Timestamp() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLoc.TimestampSetDateTime">
            <summary>设置 GeoLoc.set_Timestamp(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq">
            <summary>agsXMPP.protocol.extensions.geoloc.GeoLocIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.#ctor(agsXMPP.protocol.extensions.geoloc.GeoLocIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.AllInstances.QueryGet">
            <summary>设置 GeoLocIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.Constructor">
            <summary>设置 GeoLocIq.GeoLocIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.ConstructorIqType">
            <summary>设置 GeoLocIq.GeoLocIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.ConstructorIqTypeJid">
            <summary>设置 GeoLocIq.GeoLocIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.ConstructorIqTypeJidJid">
            <summary>设置 GeoLocIq.GeoLocIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.ShimGeoLocIq.QueryGet">
            <summary>设置 GeoLocIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc">
            <summary>agsXMPP.protocol.extensions.geoloc.GeoLoc 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.#ctor(System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.AttachBackingFieldToValue">
            <summary>附加委托以将 StubGeoLoc.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.InitializeStub">
            <summary>初始化 type StubGeoLoc 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLoc.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq">
            <summary>agsXMPP.protocol.extensions.geoloc.GeoLocIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubGeoLocIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubGeoLocIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubGeoLocIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubGeoLocIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.InitializeStub">
            <summary>初始化 type StubGeoLocIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.geoloc.Fakes.StubGeoLocIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.ShimBody">
            <summary>agsXMPP.protocol.extensions.html.Body 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimBody.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimBody.#ctor(agsXMPP.protocol.extensions.html.Body)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.ShimBody.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimBody.AllInstances.InnerHtmlGet">
            <summary>设置 Body.get_InnerHtml() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimBody.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimBody.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimBody.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimBody.Constructor">
            <summary>设置 Body.Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimBody.InnerHtmlGet">
            <summary>设置 Body.get_InnerHtml() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.ShimHtml">
            <summary>agsXMPP.protocol.extensions.html.Html 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.#ctor(agsXMPP.protocol.extensions.html.Html)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.AllInstances.BodyGet">
            <summary>设置 Html.get_Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.AllInstances.BodySetBody">
            <summary>设置 Html.set_Body(Body value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.BodyGet">
            <summary>设置 Html.get_Body() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.BodySetBody">
            <summary>设置 Html.set_Body(Body value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.ShimHtml.Constructor">
            <summary>设置 Html.Html() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.StubBody">
            <summary>agsXMPP.protocol.extensions.html.Body 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubBody.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubBody.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubBody.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubBody.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBody.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubBody.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubBody.InitializeStub">
            <summary>初始化 type StubBody 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubBody.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubBody.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubBody.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubBody.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubBody.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubBody.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubBody.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.html.Fakes.StubHtml">
            <summary>agsXMPP.protocol.extensions.html.Html 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubHtml.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubHtml.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubHtml.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubHtml.AttachBackingFieldToValue">
            <summary>附加委托以将 StubHtml.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubHtml.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubHtml.InitializeStub">
            <summary>初始化 type StubHtml 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubHtml.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubHtml.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.html.Fakes.StubHtml.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubHtml.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.html.Fakes.StubHtml.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubHtml.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.html.Fakes.StubHtml.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase">
            <summary>agsXMPP.protocol.extensions.ibb.Base 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.#ctor(agsXMPP.protocol.extensions.ibb.Base)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.AllInstances.SidGet">
            <summary>设置 Base.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.AllInstances.SidSetString">
            <summary>设置 Base.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.Constructor">
            <summary>设置 Base.Base() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.SidGet">
            <summary>设置 Base.get_Sid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimBase.SidSetString">
            <summary>设置 Base.set_Sid(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose">
            <summary>agsXMPP.protocol.extensions.ibb.Close 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.#ctor(agsXMPP.protocol.extensions.ibb.Close)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.Constructor">
            <summary>设置 Close.Close() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimClose.ConstructorString">
            <summary>设置 Close.Close(String sid) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimData">
            <summary>agsXMPP.protocol.extensions.ibb.Data 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.#ctor(agsXMPP.protocol.extensions.ibb.Data)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.AllInstances.SequenceGet">
            <summary>设置 Data.get_Sequence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.AllInstances.SequenceSetInt32">
            <summary>设置 Data.set_Sequence(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.Constructor">
            <summary>设置 Data.Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.ConstructorStringInt32">
            <summary>设置 Data.Data(String sid, Int32 seq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.SequenceGet">
            <summary>设置 Data.get_Sequence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimData.SequenceSetInt32">
            <summary>设置 Data.set_Sequence(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen">
            <summary>agsXMPP.protocol.extensions.ibb.Open 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.#ctor(agsXMPP.protocol.extensions.ibb.Open)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.AllInstances.BlockSizeGet">
            <summary>设置 Open.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.AllInstances.BlockSizeSetInt64">
            <summary>设置 Open.set_BlockSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.BlockSizeGet">
            <summary>设置 Open.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.BlockSizeSetInt64">
            <summary>设置 Open.set_BlockSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.Constructor">
            <summary>设置 Open.Open() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.ShimOpen.ConstructorStringInt64">
            <summary>设置 Open.Open(String sid, Int64 blocksize) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.StubBase">
            <summary>agsXMPP.protocol.extensions.ibb.Base 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBase.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.InitializeStub">
            <summary>初始化 type StubBase 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubBase.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.StubClose">
            <summary>agsXMPP.protocol.extensions.ibb.Close 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.AttachBackingFieldToValue">
            <summary>附加委托以将 StubClose.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.InitializeStub">
            <summary>初始化 type StubClose 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubClose.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.StubData">
            <summary>agsXMPP.protocol.extensions.ibb.Data 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubData.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.AttachBackingFieldToValue">
            <summary>附加委托以将 StubData.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.InitializeStub">
            <summary>初始化 type StubData 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubData.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubData.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubData.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubData.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubData.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen">
            <summary>agsXMPP.protocol.extensions.ibb.Open 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.#ctor(System.String,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOpen.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.InitializeStub">
            <summary>初始化 type StubOpen 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ibb.Fakes.StubOpen.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneAction 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneAction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.ExtensionGet">
            <summary>设置 PhoneAction.get_Extension() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.ExtensionSetString">
            <summary>设置 PhoneAction.set_Extension(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.JidGet">
            <summary>设置 PhoneAction.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.JidSetJid">
            <summary>设置 PhoneAction.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.TypeGet">
            <summary>设置 PhoneAction.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.AllInstances.TypeSetActionType">
            <summary>设置 PhoneAction.set_Type(ActionType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.Constructor">
            <summary>设置 PhoneAction.PhoneAction() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.ConstructorActionType">
            <summary>设置 PhoneAction.PhoneAction(ActionType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.ConstructorActionTypeJid">
            <summary>设置 PhoneAction.PhoneAction(ActionType type, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.ConstructorActionTypeString">
            <summary>设置 PhoneAction.PhoneAction(ActionType type, String extension) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.ExtensionGet">
            <summary>设置 PhoneAction.get_Extension() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.ExtensionSetString">
            <summary>设置 PhoneAction.set_Extension(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.JidGet">
            <summary>设置 PhoneAction.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.JidSetJid">
            <summary>设置 PhoneAction.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.TypeGet">
            <summary>设置 PhoneAction.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneAction.TypeSetActionType">
            <summary>设置 PhoneAction.set_Type(ActionType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneEvent 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallIdGet">
            <summary>设置 PhoneEvent.get_CallId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallIdSetString">
            <summary>设置 PhoneEvent.set_CallId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallerIdGet">
            <summary>设置 PhoneEvent.get_CallerId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallerIdNameGet">
            <summary>设置 PhoneEvent.get_CallerIdName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallerIdNameSetString">
            <summary>设置 PhoneEvent.set_CallerIdName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.CallerIdSetString">
            <summary>设置 PhoneEvent.set_CallerId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.DeviceGet">
            <summary>设置 PhoneEvent.get_Device() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.DeviceSetString">
            <summary>设置 PhoneEvent.set_Device(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.TypeGet">
            <summary>设置 PhoneEvent.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.AllInstances.TypeSetPhoneStatusType">
            <summary>设置 PhoneEvent.set_Type(PhoneStatusType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallIdGet">
            <summary>设置 PhoneEvent.get_CallId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallIdSetString">
            <summary>设置 PhoneEvent.set_CallId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallerIdGet">
            <summary>设置 PhoneEvent.get_CallerId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallerIdNameGet">
            <summary>设置 PhoneEvent.get_CallerIdName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallerIdNameSetString">
            <summary>设置 PhoneEvent.set_CallerIdName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.CallerIdSetString">
            <summary>设置 PhoneEvent.set_CallerId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.Constructor">
            <summary>设置 PhoneEvent.PhoneEvent() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.ConstructorPhoneStatusType">
            <summary>设置 PhoneEvent.PhoneEvent(PhoneStatusType status) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.ConstructorPhoneStatusTypeString">
            <summary>设置 PhoneEvent.PhoneEvent(PhoneStatusType status, String device) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.ConstructorPhoneStatusTypeStringString">
            <summary>设置 PhoneEvent.PhoneEvent(PhoneStatusType status, String device, String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.ConstructorPhoneStatusTypeStringStringString">
            <summary>设置 PhoneEvent.PhoneEvent(PhoneStatusType status, String device, String id, String callerId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.DeviceGet">
            <summary>设置 PhoneEvent.get_Device() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.DeviceSetString">
            <summary>设置 PhoneEvent.set_Device(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.TypeGet">
            <summary>设置 PhoneEvent.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneEvent.TypeSetPhoneStatusType">
            <summary>设置 PhoneEvent.set_Type(PhoneStatusType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatus 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.AllInstances.StatusGet">
            <summary>设置 PhoneStatus.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.AllInstances.StatusSetPhoneStatusType">
            <summary>设置 PhoneStatus.set_Status(PhoneStatusType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.Constructor">
            <summary>设置 PhoneStatus.PhoneStatus() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.StatusGet">
            <summary>设置 PhoneStatus.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.ShimPhoneStatus.StatusSetPhoneStatusType">
            <summary>设置 PhoneStatus.set_Status(PhoneStatusType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneAction 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.ActionType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.ActionType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.ActionType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPhoneAction.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.InitializeStub">
            <summary>初始化 type StubPhoneAction 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneAction.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneEvent 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatusType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatusType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatusType,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.#ctor(agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatusType,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPhoneEvent.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.InitializeStub">
            <summary>初始化 type StubPhoneEvent 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneEvent.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus">
            <summary>agsXMPP.protocol.extensions.jivesoftware.phone.PhoneStatus 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPhoneStatus.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.InitializeStub">
            <summary>初始化 type StubPhoneStatus 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.jivesoftware.phone.Fakes.StubPhoneStatus.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived">
            <summary>agsXMPP.protocol.extensions.msgreceipts.Received 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.#ctor(agsXMPP.protocol.extensions.msgreceipts.Received)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimReceived.Constructor">
            <summary>设置 Received.Received() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest">
            <summary>agsXMPP.protocol.extensions.msgreceipts.Request 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.#ctor(agsXMPP.protocol.extensions.msgreceipts.Request)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.ShimRequest.Constructor">
            <summary>设置 Request.Request() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived">
            <summary>agsXMPP.protocol.extensions.msgreceipts.Received 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.AttachBackingFieldToValue">
            <summary>附加委托以将 StubReceived.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.InitializeStub">
            <summary>初始化 type StubReceived 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubReceived.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest">
            <summary>agsXMPP.protocol.extensions.msgreceipts.Request 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRequest.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.InitializeStub">
            <summary>初始化 type StubRequest 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.msgreceipts.Fakes.StubRequest.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname">
            <summary>agsXMPP.protocol.extensions.nickname.Nickname 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.#ctor(agsXMPP.protocol.extensions.nickname.Nickname)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.Constructor">
            <summary>设置 Nickname.Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.ShimNickname.ConstructorString">
            <summary>设置 Nickname.Nickname(String nick) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname">
            <summary>agsXMPP.protocol.extensions.nickname.Nickname 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.AttachBackingFieldToValue">
            <summary>附加委托以将 StubNickname.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.InitializeStub">
            <summary>初始化 type StubNickname 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.nickname.Fakes.StubNickname.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.ShimPing">
            <summary>agsXMPP.protocol.extensions.ping.Ping 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.#ctor(agsXMPP.protocol.extensions.ping.Ping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPing.Constructor">
            <summary>设置 Ping.Ping() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq">
            <summary>agsXMPP.protocol.extensions.ping.PingIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.#ctor(agsXMPP.protocol.extensions.ping.PingIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.AllInstances.QueryGet">
            <summary>设置 PingIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.Constructor">
            <summary>设置 PingIq.PingIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.ConstructorJid">
            <summary>设置 PingIq.PingIq(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.ConstructorJidJid">
            <summary>设置 PingIq.PingIq(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.ShimPingIq.QueryGet">
            <summary>设置 PingIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.StubPing">
            <summary>agsXMPP.protocol.extensions.ping.Ping 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPing.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPing.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPing.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPing.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPing.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPing.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPing.InitializeStub">
            <summary>初始化 type StubPing 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPing.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPing.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPing.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPing.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPing.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPing.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPing.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq">
            <summary>agsXMPP.protocol.extensions.ping.PingIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.#ctor(agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubPingIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubPingIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPingIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubPingIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.InitializeStub">
            <summary>初始化 type StubPingIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.ping.Fakes.StubPingIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary">
            <summary>agsXMPP.protocol.extensions.primary.Primary 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.#ctor(agsXMPP.protocol.extensions.primary.Primary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.ShimPrimary.Constructor">
            <summary>设置 Primary.Primary() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary">
            <summary>agsXMPP.protocol.extensions.primary.Primary 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPrimary.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.InitializeStub">
            <summary>初始化 type StubPrimary 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.primary.Fakes.StubPrimary.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation">
            <summary>agsXMPP.protocol.extensions.pubsub.Affiliation 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.#ctor(agsXMPP.protocol.extensions.pubsub.Affiliation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AffiliationTypeGet">
            <summary>设置 Affiliation.get_AffiliationType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AffiliationTypeSetAffiliationType">
            <summary>设置 Affiliation.set_AffiliationType(AffiliationType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.AffiliationTypeGet">
            <summary>设置 Affiliation.get_AffiliationType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.AffiliationTypeSetAffiliationType">
            <summary>设置 Affiliation.set_AffiliationType(AffiliationType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.JidGet">
            <summary>设置 Affiliation.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.JidSetJid">
            <summary>设置 Affiliation.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.NodeGet">
            <summary>设置 Affiliation.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.AllInstances.NodeSetString">
            <summary>设置 Affiliation.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.Constructor">
            <summary>设置 Affiliation.Affiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.ConstructorJidAffiliationType">
            <summary>设置 Affiliation.Affiliation(Jid jid, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.ConstructorStringJidAffiliationType">
            <summary>设置 Affiliation.Affiliation(String node, Jid jid, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.JidGet">
            <summary>设置 Affiliation.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.JidSetJid">
            <summary>设置 Affiliation.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.NodeGet">
            <summary>设置 Affiliation.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliation.NodeSetString">
            <summary>设置 Affiliation.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations">
            <summary>agsXMPP.protocol.extensions.pubsub.Affiliations 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.#ctor(agsXMPP.protocol.extensions.pubsub.Affiliations)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AddAffiliation">
            <summary>设置 Affiliations.AddAffiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AddAffiliationAffiliation">
            <summary>设置 Affiliations.AddAffiliation(Affiliation aff) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AllInstances.AddAffiliation">
            <summary>设置 Affiliations.AddAffiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AllInstances.AddAffiliationAffiliation">
            <summary>设置 Affiliations.AddAffiliation(Affiliation aff) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.AllInstances.GetAffiliations">
            <summary>设置 Affiliations.GetAffiliations() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.Constructor">
            <summary>设置 Affiliations.Affiliations() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimAffiliations.GetAffiliations">
            <summary>设置 Affiliations.GetAffiliations() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure">
            <summary>agsXMPP.protocol.extensions.pubsub.Configure 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.#ctor(agsXMPP.protocol.extensions.pubsub.Configure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AccessGet">
            <summary>设置 Configure.get_Access() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AccessSetAccess">
            <summary>设置 Configure.set_Access(Access value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AllInstances.AccessGet">
            <summary>设置 Configure.get_Access() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AllInstances.AccessSetAccess">
            <summary>设置 Configure.set_Access(Access value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AllInstances.DataGet">
            <summary>设置 Configure.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.AllInstances.DataSetData">
            <summary>设置 Configure.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.Constructor">
            <summary>设置 Configure.Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.ConstructorString">
            <summary>设置 Configure.Configure(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.ConstructorStringType">
            <summary>设置 Configure.Configure(String node, Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.ConstructorType">
            <summary>设置 Configure.Configure(Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.DataGet">
            <summary>设置 Configure.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimConfigure.DataSetData">
            <summary>设置 Configure.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate">
            <summary>agsXMPP.protocol.extensions.pubsub.Create 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.#ctor(agsXMPP.protocol.extensions.pubsub.Create)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.Constructor">
            <summary>设置 Create.Create() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.ConstructorString">
            <summary>设置 Create.Create(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.ConstructorStringType">
            <summary>设置 Create.Create(String node, Type type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimCreate.ConstructorType">
            <summary>设置 Create.Create(Type type) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem">
            <summary>agsXMPP.protocol.extensions.pubsub.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.#ctor(agsXMPP.protocol.extensions.pubsub.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.AllInstances.IdGet">
            <summary>设置 Item.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.AllInstances.IdSetString">
            <summary>设置 Item.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.ConstructorString">
            <summary>设置 Item.Item(String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.IdGet">
            <summary>设置 Item.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItem.IdSetString">
            <summary>设置 Item.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems">
            <summary>agsXMPP.protocol.extensions.pubsub.Items 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.#ctor(agsXMPP.protocol.extensions.pubsub.Items)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.AllInstances.MaxItemsGet">
            <summary>设置 Items.get_MaxItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.AllInstances.MaxItemsSetInt32">
            <summary>设置 Items.set_MaxItems(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.AllInstances.SubIdGet">
            <summary>设置 Items.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.AllInstances.SubIdSetString">
            <summary>设置 Items.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.Constructor">
            <summary>设置 Items.Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.ConstructorString">
            <summary>设置 Items.Items(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.ConstructorStringString">
            <summary>设置 Items.Items(String node, String subId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.ConstructorStringStringInt32">
            <summary>设置 Items.Items(String node, String subId, Int32 maxItems) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.MaxItemsGet">
            <summary>设置 Items.get_MaxItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.MaxItemsSetInt32">
            <summary>设置 Items.set_MaxItems(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.SubIdGet">
            <summary>设置 Items.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimItems.SubIdSetString">
            <summary>设置 Items.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions">
            <summary>agsXMPP.protocol.extensions.pubsub.Options 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.#ctor(agsXMPP.protocol.extensions.pubsub.Options)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.DataGet">
            <summary>设置 Options.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.DataSetData">
            <summary>设置 Options.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.JidGet">
            <summary>设置 Options.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.JidSetJid">
            <summary>设置 Options.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.NodeGet">
            <summary>设置 Options.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.NodeSetString">
            <summary>设置 Options.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.SubIdGet">
            <summary>设置 Options.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.AllInstances.SubIdSetString">
            <summary>设置 Options.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.Constructor">
            <summary>设置 Options.Options() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.ConstructorJid">
            <summary>设置 Options.Options(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.ConstructorJidString">
            <summary>设置 Options.Options(Jid jid, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.ConstructorJidStringString">
            <summary>设置 Options.Options(Jid jid, String node, String subId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.DataGet">
            <summary>设置 Options.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.DataSetData">
            <summary>设置 Options.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.JidGet">
            <summary>设置 Options.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.JidSetJid">
            <summary>设置 Options.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.NodeGet">
            <summary>设置 Options.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.NodeSetString">
            <summary>设置 Options.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.SubIdGet">
            <summary>设置 Options.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimOptions.SubIdSetString">
            <summary>设置 Options.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSub 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.#ctor(agsXMPP.protocol.extensions.pubsub.PubSub)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AffiliationsGet">
            <summary>设置 PubSub.get_Affiliations() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AffiliationsSetAffiliations">
            <summary>设置 PubSub.set_Affiliations(Affiliations value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.AffiliationsGet">
            <summary>设置 PubSub.get_Affiliations() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.AffiliationsSetAffiliations">
            <summary>设置 PubSub.set_Affiliations(Affiliations value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.ConfigureGet">
            <summary>设置 PubSub.get_Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.ConfigureSetConfigure">
            <summary>设置 PubSub.set_Configure(Configure value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.CreateGet">
            <summary>设置 PubSub.get_Create() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.CreateSetCreate">
            <summary>设置 PubSub.set_Create(Create value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.ItemsGet">
            <summary>设置 PubSub.get_Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.ItemsSetItems">
            <summary>设置 PubSub.set_Items(Items value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.OptionsGet">
            <summary>设置 PubSub.get_Options() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.OptionsSetOptions">
            <summary>设置 PubSub.set_Options(Options value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.PublishGet">
            <summary>设置 PubSub.get_Publish() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.PublishSetPublish">
            <summary>设置 PubSub.set_Publish(Publish value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.RetractGet">
            <summary>设置 PubSub.get_Retract() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.RetractSetRetract">
            <summary>设置 PubSub.set_Retract(Retract value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.SubscribeGet">
            <summary>设置 PubSub.get_Subscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.SubscribeSetSubscribe">
            <summary>设置 PubSub.set_Subscribe(Subscribe value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.SubscriptionsGet">
            <summary>设置 PubSub.get_Subscriptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.SubscriptionsSetSubscriptions">
            <summary>设置 PubSub.set_Subscriptions(Subscriptions value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.UnsubscribeGet">
            <summary>设置 PubSub.get_Unsubscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.AllInstances.UnsubscribeSetUnsubscribe">
            <summary>设置 PubSub.set_Unsubscribe(Unsubscribe value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.ConfigureGet">
            <summary>设置 PubSub.get_Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.ConfigureSetConfigure">
            <summary>设置 PubSub.set_Configure(Configure value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.Constructor">
            <summary>设置 PubSub.PubSub() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.CreateGet">
            <summary>设置 PubSub.get_Create() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.CreateSetCreate">
            <summary>设置 PubSub.set_Create(Create value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.ItemsGet">
            <summary>设置 PubSub.get_Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.ItemsSetItems">
            <summary>设置 PubSub.set_Items(Items value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.OptionsGet">
            <summary>设置 PubSub.get_Options() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.OptionsSetOptions">
            <summary>设置 PubSub.set_Options(Options value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.PublishGet">
            <summary>设置 PubSub.get_Publish() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.PublishSetPublish">
            <summary>设置 PubSub.set_Publish(Publish value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.RetractGet">
            <summary>设置 PubSub.get_Retract() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.RetractSetRetract">
            <summary>设置 PubSub.set_Retract(Retract value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.SubscribeGet">
            <summary>设置 PubSub.get_Subscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.SubscribeSetSubscribe">
            <summary>设置 PubSub.set_Subscribe(Subscribe value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.SubscriptionsGet">
            <summary>设置 PubSub.get_Subscriptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.SubscriptionsSetSubscriptions">
            <summary>设置 PubSub.set_Subscriptions(Subscriptions value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.UnsubscribeGet">
            <summary>设置 PubSub.get_Unsubscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSub.UnsubscribeSetUnsubscribe">
            <summary>设置 PubSub.set_Unsubscribe(Unsubscribe value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubAction 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.#ctor(agsXMPP.protocol.extensions.pubsub.PubSubAction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.AllInstances.NodeGet">
            <summary>设置 PubSubAction.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.AllInstances.NodeSetString">
            <summary>设置 PubSubAction.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.AllInstances.TypeGet">
            <summary>设置 PubSubAction.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.AllInstances.TypeSetType">
            <summary>设置 PubSubAction.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.Constructor">
            <summary>设置 PubSubAction.PubSubAction() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.NodeGet">
            <summary>设置 PubSubAction.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.NodeSetString">
            <summary>设置 PubSubAction.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.TypeGet">
            <summary>设置 PubSubAction.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubAction.TypeSetType">
            <summary>设置 PubSubAction.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.#ctor(agsXMPP.protocol.extensions.pubsub.PubSubIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.AllInstances.PubSubGet">
            <summary>设置 PubSubIq.get_PubSub() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.Constructor">
            <summary>设置 PubSubIq.PubSubIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.ConstructorIqType">
            <summary>设置 PubSubIq.PubSubIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.ConstructorIqTypeJid">
            <summary>设置 PubSubIq.PubSubIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.ConstructorIqTypeJidJid">
            <summary>设置 PubSubIq.PubSubIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubIq.PubSubGet">
            <summary>设置 PubSubIq.get_PubSub() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.#ctor(agsXMPP.protocol.extensions.pubsub.PubSubManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidJidStringBoolean">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidStringBoolean">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateCollectionNodeJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateInstantNodeJid">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateInstantNodeJidIqCB">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateInstantNodeJidJid">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateInstantNodeJidJidIqCB">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateInstantNodeJidJidIqCBObject">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidJidString">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidJidStringBoolean">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidString">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.CreateNodeJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidJidString">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidJidStringIqCB">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidString">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidStringIqCB">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.DeleteNodeJidStringIqCBObject">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidJidStringJidAffiliationType">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidJidStringJidAffiliationTypeIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidJidStringJidAffiliationTypeIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidStringJidAffiliationType">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidStringJidAffiliationTypeIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationJidStringJidAffiliationTypeIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidJidStringAffiliateArray">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidJidStringAffiliateArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidJidStringAffiliateArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidStringAffiliateArray">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidStringAffiliateArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifyAffiliationsJidStringAffiliateArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidJidStringJidSubscriptionState">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidJidStringJidSubscriptionStateIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidJidStringJidSubscriptionStateIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidStringJidSubscriptionState">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidStringJidSubscriptionStateIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStateJidStringJidSubscriptionStateIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidJidStringSubscriberArray">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidJidStringSubscriberArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidJidStringSubscriberArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidStringSubscriberArray">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidStringSubscriberArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerModifySubscriptionStatesJidStringSubscriberArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidJidString">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidString">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestAffiliationsJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidJidString">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidString">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.OwnerRequestSubscribersJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidJidStringItem">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidJidStringItemIqCB">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidJidStringItemIqCBObject">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidStringItem">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidStringItemIqCB">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PublishItemJidStringItemIqCBObject">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidJidString">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidJidStringIqCB">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidString">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidStringIqCB">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.PurgeNodeJidStringIqCBObject">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJid">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJidIqCB">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJidIqCBObject">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJidJid">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJidJidIqCB">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestAffiliationsJidJidIqCBObject">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidJidString">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidJidStringIqCB">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidString">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidStringIqCB">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionOptionsJidJidStringIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJid">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJidIqCB">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJidIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJidJid">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJidJidIqCB">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RequestSubscriptionsJidJidIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidJidStringString">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidJidStringStringIqCB">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidStringString">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidStringStringIqCB">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.RetractItemJidStringStringIqCBObject">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidJidString">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidJidStringIqCB">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidString">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidStringIqCB">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.SubscribeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidStringString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidStringStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidStringString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidStringStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.AllInstances.UnsubscribeJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.ConstructorXmppClientConnection">
            <summary>设置 PubSubManager.PubSubManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidJidStringBoolean">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidStringBoolean">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateCollectionNodeJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateCollectionNode(Jid to, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateInstantNodeJid">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateInstantNodeJidIqCB">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateInstantNodeJidJid">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateInstantNodeJidJidIqCB">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateInstantNodeJidJidIqCBObject">
            <summary>设置 PubSubManager.CreateInstantNode(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidJidString">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidJidStringBoolean">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateNode(Jid to, Jid from, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidString">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidStringBooleanIqCB">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node, Boolean defaultConfig, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.CreateNodeJidStringBooleanIqCBObject">
            <summary>设置 PubSubManager.CreateNode(Jid to, String node, Boolean defaultConfig, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidJidString">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidJidStringIqCB">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.DeleteNode(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidString">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidStringIqCB">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.DeleteNodeJidStringIqCBObject">
            <summary>设置 PubSubManager.DeleteNode(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidJidStringJidAffiliationType">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidJidStringJidAffiliationTypeIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidJidStringJidAffiliationTypeIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, Jid from, String node, Jid affiliate, AffiliationType affiliation, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidStringJidAffiliationType">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidStringJidAffiliationTypeIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationJidStringJidAffiliationTypeIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliation(Jid to, String node, Jid affiliate, AffiliationType affiliation, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidJidStringAffiliateArray">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidJidStringAffiliateArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidJidStringAffiliateArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, Jid from, String node, Affiliate[] affiliates, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidStringAffiliateArray">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidStringAffiliateArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifyAffiliationsJidStringAffiliateArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifyAffiliations(Jid to, String node, Affiliate[] affiliates, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidJidStringJidSubscriptionState">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidJidStringJidSubscriptionStateIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidJidStringJidSubscriptionStateIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, Jid from, String node, Jid subscriber, SubscriptionState state, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidStringJidSubscriptionState">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidStringJidSubscriptionStateIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStateJidStringJidSubscriptionStateIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionState(Jid to, String node, Jid subscriber, SubscriptionState state, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidJidStringSubscriberArray">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidJidStringSubscriberArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidJidStringSubscriberArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, Jid from, String node, Subscriber[] subscribers, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidStringSubscriberArray">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidStringSubscriberArrayIqCB">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerModifySubscriptionStatesJidStringSubscriberArrayIqCBObject">
            <summary>设置 PubSubManager.OwnerModifySubscriptionStates(Jid to, String node, Subscriber[] subscribers, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidJidString">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidString">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestAffiliationsJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestAffiliations(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidJidString">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidString">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidStringIqCB">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.OwnerRequestSubscribersJidStringIqCBObject">
            <summary>设置 PubSubManager.OwnerRequestSubscribers(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidJidStringItem">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidJidStringItemIqCB">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidJidStringItemIqCBObject">
            <summary>设置 PubSubManager.PublishItem(Jid to, Jid from, String node, Item payload, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidStringItem">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidStringItemIqCB">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PublishItemJidStringItemIqCBObject">
            <summary>设置 PubSubManager.PublishItem(Jid to, String node, Item payload, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidJidString">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidJidStringIqCB">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.PurgeNode(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidString">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidStringIqCB">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.PurgeNodeJidStringIqCBObject">
            <summary>设置 PubSubManager.PurgeNode(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJid">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJidIqCB">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJidIqCBObject">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJidJid">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJidJidIqCB">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestAffiliationsJidJidIqCBObject">
            <summary>设置 PubSubManager.RequestAffiliations(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidJidString">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidJidStringIqCB">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid from, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidString">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidStringIqCB">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionOptionsJidJidStringIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptionOptions(Jid to, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJid">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJidIqCB">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJidIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJidJid">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJidJidIqCB">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RequestSubscriptionsJidJidIqCBObject">
            <summary>设置 PubSubManager.RequestSubscriptions(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidJidStringString">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidJidStringStringIqCB">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.RetractItem(Jid to, Jid from, String node, String id, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidStringString">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidStringStringIqCB">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.RetractItemJidStringStringIqCBObject">
            <summary>设置 PubSubManager.RetractItem(Jid to, String node, String id, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidJidString">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidJidStringIqCB">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid from, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidString">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidStringIqCB">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.SubscribeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Subscribe(Jid to, Jid subscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidStringString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidStringStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid from, Jid unsubscribe, String node, String subid, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidStringString">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidStringStringIqCB">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPubSubManager.UnsubscribeJidJidStringStringIqCBObject">
            <summary>设置 PubSubManager.Unsubscribe(Jid to, Jid unsubscribe, String node, String subid, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish">
            <summary>agsXMPP.protocol.extensions.pubsub.Publish 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.#ctor(agsXMPP.protocol.extensions.pubsub.Publish)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AddItem">
            <summary>设置 Publish.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AddItemItem">
            <summary>设置 Publish.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances.AddItem">
            <summary>设置 Publish.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances.AddItemItem">
            <summary>设置 Publish.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances.GetItems">
            <summary>设置 Publish.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances.NodeGet">
            <summary>设置 Publish.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.AllInstances.NodeSetString">
            <summary>设置 Publish.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.Constructor">
            <summary>设置 Publish.Publish() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.ConstructorString">
            <summary>设置 Publish.Publish(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.ConstructorStringItem">
            <summary>设置 Publish.Publish(String node, Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.GetItems">
            <summary>设置 Publish.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.NodeGet">
            <summary>设置 Publish.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimPublish.NodeSetString">
            <summary>设置 Publish.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract">
            <summary>agsXMPP.protocol.extensions.pubsub.Retract 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.#ctor(agsXMPP.protocol.extensions.pubsub.Retract)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.Constructor">
            <summary>设置 Retract.Retract() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.ConstructorString">
            <summary>设置 Retract.Retract(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimRetract.ConstructorStringString">
            <summary>设置 Retract.Retract(String node, String id) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscribe 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.#ctor(agsXMPP.protocol.extensions.pubsub.Subscribe)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.AllInstances.JidGet">
            <summary>设置 Subscribe.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.AllInstances.JidSetJid">
            <summary>设置 Subscribe.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.AllInstances.NodeGet">
            <summary>设置 Subscribe.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.AllInstances.NodeSetString">
            <summary>设置 Subscribe.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.Constructor">
            <summary>设置 Subscribe.Subscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.ConstructorStringJid">
            <summary>设置 Subscribe.Subscribe(String node, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.JidGet">
            <summary>设置 Subscribe.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.JidSetJid">
            <summary>设置 Subscribe.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.NodeGet">
            <summary>设置 Subscribe.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribe.NodeSetString">
            <summary>设置 Subscribe.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions">
            <summary>agsXMPP.protocol.extensions.pubsub.SubscribeOptions 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.#ctor(agsXMPP.protocol.extensions.pubsub.SubscribeOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.AllInstances.RequiredGet">
            <summary>设置 SubscribeOptions.get_Required() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.AllInstances.RequiredSetBoolean">
            <summary>设置 SubscribeOptions.set_Required(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.Constructor">
            <summary>设置 SubscribeOptions.SubscribeOptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.ConstructorBoolean">
            <summary>设置 SubscribeOptions.SubscribeOptions(Boolean required) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.RequiredGet">
            <summary>设置 SubscribeOptions.get_Required() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscribeOptions.RequiredSetBoolean">
            <summary>设置 SubscribeOptions.set_Required(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscription 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.#ctor(agsXMPP.protocol.extensions.pubsub.Subscription)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.JidGet">
            <summary>设置 Subscription.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.JidSetJid">
            <summary>设置 Subscription.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.NodeGet">
            <summary>设置 Subscription.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.NodeSetString">
            <summary>设置 Subscription.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubIdGet">
            <summary>设置 Subscription.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubIdSetString">
            <summary>设置 Subscription.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubscribeOptionsGet">
            <summary>设置 Subscription.get_SubscribeOptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubscribeOptionsSetSubscribeOptions">
            <summary>设置 Subscription.set_SubscribeOptions(SubscribeOptions value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubscriptionStateGet">
            <summary>设置 Subscription.get_SubscriptionState() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.AllInstances.SubscriptionStateSetSubscriptionState">
            <summary>设置 Subscription.set_SubscriptionState(SubscriptionState value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.Constructor">
            <summary>设置 Subscription.Subscription() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJid">
            <summary>设置 Subscription.Subscription(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJidString">
            <summary>设置 Subscription.Subscription(Jid jid, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJidStringString">
            <summary>设置 Subscription.Subscription(Jid jid, String node, String subId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJidStringStringSubscriptionState">
            <summary>设置 Subscription.Subscription(Jid jid, String node, String subId, SubscriptionState subType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJidStringSubscriptionState">
            <summary>设置 Subscription.Subscription(Jid jid, String node, SubscriptionState subType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.ConstructorJidSubscriptionState">
            <summary>设置 Subscription.Subscription(Jid jid, SubscriptionState subType) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.JidGet">
            <summary>设置 Subscription.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.JidSetJid">
            <summary>设置 Subscription.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.NodeGet">
            <summary>设置 Subscription.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.NodeSetString">
            <summary>设置 Subscription.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubIdGet">
            <summary>设置 Subscription.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubIdSetString">
            <summary>设置 Subscription.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubscribeOptionsGet">
            <summary>设置 Subscription.get_SubscribeOptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubscribeOptionsSetSubscribeOptions">
            <summary>设置 Subscription.set_SubscribeOptions(SubscribeOptions value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubscriptionStateGet">
            <summary>设置 Subscription.get_SubscriptionState() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscription.SubscriptionStateSetSubscriptionState">
            <summary>设置 Subscription.set_SubscriptionState(SubscriptionState value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscriptions 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.#ctor(agsXMPP.protocol.extensions.pubsub.Subscriptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AddSubscription">
            <summary>设置 Subscriptions.AddSubscription() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AddSubscriptionSubscription">
            <summary>设置 Subscriptions.AddSubscription(Subscription sub) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AllInstances.AddSubscription">
            <summary>设置 Subscriptions.AddSubscription() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AllInstances.AddSubscriptionSubscription">
            <summary>设置 Subscriptions.AddSubscription(Subscription sub) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.AllInstances.GetSubscriptions">
            <summary>设置 Subscriptions.GetSubscriptions() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.Constructor">
            <summary>设置 Subscriptions.Subscriptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimSubscriptions.GetSubscriptions">
            <summary>设置 Subscriptions.GetSubscriptions() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe">
            <summary>agsXMPP.protocol.extensions.pubsub.Unsubscribe 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.#ctor(agsXMPP.protocol.extensions.pubsub.Unsubscribe)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.AllInstances.SubIdGet">
            <summary>设置 Unsubscribe.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.AllInstances.SubIdSetString">
            <summary>设置 Unsubscribe.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.Constructor">
            <summary>设置 Unsubscribe.Unsubscribe() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.ConstructorStringJid">
            <summary>设置 Unsubscribe.Unsubscribe(String node, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.ConstructorStringJidString">
            <summary>设置 Unsubscribe.Unsubscribe(String node, Jid jid, String subid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.SubIdGet">
            <summary>设置 Unsubscribe.get_SubId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.ShimUnsubscribe.SubIdSetString">
            <summary>设置 Unsubscribe.set_SubId(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation">
            <summary>agsXMPP.protocol.extensions.pubsub.Affiliation 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.#ctor(agsXMPP.Jid,agsXMPP.protocol.extensions.pubsub.AffiliationType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.#ctor(System.String,agsXMPP.Jid,agsXMPP.protocol.extensions.pubsub.AffiliationType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAffiliation.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.InitializeStub">
            <summary>初始化 type StubAffiliation 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliation.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations">
            <summary>agsXMPP.protocol.extensions.pubsub.Affiliations 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAffiliations.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.InitializeStub">
            <summary>初始化 type StubAffiliations 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubAffiliations.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure">
            <summary>agsXMPP.protocol.extensions.pubsub.Configure 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.#ctor(agsXMPP.protocol.extensions.pubsub.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.#ctor(System.String,agsXMPP.protocol.extensions.pubsub.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.AttachBackingFieldToValue">
            <summary>附加委托以将 StubConfigure.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.InitializeStub">
            <summary>初始化 type StubConfigure 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubConfigure.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate">
            <summary>agsXMPP.protocol.extensions.pubsub.Create 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.#ctor(agsXMPP.protocol.extensions.pubsub.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.#ctor(System.String,agsXMPP.protocol.extensions.pubsub.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCreate.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.InitializeStub">
            <summary>初始化 type StubCreate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubCreate.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem">
            <summary>agsXMPP.protocol.extensions.pubsub.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems">
            <summary>agsXMPP.protocol.extensions.pubsub.Items 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.#ctor(System.String,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItems.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.InitializeStub">
            <summary>初始化 type StubItems 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubItems.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions">
            <summary>agsXMPP.protocol.extensions.pubsub.Options 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.#ctor(agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOptions.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.InitializeStub">
            <summary>初始化 type StubOptions 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubOptions.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSub 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPubSub.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.InitializeStub">
            <summary>初始化 type StubPubSub 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSub.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubAction 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPubSubAction.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.InitializeStub">
            <summary>初始化 type StubPubSubAction 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubAction.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubPubSubIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubPubSubIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPubSubIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubPubSubIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.InitializeStub">
            <summary>初始化 type StubPubSubIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager">
            <summary>agsXMPP.protocol.extensions.pubsub.PubSubManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager.InitializeStub">
            <summary>初始化 type StubPubSubManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPubSubManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish">
            <summary>agsXMPP.protocol.extensions.pubsub.Publish 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.#ctor(System.String,agsXMPP.protocol.extensions.pubsub.Item)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPublish.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.InitializeStub">
            <summary>初始化 type StubPublish 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubPublish.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract">
            <summary>agsXMPP.protocol.extensions.pubsub.Retract 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRetract.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.InitializeStub">
            <summary>初始化 type StubRetract 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubRetract.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscribe 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.#ctor(System.String,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscribe.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.InitializeStub">
            <summary>初始化 type StubSubscribe 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribe.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions">
            <summary>agsXMPP.protocol.extensions.pubsub.SubscribeOptions 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscribeOptions.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.InitializeStub">
            <summary>初始化 type StubSubscribeOptions 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscribeOptions.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscription 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid,agsXMPP.protocol.extensions.pubsub.SubscriptionState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid,System.String,agsXMPP.protocol.extensions.pubsub.SubscriptionState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.#ctor(agsXMPP.Jid,System.String,System.String,agsXMPP.protocol.extensions.pubsub.SubscriptionState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscription.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.InitializeStub">
            <summary>初始化 type StubSubscription 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscription.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions">
            <summary>agsXMPP.protocol.extensions.pubsub.Subscriptions 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscriptions.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.InitializeStub">
            <summary>初始化 type StubSubscriptions 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubSubscriptions.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe">
            <summary>agsXMPP.protocol.extensions.pubsub.Unsubscribe 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.#ctor(System.String,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.#ctor(System.String,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.AttachBackingFieldToValue">
            <summary>附加委托以将 StubUnsubscribe.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.InitializeStub">
            <summary>初始化 type StubUnsubscribe 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.Fakes.StubUnsubscribe.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Delete 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.#ctor(agsXMPP.protocol.extensions.pubsub.event.Delete)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.AllInstances.NodeGet">
            <summary>设置 Delete.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.AllInstances.NodeSetString">
            <summary>设置 Delete.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.Constructor">
            <summary>设置 Delete.Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.ConstructorString">
            <summary>设置 Delete.Delete(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.NodeGet">
            <summary>设置 Delete.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimDelete.NodeSetString">
            <summary>设置 Delete.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Event 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.#ctor(agsXMPP.protocol.extensions.pubsub.event.Event)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.DeleteGet">
            <summary>设置 Event.get_Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.DeleteSetDelete">
            <summary>设置 Event.set_Delete(Delete value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.ItemsGet">
            <summary>设置 Event.get_Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.ItemsSetItems">
            <summary>设置 Event.set_Items(Items value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.PurgeGet">
            <summary>设置 Event.get_Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.AllInstances.PurgeSetPurge">
            <summary>设置 Event.set_Purge(Purge value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.Constructor">
            <summary>设置 Event.Event() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.DeleteGet">
            <summary>设置 Event.get_Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.DeleteSetDelete">
            <summary>设置 Event.set_Delete(Delete value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.ItemsGet">
            <summary>设置 Event.get_Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.ItemsSetItems">
            <summary>设置 Event.set_Items(Items value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.PurgeGet">
            <summary>设置 Event.get_Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimEvent.PurgeSetPurge">
            <summary>设置 Event.set_Purge(Purge value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.#ctor(agsXMPP.protocol.extensions.pubsub.event.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.AllInstances.RetractGet">
            <summary>设置 Item.get_Retract() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.AllInstances.RetractSetBoolean">
            <summary>设置 Item.set_Retract(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.ConstructorString">
            <summary>设置 Item.Item(String id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.RetractGet">
            <summary>设置 Item.get_Retract() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItem.RetractSetBoolean">
            <summary>设置 Item.set_Retract(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Items 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.#ctor(agsXMPP.protocol.extensions.pubsub.event.Items)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AddItem">
            <summary>设置 Items.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AddItemItem">
            <summary>设置 Items.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances.AddItem">
            <summary>设置 Items.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances.AddItemItem">
            <summary>设置 Items.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances.GetItems">
            <summary>设置 Items.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances.NodeGet">
            <summary>设置 Items.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.AllInstances.NodeSetString">
            <summary>设置 Items.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.Constructor">
            <summary>设置 Items.Items() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.ConstructorString">
            <summary>设置 Items.Items(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.GetItems">
            <summary>设置 Items.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.NodeGet">
            <summary>设置 Items.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimItems.NodeSetString">
            <summary>设置 Items.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Purge 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.#ctor(agsXMPP.protocol.extensions.pubsub.event.Purge)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.AllInstances.NodeGet">
            <summary>设置 Purge.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.AllInstances.NodeSetString">
            <summary>设置 Purge.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.Constructor">
            <summary>设置 Purge.Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.ConstructorString">
            <summary>设置 Purge.Purge(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.NodeGet">
            <summary>设置 Purge.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.ShimPurge.NodeSetString">
            <summary>设置 Purge.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Delete 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDelete.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.InitializeStub">
            <summary>初始化 type StubDelete 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubDelete.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Event 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.AttachBackingFieldToValue">
            <summary>附加委托以将 StubEvent.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.InitializeStub">
            <summary>初始化 type StubEvent 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubEvent.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Items 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItems.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.InitializeStub">
            <summary>初始化 type StubItems 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubItems.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge">
            <summary>agsXMPP.protocol.extensions.pubsub.event.Purge 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPurge.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.InitializeStub">
            <summary>初始化 type StubPurge 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.event.Fakes.StubPurge.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Affiliate 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Affiliate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AffiliationGet">
            <summary>设置 Affiliate.get_Affiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AffiliationSetAffiliationType">
            <summary>设置 Affiliate.set_Affiliation(AffiliationType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AllInstances.AffiliationGet">
            <summary>设置 Affiliate.get_Affiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AllInstances.AffiliationSetAffiliationType">
            <summary>设置 Affiliate.set_Affiliation(AffiliationType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AllInstances.JidGet">
            <summary>设置 Affiliate.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.AllInstances.JidSetJid">
            <summary>设置 Affiliate.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.Constructor">
            <summary>设置 Affiliate.Affiliate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.ConstructorJidAffiliationType">
            <summary>设置 Affiliate.Affiliate(Jid jid, AffiliationType affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.JidGet">
            <summary>设置 Affiliate.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliate.JidSetJid">
            <summary>设置 Affiliate.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Affiliates 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Affiliates)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AddAffiliate">
            <summary>设置 Affiliates.AddAffiliate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AddAffiliateAffiliate">
            <summary>设置 Affiliates.AddAffiliate(Affiliate affiliate) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AddAffiliatesAffiliateArray">
            <summary>设置 Affiliates.AddAffiliates(Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.AddAffiliate">
            <summary>设置 Affiliates.AddAffiliate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.AddAffiliateAffiliate">
            <summary>设置 Affiliates.AddAffiliate(Affiliate affiliate) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.AddAffiliatesAffiliateArray">
            <summary>设置 Affiliates.AddAffiliates(Affiliate[] affiliates) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.GetAffiliates">
            <summary>设置 Affiliates.GetAffiliates() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.NodeGet">
            <summary>设置 Affiliates.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.AllInstances.NodeSetString">
            <summary>设置 Affiliates.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.Constructor">
            <summary>设置 Affiliates.Affiliates() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.ConstructorString">
            <summary>设置 Affiliates.Affiliates(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.GetAffiliates">
            <summary>设置 Affiliates.GetAffiliates() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.NodeGet">
            <summary>设置 Affiliates.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimAffiliates.NodeSetString">
            <summary>设置 Affiliates.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Configure 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Configure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.AllInstances.DataGet">
            <summary>设置 Configure.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.AllInstances.DataSetData">
            <summary>设置 Configure.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.AllInstances.NodeGet">
            <summary>设置 Configure.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.AllInstances.NodeSetString">
            <summary>设置 Configure.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.Constructor">
            <summary>设置 Configure.Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.ConstructorString">
            <summary>设置 Configure.Configure(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.DataGet">
            <summary>设置 Configure.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.DataSetData">
            <summary>设置 Configure.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.NodeGet">
            <summary>设置 Configure.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimConfigure.NodeSetString">
            <summary>设置 Configure.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Delete 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Delete)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.Constructor">
            <summary>设置 Delete.Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimDelete.ConstructorString">
            <summary>设置 Delete.Delete(String node) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Pending 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Pending)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.AllInstances.DataGet">
            <summary>设置 Pending.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.AllInstances.DataSetData">
            <summary>设置 Pending.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.AllInstances.NodeGet">
            <summary>设置 Pending.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.AllInstances.NodeSetString">
            <summary>设置 Pending.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.Constructor">
            <summary>设置 Pending.Pending() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.ConstructorString">
            <summary>设置 Pending.Pending(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.DataGet">
            <summary>设置 Pending.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.DataSetData">
            <summary>设置 Pending.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.NodeGet">
            <summary>设置 Pending.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPending.NodeSetString">
            <summary>设置 Pending.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.PubSub 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.#ctor(agsXMPP.protocol.extensions.pubsub.owner.PubSub)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AffiliatesGet">
            <summary>设置 PubSub.get_Affiliates() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AffiliatesSetAffiliates">
            <summary>设置 PubSub.set_Affiliates(Affiliates value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.AffiliatesGet">
            <summary>设置 PubSub.get_Affiliates() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.AffiliatesSetAffiliates">
            <summary>设置 PubSub.set_Affiliates(Affiliates value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.ConfigureGet">
            <summary>设置 PubSub.get_Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.ConfigureSetConfigure">
            <summary>设置 PubSub.set_Configure(Configure value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.DeleteGet">
            <summary>设置 PubSub.get_Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.DeleteSetDelete">
            <summary>设置 PubSub.set_Delete(Delete value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.PurgeGet">
            <summary>设置 PubSub.get_Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.PurgeSetPurge">
            <summary>设置 PubSub.set_Purge(Purge value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.SubscribersGet">
            <summary>设置 PubSub.get_Subscribers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.AllInstances.SubscribersSetSubscribers">
            <summary>设置 PubSub.set_Subscribers(Subscribers value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.ConfigureGet">
            <summary>设置 PubSub.get_Configure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.ConfigureSetConfigure">
            <summary>设置 PubSub.set_Configure(Configure value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.Constructor">
            <summary>设置 PubSub.PubSub() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.DeleteGet">
            <summary>设置 PubSub.get_Delete() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.DeleteSetDelete">
            <summary>设置 PubSub.set_Delete(Delete value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.PurgeGet">
            <summary>设置 PubSub.get_Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.PurgeSetPurge">
            <summary>设置 PubSub.set_Purge(Purge value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.SubscribersGet">
            <summary>设置 PubSub.get_Subscribers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSub.SubscribersSetSubscribers">
            <summary>设置 PubSub.set_Subscribers(Subscribers value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.PubSubIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.#ctor(agsXMPP.protocol.extensions.pubsub.owner.PubSubIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.AllInstances.PubSubGet">
            <summary>设置 PubSubIq.get_PubSub() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.Constructor">
            <summary>设置 PubSubIq.PubSubIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.ConstructorIqType">
            <summary>设置 PubSubIq.PubSubIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.ConstructorIqTypeJid">
            <summary>设置 PubSubIq.PubSubIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.ConstructorIqTypeJidJid">
            <summary>设置 PubSubIq.PubSubIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPubSubIq.PubSubGet">
            <summary>设置 PubSubIq.get_PubSub() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Purge 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Purge)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.Constructor">
            <summary>设置 Purge.Purge() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimPurge.ConstructorString">
            <summary>设置 Purge.Purge(String node) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Subscriber 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Subscriber)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.AllInstances.JidGet">
            <summary>设置 Subscriber.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.AllInstances.JidSetJid">
            <summary>设置 Subscriber.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.AllInstances.SubscriptionStateGet">
            <summary>设置 Subscriber.get_SubscriptionState() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.AllInstances.SubscriptionStateSetSubscriptionState">
            <summary>设置 Subscriber.set_SubscriptionState(SubscriptionState value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.Constructor">
            <summary>设置 Subscriber.Subscriber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.ConstructorJidSubscriptionState">
            <summary>设置 Subscriber.Subscriber(Jid jid, SubscriptionState sub) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.JidGet">
            <summary>设置 Subscriber.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.JidSetJid">
            <summary>设置 Subscriber.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.SubscriptionStateGet">
            <summary>设置 Subscriber.get_SubscriptionState() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscriber.SubscriptionStateSetSubscriptionState">
            <summary>设置 Subscriber.set_SubscriptionState(SubscriptionState value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Subscribers 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.#ctor(agsXMPP.protocol.extensions.pubsub.owner.Subscribers)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AddSubscriber">
            <summary>设置 Subscribers.AddSubscriber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AddSubscriberSubscriber">
            <summary>设置 Subscribers.AddSubscriber(Subscriber subscriber) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AddSubscribersSubscriberArray">
            <summary>设置 Subscribers.AddSubscribers(Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.AddSubscriber">
            <summary>设置 Subscribers.AddSubscriber() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.AddSubscriberSubscriber">
            <summary>设置 Subscribers.AddSubscriber(Subscriber subscriber) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.AddSubscribersSubscriberArray">
            <summary>设置 Subscribers.AddSubscribers(Subscriber[] subscribers) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.GetSubscribers">
            <summary>设置 Subscribers.GetSubscribers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.NodeGet">
            <summary>设置 Subscribers.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.AllInstances.NodeSetString">
            <summary>设置 Subscribers.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.Constructor">
            <summary>设置 Subscribers.Subscribers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.ConstructorString">
            <summary>设置 Subscribers.Subscribers(String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.GetSubscribers">
            <summary>设置 Subscribers.GetSubscribers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.NodeGet">
            <summary>设置 Subscribers.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.ShimSubscribers.NodeSetString">
            <summary>设置 Subscribers.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Affiliate 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.#ctor(agsXMPP.Jid,agsXMPP.protocol.extensions.pubsub.AffiliationType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAffiliate.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.InitializeStub">
            <summary>初始化 type StubAffiliate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliate.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Affiliates 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAffiliates.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.InitializeStub">
            <summary>初始化 type StubAffiliates 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubAffiliates.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Configure 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.AttachBackingFieldToValue">
            <summary>附加委托以将 StubConfigure.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.InitializeStub">
            <summary>初始化 type StubConfigure 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubConfigure.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Delete 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDelete.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.InitializeStub">
            <summary>初始化 type StubDelete 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubDelete.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Pending 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPending.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.InitializeStub">
            <summary>初始化 type StubPending 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPending.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.PubSub 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPubSub.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.InitializeStub">
            <summary>初始化 type StubPubSub 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSub.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.PubSubIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubPubSubIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubPubSubIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPubSubIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubPubSubIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.InitializeStub">
            <summary>初始化 type StubPubSubIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPubSubIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Purge 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPurge.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.InitializeStub">
            <summary>初始化 type StubPurge 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubPurge.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Subscriber 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.#ctor(agsXMPP.Jid,agsXMPP.protocol.extensions.pubsub.SubscriptionState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscriber.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.InitializeStub">
            <summary>初始化 type StubSubscriber 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscriber.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers">
            <summary>agsXMPP.protocol.extensions.pubsub.owner.Subscribers 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSubscribers.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.InitializeStub">
            <summary>初始化 type StubSubscribers 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.pubsub.owner.Fakes.StubSubscribers.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader">
            <summary>agsXMPP.protocol.extensions.shim.Header 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.#ctor(agsXMPP.protocol.extensions.shim.Header)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.AllInstances.NameGet">
            <summary>设置 Header.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.AllInstances.NameSetString">
            <summary>设置 Header.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.Constructor">
            <summary>设置 Header.Header() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.ConstructorStringString">
            <summary>设置 Header.Header(String name, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.NameGet">
            <summary>设置 Header.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeader.NameSetString">
            <summary>设置 Header.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders">
            <summary>agsXMPP.protocol.extensions.shim.Headers 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.#ctor(agsXMPP.protocol.extensions.shim.Headers)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AddHeader">
            <summary>设置 Headers.AddHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AddHeaderHeader">
            <summary>设置 Headers.AddHeader(Header header) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AddHeaderStringString">
            <summary>设置 Headers.AddHeader(String name, String val) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.AddHeader">
            <summary>设置 Headers.AddHeader() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.AddHeaderHeader">
            <summary>设置 Headers.AddHeader(Header header) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.AddHeaderStringString">
            <summary>设置 Headers.AddHeader(String name, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.GetHeaderString">
            <summary>设置 Headers.GetHeader(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.GetHeaders">
            <summary>设置 Headers.GetHeaders() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.AllInstances.SetHeaderStringString">
            <summary>设置 Headers.SetHeader(String name, String val) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.Constructor">
            <summary>设置 Headers.Headers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.GetHeaderString">
            <summary>设置 Headers.GetHeader(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.GetHeaders">
            <summary>设置 Headers.GetHeaders() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.ShimHeaders.SetHeaderStringString">
            <summary>设置 Headers.SetHeader(String name, String val) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.StubHeader">
            <summary>agsXMPP.protocol.extensions.shim.Header 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.AttachBackingFieldToValue">
            <summary>附加委托以将 StubHeader.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.InitializeStub">
            <summary>初始化 type StubHeader 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeader.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders">
            <summary>agsXMPP.protocol.extensions.shim.Headers 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.AttachBackingFieldToValue">
            <summary>附加委托以将 StubHeaders.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.InitializeStub">
            <summary>初始化 type StubHeaders 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.shim.Fakes.StubHeaders.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.ShimSI">
            <summary>agsXMPP.protocol.extensions.si.SI 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSI.#ctor(agsXMPP.protocol.extensions.si.SI)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.FeatureNegGet">
            <summary>设置 SI.get_FeatureNeg() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.FeatureNegSetFeatureNeg">
            <summary>设置 SI.set_FeatureNeg(FeatureNeg value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.FileGet">
            <summary>设置 SI.get_File() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.FileSetFile">
            <summary>设置 SI.set_File(File value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.IdGet">
            <summary>设置 SI.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.IdSetString">
            <summary>设置 SI.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.MimeTypeGet">
            <summary>设置 SI.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.MimeTypeSetString">
            <summary>设置 SI.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.ProfileGet">
            <summary>设置 SI.get_Profile() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.AllInstances.ProfileSetString">
            <summary>设置 SI.set_Profile(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.Constructor">
            <summary>设置 SI.SI() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.FeatureNegGet">
            <summary>设置 SI.get_FeatureNeg() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.FeatureNegSetFeatureNeg">
            <summary>设置 SI.set_FeatureNeg(FeatureNeg value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.FileGet">
            <summary>设置 SI.get_File() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.FileSetFile">
            <summary>设置 SI.set_File(File value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.IdGet">
            <summary>设置 SI.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.IdSetString">
            <summary>设置 SI.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.MimeTypeGet">
            <summary>设置 SI.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.MimeTypeSetString">
            <summary>设置 SI.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.ProfileGet">
            <summary>设置 SI.get_Profile() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSI.ProfileSetString">
            <summary>设置 SI.set_Profile(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq">
            <summary>agsXMPP.protocol.extensions.si.SIIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.#ctor(agsXMPP.protocol.extensions.si.SIIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.AllInstances.SIGet">
            <summary>设置 SIIq.get_SI() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.Constructor">
            <summary>设置 SIIq.SIIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.ConstructorIqType">
            <summary>设置 SIIq.SIIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.ConstructorIqTypeJid">
            <summary>设置 SIIq.SIIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.ConstructorIqTypeJidJid">
            <summary>设置 SIIq.SIIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.ShimSIIq.SIGet">
            <summary>设置 SIIq.get_SI() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.StubSI">
            <summary>agsXMPP.protocol.extensions.si.SI 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSI.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSI.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSI.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSI.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSI.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSI.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSI.InitializeStub">
            <summary>初始化 type StubSI 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSI.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSI.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSI.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSI.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSI.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSI.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSI.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.extensions.si.Fakes.StubSIIq">
            <summary>agsXMPP.protocol.extensions.si.SIIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubSIIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubSIIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSIIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubSIIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.InitializeStub">
            <summary>初始化 type StubSIIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.extensions.si.Fakes.StubSIIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgent">
            <summary>agsXMPP.protocol.iq.agent.Agent 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.#ctor(agsXMPP.protocol.iq.agent.Agent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.CanRegisterGet">
            <summary>设置 Agent.get_CanRegister() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.CanRegisterSetBoolean">
            <summary>设置 Agent.set_CanRegister(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.CanSearchGet">
            <summary>设置 Agent.get_CanSearch() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.CanSearchSetBoolean">
            <summary>设置 Agent.set_CanSearch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.DescriptionGet">
            <summary>设置 Agent.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.DescriptionSetString">
            <summary>设置 Agent.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.IsGroupchatGet">
            <summary>设置 Agent.get_IsGroupchat() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.IsGroupchatSetBoolean">
            <summary>设置 Agent.set_IsGroupchat(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.IsTransportGet">
            <summary>设置 Agent.get_IsTransport() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.IsTransportSetBoolean">
            <summary>设置 Agent.set_IsTransport(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.JidGet">
            <summary>设置 Agent.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.JidSetJid">
            <summary>设置 Agent.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.NameGet">
            <summary>设置 Agent.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.NameSetString">
            <summary>设置 Agent.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.ServiceGet">
            <summary>设置 Agent.get_Service() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.AllInstances.ServiceSetString">
            <summary>设置 Agent.set_Service(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.CanRegisterGet">
            <summary>设置 Agent.get_CanRegister() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.CanRegisterSetBoolean">
            <summary>设置 Agent.set_CanRegister(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.CanSearchGet">
            <summary>设置 Agent.get_CanSearch() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.CanSearchSetBoolean">
            <summary>设置 Agent.set_CanSearch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.Constructor">
            <summary>设置 Agent.Agent() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.DescriptionGet">
            <summary>设置 Agent.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.DescriptionSetString">
            <summary>设置 Agent.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.IsGroupchatGet">
            <summary>设置 Agent.get_IsGroupchat() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.IsGroupchatSetBoolean">
            <summary>设置 Agent.set_IsGroupchat(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.IsTransportGet">
            <summary>设置 Agent.get_IsTransport() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.IsTransportSetBoolean">
            <summary>设置 Agent.set_IsTransport(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.JidGet">
            <summary>设置 Agent.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.JidSetJid">
            <summary>设置 Agent.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.NameGet">
            <summary>设置 Agent.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.NameSetString">
            <summary>设置 Agent.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.ServiceGet">
            <summary>设置 Agent.get_Service() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgent.ServiceSetString">
            <summary>设置 Agent.set_Service(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgents">
            <summary>agsXMPP.protocol.iq.agent.Agents 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.#ctor(agsXMPP.protocol.iq.agent.Agents)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.AllInstances.GetAgents">
            <summary>设置 Agents.GetAgents() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.Constructor">
            <summary>设置 Agents.Agents() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgents.GetAgents">
            <summary>设置 Agents.GetAgents() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq">
            <summary>agsXMPP.protocol.iq.agent.AgentsIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.#ctor(agsXMPP.protocol.iq.agent.AgentsIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.AllInstances.QueryGet">
            <summary>设置 AgentsIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.Constructor">
            <summary>设置 AgentsIq.AgentsIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.ConstructorIqType">
            <summary>设置 AgentsIq.AgentsIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.ConstructorIqTypeJid">
            <summary>设置 AgentsIq.AgentsIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.ConstructorIqTypeJidJid">
            <summary>设置 AgentsIq.AgentsIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.ShimAgentsIq.QueryGet">
            <summary>设置 AgentsIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.StubAgent">
            <summary>agsXMPP.protocol.iq.agent.Agent 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgent.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgent.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgent.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAgent.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgent.InitializeStub">
            <summary>初始化 type StubAgent 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgent.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgent.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgent.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgent.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgent.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.StubAgents">
            <summary>agsXMPP.protocol.iq.agent.Agents 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgents.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgents.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgents.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgents.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAgents.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgents.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgents.InitializeStub">
            <summary>初始化 type StubAgents 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgents.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgents.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgents.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgents.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgents.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgents.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgents.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq">
            <summary>agsXMPP.protocol.iq.agent.AgentsIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubAgentsIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubAgentsIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAgentsIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubAgentsIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.InitializeStub">
            <summary>初始化 type StubAgentsIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.agent.Fakes.StubAgentsIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.ShimAuth">
            <summary>agsXMPP.protocol.iq.auth.Auth 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.#ctor(agsXMPP.protocol.iq.auth.Auth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.DigestGet">
            <summary>设置 Auth.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.DigestSetString">
            <summary>设置 Auth.set_Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.PasswordGet">
            <summary>设置 Auth.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.PasswordSetString">
            <summary>设置 Auth.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.ResourceGet">
            <summary>设置 Auth.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.ResourceSetString">
            <summary>设置 Auth.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.SetAuthDigestStringStringString">
            <summary>设置 Auth.SetAuthDigest(String username, String password, String StreamID) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.SetAuthPlainStringString">
            <summary>设置 Auth.SetAuthPlain(String username, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.SetAuthStringStringString">
            <summary>设置 Auth.SetAuth(String username, String password, String streamId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.UsernameGet">
            <summary>设置 Auth.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.AllInstances.UsernameSetString">
            <summary>设置 Auth.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.Constructor">
            <summary>设置 Auth.Auth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.DigestGet">
            <summary>设置 Auth.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.DigestSetString">
            <summary>设置 Auth.set_Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.PasswordGet">
            <summary>设置 Auth.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.PasswordSetString">
            <summary>设置 Auth.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.ResourceGet">
            <summary>设置 Auth.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.ResourceSetString">
            <summary>设置 Auth.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.SetAuthDigestStringStringString">
            <summary>设置 Auth.SetAuthDigest(String username, String password, String StreamID) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.SetAuthPlainStringString">
            <summary>设置 Auth.SetAuthPlain(String username, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.SetAuthStringStringString">
            <summary>设置 Auth.SetAuth(String username, String password, String streamId) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.UsernameGet">
            <summary>设置 Auth.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuth.UsernameSetString">
            <summary>设置 Auth.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq">
            <summary>agsXMPP.protocol.iq.auth.AuthIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.#ctor(agsXMPP.protocol.iq.auth.AuthIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.AllInstances.QueryGet">
            <summary>设置 AuthIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.Constructor">
            <summary>设置 AuthIq.AuthIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.ConstructorIqType">
            <summary>设置 AuthIq.AuthIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.ConstructorIqTypeJid">
            <summary>设置 AuthIq.AuthIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.ConstructorIqTypeJidJid">
            <summary>设置 AuthIq.AuthIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.ShimAuthIq.QueryGet">
            <summary>设置 AuthIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.StubAuth">
            <summary>agsXMPP.protocol.iq.auth.Auth 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuth.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuth.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuth.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuth.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAuth.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuth.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuth.InitializeStub">
            <summary>初始化 type StubAuth 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuth.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuth.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuth.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuth.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuth.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuth.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuth.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq">
            <summary>agsXMPP.protocol.iq.auth.AuthIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubAuthIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubAuthIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAuthIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubAuthIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.InitializeStub">
            <summary>初始化 type StubAuthIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.auth.Fakes.StubAuthIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar">
            <summary>agsXMPP.protocol.iq.avatar.Avatar 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.#ctor(agsXMPP.protocol.iq.avatar.Avatar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatar.Constructor">
            <summary>设置 Avatar.Avatar() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq">
            <summary>agsXMPP.protocol.iq.avatar.AvatarIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.#ctor(agsXMPP.protocol.iq.avatar.AvatarIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.AllInstances.QueryGet">
            <summary>设置 AvatarIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.Constructor">
            <summary>设置 AvatarIq.AvatarIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.ConstructorIqType">
            <summary>设置 AvatarIq.AvatarIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.ConstructorIqTypeJid">
            <summary>设置 AvatarIq.AvatarIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.ConstructorIqTypeJidJid">
            <summary>设置 AvatarIq.AvatarIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.ShimAvatarIq.QueryGet">
            <summary>设置 AvatarIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar">
            <summary>agsXMPP.protocol.iq.avatar.Avatar 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatar.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.InitializeStub">
            <summary>初始化 type StubAvatar 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatar.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq">
            <summary>agsXMPP.protocol.iq.avatar.AvatarIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubAvatarIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubAvatarIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatarIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubAvatarIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.InitializeStub">
            <summary>初始化 type StubAvatarIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.avatar.Fakes.StubAvatarIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.ShimBind">
            <summary>agsXMPP.protocol.iq.bind.Bind 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBind.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBind.#ctor(agsXMPP.protocol.iq.bind.Bind)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.ShimBind.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.AllInstances.JidGet">
            <summary>设置 Bind.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.AllInstances.JidSetJid">
            <summary>设置 Bind.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.AllInstances.ResourceGet">
            <summary>设置 Bind.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.AllInstances.ResourceSetString">
            <summary>设置 Bind.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBind.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBind.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.Constructor">
            <summary>设置 Bind.Bind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.ConstructorJid">
            <summary>设置 Bind.Bind(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.ConstructorString">
            <summary>设置 Bind.Bind(String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.JidGet">
            <summary>设置 Bind.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.JidSetJid">
            <summary>设置 Bind.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.ResourceGet">
            <summary>设置 Bind.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBind.ResourceSetString">
            <summary>设置 Bind.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq">
            <summary>agsXMPP.protocol.iq.bind.BindIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.#ctor(agsXMPP.protocol.iq.bind.BindIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.AllInstances.QueryGet">
            <summary>设置 BindIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.Constructor">
            <summary>设置 BindIq.BindIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.ConstructorIqType">
            <summary>设置 BindIq.BindIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.ConstructorIqTypeJid">
            <summary>设置 BindIq.BindIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.ConstructorIqTypeJidString">
            <summary>设置 BindIq.BindIq(IqType type, Jid to, String resource) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.ShimBindIq.QueryGet">
            <summary>设置 BindIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.StubBind">
            <summary>agsXMPP.protocol.iq.bind.Bind 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBind.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBind.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBind.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.InitializeStub">
            <summary>初始化 type StubBind 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBind.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBind.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBind.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBind.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBind.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBind.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBind.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.bind.Fakes.StubBindIq">
            <summary>agsXMPP.protocol.iq.bind.BindIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubBindIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubBindIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBindIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubBindIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.InitializeStub">
            <summary>初始化 type StubBindIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.bind.Fakes.StubBindIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse">
            <summary>agsXMPP.protocol.iq.browse.Browse 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.#ctor(agsXMPP.protocol.iq.browse.Browse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.CategoryGet">
            <summary>设置 Browse.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.CategorySetString">
            <summary>设置 Browse.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.GetItems">
            <summary>设置 Browse.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.GetNamespaces">
            <summary>设置 Browse.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.NameGet">
            <summary>设置 Browse.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.NameSetString">
            <summary>设置 Browse.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.TypeGet">
            <summary>设置 Browse.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.AllInstances.TypeSetString">
            <summary>设置 Browse.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.CategoryGet">
            <summary>设置 Browse.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.CategorySetString">
            <summary>设置 Browse.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.Constructor">
            <summary>设置 Browse.Browse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.GetItems">
            <summary>设置 Browse.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.GetNamespaces">
            <summary>设置 Browse.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.NameGet">
            <summary>设置 Browse.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.NameSetString">
            <summary>设置 Browse.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.TypeGet">
            <summary>设置 Browse.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowse.TypeSetString">
            <summary>设置 Browse.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq">
            <summary>agsXMPP.protocol.iq.browse.BrowseIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.#ctor(agsXMPP.protocol.iq.browse.BrowseIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.AllInstances.QueryGet">
            <summary>设置 BrowseIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.Constructor">
            <summary>设置 BrowseIq.BrowseIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.ConstructorIqType">
            <summary>设置 BrowseIq.BrowseIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.ConstructorIqTypeJid">
            <summary>设置 BrowseIq.BrowseIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.ConstructorIqTypeJidJid">
            <summary>设置 BrowseIq.BrowseIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseIq.QueryGet">
            <summary>设置 BrowseIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem">
            <summary>agsXMPP.protocol.iq.browse.BrowseItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.#ctor(agsXMPP.protocol.iq.browse.BrowseItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.CategoryGet">
            <summary>设置 BrowseItem.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.CategorySetString">
            <summary>设置 BrowseItem.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.GetNamespaces">
            <summary>设置 BrowseItem.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.TypeGet">
            <summary>设置 BrowseItem.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.TypeSetString">
            <summary>设置 BrowseItem.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.VersionGet">
            <summary>设置 BrowseItem.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.AllInstances.VersionSetString">
            <summary>设置 BrowseItem.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.CategoryGet">
            <summary>设置 BrowseItem.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.CategorySetString">
            <summary>设置 BrowseItem.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.Constructor">
            <summary>设置 BrowseItem.BrowseItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.GetNamespaces">
            <summary>设置 BrowseItem.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.TypeGet">
            <summary>设置 BrowseItem.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.TypeSetString">
            <summary>设置 BrowseItem.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.VersionGet">
            <summary>设置 BrowseItem.get_Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimBrowseItem.VersionSetString">
            <summary>设置 BrowseItem.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimService">
            <summary>agsXMPP.protocol.iq.browse.Service 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimService.#ctor(agsXMPP.protocol.iq.browse.Service)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.GetItems">
            <summary>设置 Service.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.GetNamespaces">
            <summary>设置 Service.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.GetServices">
            <summary>设置 Service.GetServices() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.JidGet">
            <summary>设置 Service.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.JidSetJid">
            <summary>设置 Service.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.NameGet">
            <summary>设置 Service.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.NameSetString">
            <summary>设置 Service.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.TypeGet">
            <summary>设置 Service.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.AllInstances.TypeSetString">
            <summary>设置 Service.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.ShimService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.Constructor">
            <summary>设置 Service.Service() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.GetItems">
            <summary>设置 Service.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.GetNamespaces">
            <summary>设置 Service.GetNamespaces() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.GetServices">
            <summary>设置 Service.GetServices() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.JidGet">
            <summary>设置 Service.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.JidSetJid">
            <summary>设置 Service.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.NameGet">
            <summary>设置 Service.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.NameSetString">
            <summary>设置 Service.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.TypeGet">
            <summary>设置 Service.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.ShimService.TypeSetString">
            <summary>设置 Service.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.StubBrowse">
            <summary>agsXMPP.protocol.iq.browse.Browse 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBrowse.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.InitializeStub">
            <summary>初始化 type StubBrowse 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowse.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq">
            <summary>agsXMPP.protocol.iq.browse.BrowseIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubBrowseIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubBrowseIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBrowseIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubBrowseIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.InitializeStub">
            <summary>初始化 type StubBrowseIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem">
            <summary>agsXMPP.protocol.iq.browse.BrowseItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubBrowseItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.InitializeStub">
            <summary>初始化 type StubBrowseItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubBrowseItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.browse.Fakes.StubService">
            <summary>agsXMPP.protocol.iq.browse.Service 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubService.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubService.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubService.AttachBackingFieldToValue">
            <summary>附加委托以将 StubService.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubService.InitializeStub">
            <summary>初始化 type StubService 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.browse.Fakes.StubService.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubService.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.browse.Fakes.StubService.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubService.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.browse.Fakes.StubService.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature">
            <summary>agsXMPP.protocol.iq.disco.DiscoFeature 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.#ctor(agsXMPP.protocol.iq.disco.DiscoFeature)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.AllInstances.VarGet">
            <summary>设置 DiscoFeature.get_Var() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.AllInstances.VarSetString">
            <summary>设置 DiscoFeature.set_Var(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.Constructor">
            <summary>设置 DiscoFeature.DiscoFeature() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.ConstructorString">
            <summary>设置 DiscoFeature.DiscoFeature(String var) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.VarGet">
            <summary>设置 DiscoFeature.get_Var() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoFeature.VarSetString">
            <summary>设置 DiscoFeature.set_Var(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity">
            <summary>agsXMPP.protocol.iq.disco.DiscoIdentity 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.#ctor(agsXMPP.protocol.iq.disco.DiscoIdentity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.CategoryGet">
            <summary>设置 DiscoIdentity.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.CategorySetString">
            <summary>设置 DiscoIdentity.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.NameGet">
            <summary>设置 DiscoIdentity.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.NameSetString">
            <summary>设置 DiscoIdentity.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.TypeGet">
            <summary>设置 DiscoIdentity.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.AllInstances.TypeSetString">
            <summary>设置 DiscoIdentity.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.CategoryGet">
            <summary>设置 DiscoIdentity.get_Category() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.CategorySetString">
            <summary>设置 DiscoIdentity.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.Constructor">
            <summary>设置 DiscoIdentity.DiscoIdentity() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.ConstructorStringString">
            <summary>设置 DiscoIdentity.DiscoIdentity(String type, String category) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.ConstructorStringStringString">
            <summary>设置 DiscoIdentity.DiscoIdentity(String type, String name, String category) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.NameGet">
            <summary>设置 DiscoIdentity.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.NameSetString">
            <summary>设置 DiscoIdentity.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.TypeGet">
            <summary>设置 DiscoIdentity.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoIdentity.TypeSetString">
            <summary>设置 DiscoIdentity.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo">
            <summary>agsXMPP.protocol.iq.disco.DiscoInfo 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.#ctor(agsXMPP.protocol.iq.disco.DiscoInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AddFeature">
            <summary>设置 DiscoInfo.AddFeature() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AddFeatureDiscoFeature">
            <summary>设置 DiscoInfo.AddFeature(DiscoFeature f) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AddIdentity">
            <summary>设置 DiscoInfo.AddIdentity() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AddIdentityDiscoIdentity">
            <summary>设置 DiscoInfo.AddIdentity(DiscoIdentity id) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.AddFeature">
            <summary>设置 DiscoInfo.AddFeature() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.AddFeatureDiscoFeature">
            <summary>设置 DiscoInfo.AddFeature(DiscoFeature f) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.AddIdentity">
            <summary>设置 DiscoInfo.AddIdentity() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.AddIdentityDiscoIdentity">
            <summary>设置 DiscoInfo.AddIdentity(DiscoIdentity id) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.GetFeatures">
            <summary>设置 DiscoInfo.GetFeatures() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.GetIdentities">
            <summary>设置 DiscoInfo.GetIdentities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.HasFeatureString">
            <summary>设置 DiscoInfo.HasFeature(String var) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.NodeGet">
            <summary>设置 DiscoInfo.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.AllInstances.NodeSetString">
            <summary>设置 DiscoInfo.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.Constructor">
            <summary>设置 DiscoInfo.DiscoInfo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.GetFeatures">
            <summary>设置 DiscoInfo.GetFeatures() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.GetIdentities">
            <summary>设置 DiscoInfo.GetIdentities() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.HasFeatureString">
            <summary>设置 DiscoInfo.HasFeature(String var) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.NodeGet">
            <summary>设置 DiscoInfo.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfo.NodeSetString">
            <summary>设置 DiscoInfo.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq">
            <summary>agsXMPP.protocol.iq.disco.DiscoInfoIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.#ctor(agsXMPP.protocol.iq.disco.DiscoInfoIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.AllInstances.QueryGet">
            <summary>设置 DiscoInfoIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.Constructor">
            <summary>设置 DiscoInfoIq.DiscoInfoIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.ConstructorIqType">
            <summary>设置 DiscoInfoIq.DiscoInfoIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoInfoIq.QueryGet">
            <summary>设置 DiscoInfoIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem">
            <summary>agsXMPP.protocol.iq.disco.DiscoItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.#ctor(agsXMPP.protocol.iq.disco.DiscoItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.ActionGet">
            <summary>设置 DiscoItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.ActionSetDiscoAction">
            <summary>设置 DiscoItem.set_Action(DiscoAction value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.ActionGet">
            <summary>设置 DiscoItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.ActionSetDiscoAction">
            <summary>设置 DiscoItem.set_Action(DiscoAction value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.JidGet">
            <summary>设置 DiscoItem.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.JidSetJid">
            <summary>设置 DiscoItem.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.NameGet">
            <summary>设置 DiscoItem.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.NameSetString">
            <summary>设置 DiscoItem.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.NodeGet">
            <summary>设置 DiscoItem.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.AllInstances.NodeSetString">
            <summary>设置 DiscoItem.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.Constructor">
            <summary>设置 DiscoItem.DiscoItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.JidGet">
            <summary>设置 DiscoItem.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.JidSetJid">
            <summary>设置 DiscoItem.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.NameGet">
            <summary>设置 DiscoItem.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.NameSetString">
            <summary>设置 DiscoItem.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.NodeGet">
            <summary>设置 DiscoItem.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItem.NodeSetString">
            <summary>设置 DiscoItem.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems">
            <summary>agsXMPP.protocol.iq.disco.DiscoItems 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.#ctor(agsXMPP.protocol.iq.disco.DiscoItems)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AddDiscoItem">
            <summary>设置 DiscoItems.AddDiscoItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AddDiscoItemDiscoItem">
            <summary>设置 DiscoItems.AddDiscoItem(DiscoItem item) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances.AddDiscoItem">
            <summary>设置 DiscoItems.AddDiscoItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances.AddDiscoItemDiscoItem">
            <summary>设置 DiscoItems.AddDiscoItem(DiscoItem item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances.GetDiscoItems">
            <summary>设置 DiscoItems.GetDiscoItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances.NodeGet">
            <summary>设置 DiscoItems.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.AllInstances.NodeSetString">
            <summary>设置 DiscoItems.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.Constructor">
            <summary>设置 DiscoItems.DiscoItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.GetDiscoItems">
            <summary>设置 DiscoItems.GetDiscoItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.NodeGet">
            <summary>设置 DiscoItems.get_Node() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItems.NodeSetString">
            <summary>设置 DiscoItems.set_Node(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq">
            <summary>agsXMPP.protocol.iq.disco.DiscoItemsIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.#ctor(agsXMPP.protocol.iq.disco.DiscoItemsIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.AllInstances.QueryGet">
            <summary>设置 DiscoItemsIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.Constructor">
            <summary>设置 DiscoItemsIq.DiscoItemsIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.ConstructorIqType">
            <summary>设置 DiscoItemsIq.DiscoItemsIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoItemsIq.QueryGet">
            <summary>设置 DiscoItemsIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager">
            <summary>agsXMPP.protocol.iq.disco.DiscoManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.#ctor(agsXMPP.protocol.iq.disco.DiscoManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.AutoAnswerDiscoInfoRequestsGet">
            <summary>设置 DiscoManager.get_AutoAnswerDiscoInfoRequests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.AutoAnswerDiscoInfoRequestsSetBoolean">
            <summary>设置 DiscoManager.set_AutoAnswerDiscoInfoRequests(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJid">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJid">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJidIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJidString">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidString">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverInformationJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJid">
            <summary>设置 DiscoManager.DiscoverItems(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJid">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJidIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJidString">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidString">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.DiscoverItemsJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.OnIqObjectIQ">
            <summary>设置 DiscoManager.OnIq(Object sender, IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AllInstances.ProcessDiscoInfoIQ">
            <summary>设置 DiscoManager.ProcessDiscoInfo(IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AutoAnswerDiscoInfoRequestsGet">
            <summary>设置 DiscoManager.get_AutoAnswerDiscoInfoRequests() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.AutoAnswerDiscoInfoRequestsSetBoolean">
            <summary>设置 DiscoManager.set_AutoAnswerDiscoInfoRequests(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.ConstructorXmppClientConnection">
            <summary>设置 DiscoManager.DiscoManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJid">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJid">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJidIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJidString">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidString">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverInformationJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverInformation(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJid">
            <summary>设置 DiscoManager.DiscoverItems(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJid">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJidIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJidIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJidString">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, Jid from, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidString">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidStringIqCB">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.DiscoverItemsJidStringIqCBObject">
            <summary>设置 DiscoManager.DiscoverItems(Jid to, String node, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.OnIqObjectIQ">
            <summary>设置 DiscoManager.OnIq(Object sender, IQ iq) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.ShimDiscoManager.ProcessDiscoInfoIQ">
            <summary>设置 DiscoManager.ProcessDiscoInfo(IQ iq) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature">
            <summary>agsXMPP.protocol.iq.disco.DiscoFeature 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoFeature.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.InitializeStub">
            <summary>初始化 type StubDiscoFeature 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoFeature.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity">
            <summary>agsXMPP.protocol.iq.disco.DiscoIdentity 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoIdentity.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.InitializeStub">
            <summary>初始化 type StubDiscoIdentity 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoIdentity.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo">
            <summary>agsXMPP.protocol.iq.disco.DiscoInfo 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoInfo.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.InitializeStub">
            <summary>初始化 type StubDiscoInfo 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfo.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq">
            <summary>agsXMPP.protocol.iq.disco.DiscoInfoIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubDiscoInfoIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubDiscoInfoIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoInfoIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubDiscoInfoIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.InitializeStub">
            <summary>初始化 type StubDiscoInfoIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoInfoIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem">
            <summary>agsXMPP.protocol.iq.disco.DiscoItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.InitializeStub">
            <summary>初始化 type StubDiscoItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems">
            <summary>agsXMPP.protocol.iq.disco.DiscoItems 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AttachBackingFieldToBind">
            <summary>附加委托以将 StubDiscoItems.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AttachBackingFieldToSession">
            <summary>附加委托以将 StubDiscoItems.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoItems.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubDiscoItems.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.InitializeStub">
            <summary>初始化 type StubDiscoItems 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItems.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq">
            <summary>agsXMPP.protocol.iq.disco.DiscoItemsIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubDiscoItemsIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubDiscoItemsIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDiscoItemsIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubDiscoItemsIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.InitializeStub">
            <summary>初始化 type StubDiscoItemsIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.disco.Fakes.StubDiscoItemsIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager">
            <summary>agsXMPP.protocol.iq.disco.DiscoManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager.InitializeStub">
            <summary>初始化 type StubDiscoManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.disco.Fakes.StubDiscoManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.ShimLast">
            <summary>agsXMPP.protocol.iq.last.Last 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLast.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLast.#ctor(agsXMPP.protocol.iq.last.Last)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.ShimLast.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.AllInstances.SecondsGet">
            <summary>设置 Last.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.AllInstances.SecondsSetInt32">
            <summary>设置 Last.set_Seconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLast.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLast.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.Constructor">
            <summary>设置 Last.Last() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.SecondsGet">
            <summary>设置 Last.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLast.SecondsSetInt32">
            <summary>设置 Last.set_Seconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.ShimLastIq">
            <summary>agsXMPP.protocol.iq.last.LastIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.#ctor(agsXMPP.protocol.iq.last.LastIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.AllInstances.QueryGet">
            <summary>设置 LastIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.Constructor">
            <summary>设置 LastIq.LastIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.ConstructorIqType">
            <summary>设置 LastIq.LastIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.ConstructorIqTypeJid">
            <summary>设置 LastIq.LastIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.ConstructorIqTypeJidJid">
            <summary>设置 LastIq.LastIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.ShimLastIq.QueryGet">
            <summary>设置 LastIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.StubLast">
            <summary>agsXMPP.protocol.iq.last.Last 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLast.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLast.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLast.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLast.AttachBackingFieldToValue">
            <summary>附加委托以将 StubLast.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLast.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLast.InitializeStub">
            <summary>初始化 type StubLast 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLast.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLast.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLast.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLast.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLast.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLast.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLast.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.last.Fakes.StubLastIq">
            <summary>agsXMPP.protocol.iq.last.LastIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubLastIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubLastIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubLastIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubLastIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.InitializeStub">
            <summary>初始化 type StubLastIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.last.Fakes.StubLastIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.last.Fakes.StubLastIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.last.Fakes.StubLastIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.ShimOob">
            <summary>agsXMPP.protocol.iq.oob.Oob 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOob.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOob.#ctor(agsXMPP.protocol.iq.oob.Oob)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.ShimOob.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.AllInstances.DescriptionGet">
            <summary>设置 Oob.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.AllInstances.DescriptionSetString">
            <summary>设置 Oob.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.AllInstances.UrlGet">
            <summary>设置 Oob.get_Url() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.AllInstances.UrlSetString">
            <summary>设置 Oob.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOob.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOob.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.Constructor">
            <summary>设置 Oob.Oob() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.DescriptionGet">
            <summary>设置 Oob.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.DescriptionSetString">
            <summary>设置 Oob.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.UrlGet">
            <summary>设置 Oob.get_Url() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOob.UrlSetString">
            <summary>设置 Oob.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq">
            <summary>agsXMPP.protocol.iq.oob.OobIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.#ctor(agsXMPP.protocol.iq.oob.OobIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.AllInstances.QueryGet">
            <summary>设置 OobIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.Constructor">
            <summary>设置 OobIq.OobIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.ConstructorIqType">
            <summary>设置 OobIq.OobIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.ConstructorIqTypeJid">
            <summary>设置 OobIq.OobIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.ConstructorIqTypeJidJid">
            <summary>设置 OobIq.OobIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.ShimOobIq.QueryGet">
            <summary>设置 OobIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.StubOob">
            <summary>agsXMPP.protocol.iq.oob.Oob 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOob.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOob.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOob.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOob.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOob.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOob.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOob.InitializeStub">
            <summary>初始化 type StubOob 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOob.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOob.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOob.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOob.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOob.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOob.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOob.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.oob.Fakes.StubOobIq">
            <summary>agsXMPP.protocol.iq.oob.OobIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubOobIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubOobIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOobIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubOobIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.InitializeStub">
            <summary>初始化 type StubOobIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.oob.Fakes.StubOobIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimActive">
            <summary>agsXMPP.protocol.iq.privacy.Active 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.#ctor(agsXMPP.protocol.iq.privacy.Active)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.Constructor">
            <summary>设置 Active.Active() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimActive.ConstructorString">
            <summary>设置 Active.Active(String name) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault">
            <summary>agsXMPP.protocol.iq.privacy.Default 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.#ctor(agsXMPP.protocol.iq.privacy.Default)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.Constructor">
            <summary>设置 Default.Default() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimDefault.ConstructorString">
            <summary>设置 Default.Default(String name) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimItem">
            <summary>agsXMPP.protocol.iq.privacy.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.#ctor(agsXMPP.protocol.iq.privacy.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ActionGet">
            <summary>设置 Item.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ActionSetAction">
            <summary>设置 Item.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.ActionGet">
            <summary>设置 Item.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.ActionSetAction">
            <summary>设置 Item.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockIncomingPresenceGet">
            <summary>设置 Item.get_BlockIncomingPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockIncomingPresenceSetBoolean">
            <summary>设置 Item.set_BlockIncomingPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockIqGet">
            <summary>设置 Item.get_BlockIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockIqSetBoolean">
            <summary>设置 Item.set_BlockIq(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockMessageGet">
            <summary>设置 Item.get_BlockMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockMessageSetBoolean">
            <summary>设置 Item.set_BlockMessage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockOutgoingPresenceGet">
            <summary>设置 Item.get_BlockOutgoingPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.BlockOutgoingPresenceSetBoolean">
            <summary>设置 Item.set_BlockOutgoingPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.OrderGet">
            <summary>设置 Item.get_Order() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.OrderSetInt32">
            <summary>设置 Item.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.StanzaGet">
            <summary>设置 Item.get_Stanza() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.StanzaSetStanza">
            <summary>设置 Item.set_Stanza(Stanza value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.TypeGet">
            <summary>设置 Item.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.TypeSetType">
            <summary>设置 Item.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.ValGet">
            <summary>设置 Item.get_Val() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.AllInstances.ValSetString">
            <summary>设置 Item.set_Val(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockIncomingPresenceGet">
            <summary>设置 Item.get_BlockIncomingPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockIncomingPresenceSetBoolean">
            <summary>设置 Item.set_BlockIncomingPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockIqGet">
            <summary>设置 Item.get_BlockIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockIqSetBoolean">
            <summary>设置 Item.set_BlockIq(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockMessageGet">
            <summary>设置 Item.get_BlockMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockMessageSetBoolean">
            <summary>设置 Item.set_BlockMessage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockOutgoingPresenceGet">
            <summary>设置 Item.get_BlockOutgoingPresence() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.BlockOutgoingPresenceSetBoolean">
            <summary>设置 Item.set_BlockOutgoingPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ConstructorActionInt32">
            <summary>设置 Item.Item(Action action, Int32 order) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ConstructorActionInt32Stanza">
            <summary>设置 Item.Item(Action action, Int32 order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ConstructorActionInt32TypeString">
            <summary>设置 Item.Item(Action action, Int32 order, Type type, String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ConstructorActionInt32TypeStringStanza">
            <summary>设置 Item.Item(Action action, Int32 order, Type type, String value, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.OrderGet">
            <summary>设置 Item.get_Order() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.OrderSetInt32">
            <summary>设置 Item.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.StanzaGet">
            <summary>设置 Item.get_Stanza() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.StanzaSetStanza">
            <summary>设置 Item.set_Stanza(Stanza value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.TypeGet">
            <summary>设置 Item.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.TypeSetType">
            <summary>设置 Item.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ValGet">
            <summary>设置 Item.get_Val() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimItem.ValSetString">
            <summary>设置 Item.set_Val(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimList">
            <summary>agsXMPP.protocol.iq.privacy.List 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimList.#ctor(agsXMPP.protocol.iq.privacy.List)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AddItemItem">
            <summary>设置 List.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AddItemsItemArray">
            <summary>设置 List.AddItems(Item[] items) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.AddItemItem">
            <summary>设置 List.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.AddItemsItemArray">
            <summary>设置 List.AddItems(Item[] items) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.GetItems">
            <summary>设置 List.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.NameGet">
            <summary>设置 List.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.NameSetString">
            <summary>设置 List.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.AllInstances.RemoveAllItems">
            <summary>设置 List.RemoveAllItems() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.Constructor">
            <summary>设置 List.List() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.ConstructorString">
            <summary>设置 List.List(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.GetItems">
            <summary>设置 List.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.NameGet">
            <summary>设置 List.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.NameSetString">
            <summary>设置 List.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimList.RemoveAllItems">
            <summary>设置 List.RemoveAllItems() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy">
            <summary>agsXMPP.protocol.iq.privacy.Privacy 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.#ctor(agsXMPP.protocol.iq.privacy.Privacy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.ActiveGet">
            <summary>设置 Privacy.get_Active() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.ActiveSetActive">
            <summary>设置 Privacy.set_Active(Active value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AddListList">
            <summary>设置 Privacy.AddList(List list) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.ActiveGet">
            <summary>设置 Privacy.get_Active() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.ActiveSetActive">
            <summary>设置 Privacy.set_Active(Active value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.AddListList">
            <summary>设置 Privacy.AddList(List list) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.DefaultGet">
            <summary>设置 Privacy.get_Default() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.DefaultSetDefault">
            <summary>设置 Privacy.set_Default(Default value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.AllInstances.GetList">
            <summary>设置 Privacy.GetList() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.Constructor">
            <summary>设置 Privacy.Privacy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.DefaultGet">
            <summary>设置 Privacy.get_Default() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.DefaultSetDefault">
            <summary>设置 Privacy.set_Default(Default value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacy.GetList">
            <summary>设置 Privacy.GetList() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq">
            <summary>agsXMPP.protocol.iq.privacy.PrivacyIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.#ctor(agsXMPP.protocol.iq.privacy.PrivacyIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.AllInstances.QueryGet">
            <summary>设置 PrivacyIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.Constructor">
            <summary>设置 PrivacyIq.PrivacyIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.ConstructorIqType">
            <summary>设置 PrivacyIq.PrivacyIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.ConstructorIqTypeJid">
            <summary>设置 PrivacyIq.PrivacyIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.ConstructorIqTypeJidJid">
            <summary>设置 PrivacyIq.PrivacyIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyIq.QueryGet">
            <summary>设置 PrivacyIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager">
            <summary>agsXMPP.protocol.iq.privacy.PrivacyManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.#ctor(agsXMPP.protocol.iq.privacy.PrivacyManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AddListStringItemArray">
            <summary>设置 PrivacyManager.AddList(String name, Item[] rules) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AddListStringItemArrayIqCBObject">
            <summary>设置 PrivacyManager.AddList(String name, Item[] rules, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.AddListStringItemArray">
            <summary>设置 PrivacyManager.AddList(String name, Item[] rules) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.AddListStringItemArrayIqCBObject">
            <summary>设置 PrivacyManager.AddList(String name, Item[] rules, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.ChangeActiveListString">
            <summary>设置 PrivacyManager.ChangeActiveList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.ChangeActiveListStringIqCBObject">
            <summary>设置 PrivacyManager.ChangeActiveList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.ChangeDefaultListString">
            <summary>设置 PrivacyManager.ChangeDefaultList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.ChangeDefaultListStringIqCBObject">
            <summary>设置 PrivacyManager.ChangeDefaultList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.DeclineActiveList">
            <summary>设置 PrivacyManager.DeclineActiveList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.DeclineActiveListIqCBObject">
            <summary>设置 PrivacyManager.DeclineActiveList(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.DeclineDefaultList">
            <summary>设置 PrivacyManager.DeclineDefaultList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.DeclineDefaultListIqCBObject">
            <summary>设置 PrivacyManager.DeclineDefaultList(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.GetListString">
            <summary>设置 PrivacyManager.GetList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.GetListStringIqCBObject">
            <summary>设置 PrivacyManager.GetList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.GetLists">
            <summary>设置 PrivacyManager.GetLists() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.GetListsIqCBObject">
            <summary>设置 PrivacyManager.GetLists(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.RemoveListString">
            <summary>设置 PrivacyManager.RemoveList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.RemoveListStringIqCBObject">
            <summary>设置 PrivacyManager.RemoveList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.SendStanzaPrivacyIqIqCBObject">
            <summary>设置 PrivacyManager.SendStanza(PrivacyIq pIq, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.UpdateListStringItemArray">
            <summary>设置 PrivacyManager.UpdateList(String name, Item[] rules) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.AllInstances.UpdateListStringItemArrayIqCBObject">
            <summary>设置 PrivacyManager.UpdateList(String name, Item[] rules, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.ChangeActiveListString">
            <summary>设置 PrivacyManager.ChangeActiveList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.ChangeActiveListStringIqCBObject">
            <summary>设置 PrivacyManager.ChangeActiveList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.ChangeDefaultListString">
            <summary>设置 PrivacyManager.ChangeDefaultList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.ChangeDefaultListStringIqCBObject">
            <summary>设置 PrivacyManager.ChangeDefaultList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.ConstructorXmppClientConnection">
            <summary>设置 PrivacyManager.PrivacyManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.DeclineActiveList">
            <summary>设置 PrivacyManager.DeclineActiveList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.DeclineActiveListIqCBObject">
            <summary>设置 PrivacyManager.DeclineActiveList(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.DeclineDefaultList">
            <summary>设置 PrivacyManager.DeclineDefaultList() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.DeclineDefaultListIqCBObject">
            <summary>设置 PrivacyManager.DeclineDefaultList(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.GetListString">
            <summary>设置 PrivacyManager.GetList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.GetListStringIqCBObject">
            <summary>设置 PrivacyManager.GetList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.GetLists">
            <summary>设置 PrivacyManager.GetLists() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.GetListsIqCBObject">
            <summary>设置 PrivacyManager.GetLists(IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.RemoveListString">
            <summary>设置 PrivacyManager.RemoveList(String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.RemoveListStringIqCBObject">
            <summary>设置 PrivacyManager.RemoveList(String name, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.SendStanzaPrivacyIqIqCBObject">
            <summary>设置 PrivacyManager.SendStanza(PrivacyIq pIq, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.UpdateListStringItemArray">
            <summary>设置 PrivacyManager.UpdateList(String name, Item[] rules) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimPrivacyManager.UpdateListStringItemArrayIqCBObject">
            <summary>设置 PrivacyManager.UpdateList(String name, Item[] rules, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager">
            <summary>agsXMPP.protocol.iq.privacy.RuleManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.#ctor(agsXMPP.protocol.iq.privacy.RuleManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.AllowByGroupStringInt32Stanza">
            <summary>设置 RuleManager.AllowByGroup(String group, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.AllowByJidJidInt32Stanza">
            <summary>设置 RuleManager.AllowByJid(Jid JidToBlock, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.AllowBySubscriptionSubscriptionTypeInt32Stanza">
            <summary>设置 RuleManager.AllowBySubscription(SubscriptionType subType, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.BlockByGroupStringInt32Stanza">
            <summary>设置 RuleManager.BlockByGroup(String group, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.BlockByJidJidInt32Stanza">
            <summary>设置 RuleManager.BlockByJid(Jid JidToBlock, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.BlockBySubscriptionSubscriptionTypeInt32Stanza">
            <summary>设置 RuleManager.BlockBySubscription(SubscriptionType subType, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllInstances.BlockGlobalInt32Stanza">
            <summary>设置 RuleManager.BlockGlobal(Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllowByGroupStringInt32Stanza">
            <summary>设置 RuleManager.AllowByGroup(String group, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllowByJidJidInt32Stanza">
            <summary>设置 RuleManager.AllowByJid(Jid JidToBlock, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.AllowBySubscriptionSubscriptionTypeInt32Stanza">
            <summary>设置 RuleManager.AllowBySubscription(SubscriptionType subType, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BlockByGroupStringInt32Stanza">
            <summary>设置 RuleManager.BlockByGroup(String group, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BlockByJidJidInt32Stanza">
            <summary>设置 RuleManager.BlockByJid(Jid JidToBlock, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BlockBySubscriptionSubscriptionTypeInt32Stanza">
            <summary>设置 RuleManager.BlockBySubscription(SubscriptionType subType, Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.BlockGlobalInt32Stanza">
            <summary>设置 RuleManager.BlockGlobal(Int32 Order, Stanza stanza) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.ShimRuleManager.Constructor">
            <summary>设置 RuleManager.RuleManager() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubActive">
            <summary>agsXMPP.protocol.iq.privacy.Active 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubActive.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.AttachBackingFieldToValue">
            <summary>附加委托以将 StubActive.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubActive.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.InitializeStub">
            <summary>初始化 type StubActive 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubActive.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubActive.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubActive.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubActive.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubActive.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubActive.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubActive.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubDefault">
            <summary>agsXMPP.protocol.iq.privacy.Default 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDefault.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.InitializeStub">
            <summary>初始化 type StubDefault 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubDefault.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubItem">
            <summary>agsXMPP.protocol.iq.privacy.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.#ctor(agsXMPP.protocol.iq.privacy.Action,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.#ctor(agsXMPP.protocol.iq.privacy.Action,System.Int32,agsXMPP.protocol.iq.privacy.Stanza)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.#ctor(agsXMPP.protocol.iq.privacy.Action,System.Int32,agsXMPP.protocol.iq.privacy.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.#ctor(agsXMPP.protocol.iq.privacy.Action,System.Int32,agsXMPP.protocol.iq.privacy.Type,System.String,agsXMPP.protocol.iq.privacy.Stanza)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubList">
            <summary>agsXMPP.protocol.iq.privacy.List 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubList.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.AttachBackingFieldToValue">
            <summary>附加委托以将 StubList.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.InitializeStub">
            <summary>初始化 type StubList 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubList.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubList.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubList.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubList.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubList.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy">
            <summary>agsXMPP.protocol.iq.privacy.Privacy 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPrivacy.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.InitializeStub">
            <summary>初始化 type StubPrivacy 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacy.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq">
            <summary>agsXMPP.protocol.iq.privacy.PrivacyIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubPrivacyIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubPrivacyIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPrivacyIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubPrivacyIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.InitializeStub">
            <summary>初始化 type StubPrivacyIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager">
            <summary>agsXMPP.protocol.iq.privacy.PrivacyManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager.InitializeStub">
            <summary>初始化 type StubPrivacyManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubPrivacyManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager">
            <summary>agsXMPP.protocol.iq.privacy.RuleManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager.InitializeStub">
            <summary>初始化 type StubRuleManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.privacy.Fakes.StubRuleManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.ShimPrivate">
            <summary>agsXMPP.protocol.iq.private.Private 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.#ctor(agsXMPP.protocol.iq.private.Private)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.AllInstances.StorageGet">
            <summary>设置 Private.get_Storage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.AllInstances.StorageSetStorage">
            <summary>设置 Private.set_Storage(Storage value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.Constructor">
            <summary>设置 Private.Private() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.StorageGet">
            <summary>设置 Private.get_Storage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivate.StorageSetStorage">
            <summary>设置 Private.set_Storage(Storage value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq">
            <summary>agsXMPP.protocol.iq.private.PrivateIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.#ctor(agsXMPP.protocol.iq.private.PrivateIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.AllInstances.QueryGet">
            <summary>设置 PrivateIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.Constructor">
            <summary>设置 PrivateIq.PrivateIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.ConstructorIqType">
            <summary>设置 PrivateIq.PrivateIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.ConstructorIqTypeJid">
            <summary>设置 PrivateIq.PrivateIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.ConstructorIqTypeJidJid">
            <summary>设置 PrivateIq.PrivateIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.ShimPrivateIq.QueryGet">
            <summary>设置 PrivateIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.StubPrivate">
            <summary>agsXMPP.protocol.iq.private.Private 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivate.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivate.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivate.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPrivate.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivate.InitializeStub">
            <summary>初始化 type StubPrivate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivate.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivate.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivate.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivate.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivate.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq">
            <summary>agsXMPP.protocol.iq.private.PrivateIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubPrivateIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubPrivateIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPrivateIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubPrivateIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.InitializeStub">
            <summary>初始化 type StubPrivateIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.private.Fakes.StubPrivateIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegister">
            <summary>agsXMPP.protocol.iq.register.Register 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegister.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegister.#ctor(agsXMPP.protocol.iq.register.Register)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.DataGet">
            <summary>设置 Register.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.DataSetData">
            <summary>设置 Register.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.EmailGet">
            <summary>设置 Register.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.EmailSetString">
            <summary>设置 Register.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.InstructionsGet">
            <summary>设置 Register.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.InstructionsSetString">
            <summary>设置 Register.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.NameGet">
            <summary>设置 Register.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.NameSetString">
            <summary>设置 Register.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.PasswordGet">
            <summary>设置 Register.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.PasswordSetString">
            <summary>设置 Register.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.RemoveAccountGet">
            <summary>设置 Register.get_RemoveAccount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.RemoveAccountSetBoolean">
            <summary>设置 Register.set_RemoveAccount(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.UsernameGet">
            <summary>设置 Register.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.AllInstances.UsernameSetString">
            <summary>设置 Register.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegister.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegister.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.Constructor">
            <summary>设置 Register.Register() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.ConstructorStringString">
            <summary>设置 Register.Register(String username, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.DataGet">
            <summary>设置 Register.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.DataSetData">
            <summary>设置 Register.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.EmailGet">
            <summary>设置 Register.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.EmailSetString">
            <summary>设置 Register.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.InstructionsGet">
            <summary>设置 Register.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.InstructionsSetString">
            <summary>设置 Register.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.NameGet">
            <summary>设置 Register.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.NameSetString">
            <summary>设置 Register.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.PasswordGet">
            <summary>设置 Register.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.PasswordSetString">
            <summary>设置 Register.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.RemoveAccountGet">
            <summary>设置 Register.get_RemoveAccount() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.RemoveAccountSetBoolean">
            <summary>设置 Register.set_RemoveAccount(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.UsernameGet">
            <summary>设置 Register.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegister.UsernameSetString">
            <summary>设置 Register.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs">
            <summary>agsXMPP.protocol.iq.register.RegisterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.#ctor(agsXMPP.protocol.iq.register.RegisterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AllInstances.AutoGet">
            <summary>设置 RegisterEventArgs.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AllInstances.AutoSetBoolean">
            <summary>设置 RegisterEventArgs.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AllInstances.RegisterGet">
            <summary>设置 RegisterEventArgs.get_Register() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AllInstances.RegisterSetRegister">
            <summary>设置 RegisterEventArgs.set_Register(Register value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AutoGet">
            <summary>设置 RegisterEventArgs.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.AutoSetBoolean">
            <summary>设置 RegisterEventArgs.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.Constructor">
            <summary>设置 RegisterEventArgs.RegisterEventArgs() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.ConstructorRegister">
            <summary>设置 RegisterEventArgs.RegisterEventArgs(Register reg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.RegisterGet">
            <summary>设置 RegisterEventArgs.get_Register() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterEventArgs.RegisterSetRegister">
            <summary>设置 RegisterEventArgs.set_Register(Register value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq">
            <summary>agsXMPP.protocol.iq.register.RegisterIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.#ctor(agsXMPP.protocol.iq.register.RegisterIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.AllInstances.QueryGet">
            <summary>设置 RegisterIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.Constructor">
            <summary>设置 RegisterIq.RegisterIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.ConstructorIqType">
            <summary>设置 RegisterIq.RegisterIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.ConstructorIqTypeJid">
            <summary>设置 RegisterIq.RegisterIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.ConstructorIqTypeJidJid">
            <summary>设置 RegisterIq.RegisterIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.ShimRegisterIq.QueryGet">
            <summary>设置 RegisterIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.StubRegister">
            <summary>agsXMPP.protocol.iq.register.Register 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegister.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRegister.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegister.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.InitializeStub">
            <summary>初始化 type StubRegister 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegister.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegister.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegister.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegister.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegister.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegister.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegister.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs">
            <summary>agsXMPP.protocol.iq.register.RegisterEventArgs 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.#ctor(agsXMPP.protocol.iq.register.Register)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.InitializeStub">
            <summary>初始化 type StubRegisterEventArgs 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq">
            <summary>agsXMPP.protocol.iq.register.RegisterIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubRegisterIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubRegisterIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRegisterIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubRegisterIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.InitializeStub">
            <summary>初始化 type StubRegisterIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.register.Fakes.StubRegisterIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter">
            <summary>agsXMPP.protocol.iq.roster.Delimiter 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.#ctor(agsXMPP.protocol.iq.roster.Delimiter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.Constructor">
            <summary>设置 Delimiter.Delimiter() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimDelimiter.ConstructorString">
            <summary>设置 Delimiter.Delimiter(String delimiter) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRoster">
            <summary>agsXMPP.protocol.iq.roster.Roster 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.#ctor(agsXMPP.protocol.iq.roster.Roster)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.AddRosterItemRosterItem">
            <summary>设置 Roster.AddRosterItem(RosterItem r) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.AllInstances.AddRosterItemRosterItem">
            <summary>设置 Roster.AddRosterItem(RosterItem r) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.AllInstances.GetRoster">
            <summary>设置 Roster.GetRoster() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.Constructor">
            <summary>设置 Roster.Roster() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRoster.GetRoster">
            <summary>设置 Roster.GetRoster() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq">
            <summary>agsXMPP.protocol.iq.roster.RosterIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.#ctor(agsXMPP.protocol.iq.roster.RosterIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.AllInstances.QueryGet">
            <summary>设置 RosterIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.Constructor">
            <summary>设置 RosterIq.RosterIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.ConstructorIqType">
            <summary>设置 RosterIq.RosterIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterIq.QueryGet">
            <summary>设置 RosterIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem">
            <summary>agsXMPP.protocol.iq.roster.RosterItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.#ctor(agsXMPP.protocol.iq.roster.RosterItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AllInstances.AskGet">
            <summary>设置 RosterItem.get_Ask() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AllInstances.AskSetAskType">
            <summary>设置 RosterItem.set_Ask(AskType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AllInstances.SubscriptionGet">
            <summary>设置 RosterItem.get_Subscription() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AllInstances.SubscriptionSetSubscriptionType">
            <summary>设置 RosterItem.set_Subscription(SubscriptionType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AskGet">
            <summary>设置 RosterItem.get_Ask() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.AskSetAskType">
            <summary>设置 RosterItem.set_Ask(AskType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.Constructor">
            <summary>设置 RosterItem.RosterItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.ConstructorJid">
            <summary>设置 RosterItem.RosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.ConstructorJidString">
            <summary>设置 RosterItem.RosterItem(Jid jid, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.SubscriptionGet">
            <summary>设置 RosterItem.get_Subscription() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterItem.SubscriptionSetSubscriptionType">
            <summary>设置 RosterItem.set_Subscription(SubscriptionType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager">
            <summary>agsXMPP.protocol.iq.roster.RosterManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.#ctor(agsXMPP.protocol.iq.roster.RosterManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AddRosterItemJid">
            <summary>设置 RosterManager.AddRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AddRosterItemJidString">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AddRosterItemJidStringString">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname, String group) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AddRosterItemJidStringStringArray">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname, String[] group) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.AddRosterItemJid">
            <summary>设置 RosterManager.AddRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.AddRosterItemJidString">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.AddRosterItemJidStringString">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname, String group) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.AddRosterItemJidStringStringArray">
            <summary>设置 RosterManager.AddRosterItem(Jid jid, String nickname, String[] group) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.RemoveRosterItemJid">
            <summary>设置 RosterManager.RemoveRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.UpdateRosterItemJid">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.UpdateRosterItemJidString">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.UpdateRosterItemJidStringString">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname, String group) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.AllInstances.UpdateRosterItemJidStringStringArray">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname, String[] group) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.ConstructorXmppClientConnection">
            <summary>设置 RosterManager.RosterManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.RemoveRosterItemJid">
            <summary>设置 RosterManager.RemoveRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.UpdateRosterItemJid">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.UpdateRosterItemJidString">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.UpdateRosterItemJidStringString">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname, String group) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.ShimRosterManager.UpdateRosterItemJidStringStringArray">
            <summary>设置 RosterManager.UpdateRosterItem(Jid jid, String nickname, String[] group) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter">
            <summary>agsXMPP.protocol.iq.roster.Delimiter 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDelimiter.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.InitializeStub">
            <summary>初始化 type StubDelimiter 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubDelimiter.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.StubRoster">
            <summary>agsXMPP.protocol.iq.roster.Roster 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRoster.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRoster.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRoster.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRoster.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRoster.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRoster.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRoster.InitializeStub">
            <summary>初始化 type StubRoster 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRoster.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRoster.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRoster.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRoster.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRoster.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRoster.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRoster.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq">
            <summary>agsXMPP.protocol.iq.roster.RosterIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubRosterIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubRosterIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRosterIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubRosterIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.InitializeStub">
            <summary>初始化 type StubRosterIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem">
            <summary>agsXMPP.protocol.iq.roster.RosterItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRosterItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.InitializeStub">
            <summary>初始化 type StubRosterItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.roster.Fakes.StubRosterItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager">
            <summary>agsXMPP.protocol.iq.roster.RosterManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager.InitializeStub">
            <summary>初始化 type StubRosterManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.roster.Fakes.StubRosterManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall">
            <summary>agsXMPP.protocol.iq.rpc.MethodCall 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.#ctor(agsXMPP.protocol.iq.rpc.MethodCall)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.AllInstances.MethodNameGet">
            <summary>设置 MethodCall.get_MethodName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.AllInstances.MethodNameSetString">
            <summary>设置 MethodCall.set_MethodName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.AllInstances.WriteCallStringArrayList">
            <summary>设置 MethodCall.WriteCall(String name, ArrayList Params) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.AllInstances.WriteValueObjectElement">
            <summary>设置 MethodCall.WriteValue(Object param, Element parent) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.Constructor">
            <summary>设置 MethodCall.MethodCall() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.ConstructorStringArrayList">
            <summary>设置 MethodCall.MethodCall(String methodName, ArrayList Params) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.MethodNameGet">
            <summary>设置 MethodCall.get_MethodName() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.MethodNameSetString">
            <summary>设置 MethodCall.set_MethodName(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.WriteCallStringArrayList">
            <summary>设置 MethodCall.WriteCall(String name, ArrayList Params) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodCall.WriteValueObjectElement">
            <summary>设置 MethodCall.WriteValue(Object param, Element parent) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse">
            <summary>agsXMPP.protocol.iq.rpc.MethodResponse 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.#ctor(agsXMPP.protocol.iq.rpc.MethodResponse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances.GetResponse">
            <summary>设置 MethodResponse.GetResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances.ParseArrayElement">
            <summary>设置 MethodResponse.ParseArray(Element elArray) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances.ParseResponse">
            <summary>设置 MethodResponse.ParseResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances.ParseStructElement">
            <summary>设置 MethodResponse.ParseStruct(Element el) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.AllInstances.ParseValueElement">
            <summary>设置 MethodResponse.ParseValue(Element value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.Constructor">
            <summary>设置 MethodResponse.MethodResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.GetResponse">
            <summary>设置 MethodResponse.GetResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.ParseArrayElement">
            <summary>设置 MethodResponse.ParseArray(Element elArray) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.ParseResponse">
            <summary>设置 MethodResponse.ParseResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.ParseStructElement">
            <summary>设置 MethodResponse.ParseStruct(Element el) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimMethodResponse.ParseValueElement">
            <summary>设置 MethodResponse.ParseValue(Element value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc">
            <summary>agsXMPP.protocol.iq.rpc.Rpc 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.#ctor(agsXMPP.protocol.iq.rpc.Rpc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.AllInstances.MethodCallGet">
            <summary>设置 Rpc.get_MethodCall() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.AllInstances.MethodCallSetMethodCall">
            <summary>设置 Rpc.set_MethodCall(MethodCall value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.AllInstances.MethodResponseGet">
            <summary>设置 Rpc.get_MethodResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.AllInstances.MethodResponseSetMethodResponse">
            <summary>设置 Rpc.set_MethodResponse(MethodResponse value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.Constructor">
            <summary>设置 Rpc.Rpc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.MethodCallGet">
            <summary>设置 Rpc.get_MethodCall() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.MethodCallSetMethodCall">
            <summary>设置 Rpc.set_MethodCall(MethodCall value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.MethodResponseGet">
            <summary>设置 Rpc.get_MethodResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpc.MethodResponseSetMethodResponse">
            <summary>设置 Rpc.set_MethodResponse(MethodResponse value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq">
            <summary>agsXMPP.protocol.iq.rpc.RpcIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.#ctor(agsXMPP.protocol.iq.rpc.RpcIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.AllInstances.QueryGet">
            <summary>设置 RpcIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.Constructor">
            <summary>设置 RpcIq.RpcIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.ConstructorIqType">
            <summary>设置 RpcIq.RpcIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.ConstructorIqTypeJid">
            <summary>设置 RpcIq.RpcIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.ConstructorIqTypeJidJid">
            <summary>设置 RpcIq.RpcIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.ShimRpcIq.QueryGet">
            <summary>设置 RpcIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall">
            <summary>agsXMPP.protocol.iq.rpc.MethodCall 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.#ctor(System.String,System.Collections.ArrayList)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMethodCall.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.InitializeStub">
            <summary>初始化 type StubMethodCall 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodCall.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse">
            <summary>agsXMPP.protocol.iq.rpc.MethodResponse 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMethodResponse.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.InitializeStub">
            <summary>初始化 type StubMethodResponse 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubMethodResponse.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.StubRpc">
            <summary>agsXMPP.protocol.iq.rpc.Rpc 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRpc.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.InitializeStub">
            <summary>初始化 type StubRpc 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpc.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq">
            <summary>agsXMPP.protocol.iq.rpc.RpcIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubRpcIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubRpcIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRpcIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubRpcIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.InitializeStub">
            <summary>初始化 type StubRpcIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.rpc.Fakes.StubRpcIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearch">
            <summary>agsXMPP.protocol.iq.search.Search 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearch.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearch.#ctor(agsXMPP.protocol.iq.search.Search)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.DataGet">
            <summary>设置 Search.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.DataSetData">
            <summary>设置 Search.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.EmailGet">
            <summary>设置 Search.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.EmailSetString">
            <summary>设置 Search.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.FirstnameGet">
            <summary>设置 Search.get_Firstname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.FirstnameSetString">
            <summary>设置 Search.set_Firstname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.GetItems">
            <summary>设置 Search.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.InstructionsGet">
            <summary>设置 Search.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.InstructionsSetString">
            <summary>设置 Search.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.LastnameGet">
            <summary>设置 Search.get_Lastname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.LastnameSetString">
            <summary>设置 Search.set_Lastname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.NicknameGet">
            <summary>设置 Search.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.AllInstances.NicknameSetString">
            <summary>设置 Search.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearch.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearch.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.Constructor">
            <summary>设置 Search.Search() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.DataGet">
            <summary>设置 Search.get_Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.DataSetData">
            <summary>设置 Search.set_Data(Data value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.EmailGet">
            <summary>设置 Search.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.EmailSetString">
            <summary>设置 Search.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.FirstnameGet">
            <summary>设置 Search.get_Firstname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.FirstnameSetString">
            <summary>设置 Search.set_Firstname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.GetItems">
            <summary>设置 Search.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.InstructionsGet">
            <summary>设置 Search.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.InstructionsSetString">
            <summary>设置 Search.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.LastnameGet">
            <summary>设置 Search.get_Lastname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.LastnameSetString">
            <summary>设置 Search.set_Lastname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.NicknameGet">
            <summary>设置 Search.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearch.NicknameSetString">
            <summary>设置 Search.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq">
            <summary>agsXMPP.protocol.iq.search.SearchIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.#ctor(agsXMPP.protocol.iq.search.SearchIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.AllInstances.QueryGet">
            <summary>设置 SearchIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.Constructor">
            <summary>设置 SearchIq.SearchIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.ConstructorIqType">
            <summary>设置 SearchIq.SearchIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.ConstructorIqTypeJid">
            <summary>设置 SearchIq.SearchIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.ConstructorIqTypeJidJid">
            <summary>设置 SearchIq.SearchIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchIq.QueryGet">
            <summary>设置 SearchIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem">
            <summary>agsXMPP.protocol.iq.search.SearchItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.#ctor(agsXMPP.protocol.iq.search.SearchItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.EmailGet">
            <summary>设置 SearchItem.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.EmailSetString">
            <summary>设置 SearchItem.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.FirstnameGet">
            <summary>设置 SearchItem.get_Firstname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.FirstnameSetString">
            <summary>设置 SearchItem.set_Firstname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.JidGet">
            <summary>设置 SearchItem.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.JidSetJid">
            <summary>设置 SearchItem.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.LastnameGet">
            <summary>设置 SearchItem.get_Lastname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.LastnameSetString">
            <summary>设置 SearchItem.set_Lastname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.NicknameGet">
            <summary>设置 SearchItem.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.AllInstances.NicknameSetString">
            <summary>设置 SearchItem.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.Constructor">
            <summary>设置 SearchItem.SearchItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.EmailGet">
            <summary>设置 SearchItem.get_Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.EmailSetString">
            <summary>设置 SearchItem.set_Email(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.FirstnameGet">
            <summary>设置 SearchItem.get_Firstname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.FirstnameSetString">
            <summary>设置 SearchItem.set_Firstname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.JidGet">
            <summary>设置 SearchItem.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.JidSetJid">
            <summary>设置 SearchItem.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.LastnameGet">
            <summary>设置 SearchItem.get_Lastname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.LastnameSetString">
            <summary>设置 SearchItem.set_Lastname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.NicknameGet">
            <summary>设置 SearchItem.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.ShimSearchItem.NicknameSetString">
            <summary>设置 SearchItem.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.StubSearch">
            <summary>agsXMPP.protocol.iq.search.Search 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearch.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearch.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearch.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearch.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSearch.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearch.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearch.InitializeStub">
            <summary>初始化 type StubSearch 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearch.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearch.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearch.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearch.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearch.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearch.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearch.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.StubSearchIq">
            <summary>agsXMPP.protocol.iq.search.SearchIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubSearchIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubSearchIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSearchIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubSearchIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.InitializeStub">
            <summary>初始化 type StubSearchIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.search.Fakes.StubSearchItem">
            <summary>agsXMPP.protocol.iq.search.SearchItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSearchItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.InitializeStub">
            <summary>初始化 type StubSearchItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.search.Fakes.StubSearchItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.ShimSession">
            <summary>agsXMPP.protocol.iq.session.Session 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSession.#ctor(agsXMPP.protocol.iq.session.Session)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.ShimSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSession.Constructor">
            <summary>设置 Session.Session() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq">
            <summary>agsXMPP.protocol.iq.session.SessionIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.#ctor(agsXMPP.protocol.iq.session.SessionIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.Constructor">
            <summary>设置 SessionIq.SessionIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.ConstructorIqType">
            <summary>设置 SessionIq.SessionIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.ShimSessionIq.ConstructorIqTypeJid">
            <summary>设置 SessionIq.SessionIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.StubSession">
            <summary>agsXMPP.protocol.iq.session.Session 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSession.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSession.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSession.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSession.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSession.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSession.InitializeStub">
            <summary>初始化 type StubSession 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSession.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSession.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSession.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSession.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSession.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.session.Fakes.StubSessionIq">
            <summary>agsXMPP.protocol.iq.session.SessionIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubSessionIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubSessionIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSessionIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubSessionIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.InitializeStub">
            <summary>初始化 type StubSessionIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.session.Fakes.StubSessionIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.ShimTime">
            <summary>agsXMPP.protocol.iq.time.Time 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTime.#ctor(agsXMPP.protocol.iq.time.Time)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.DisplayGet">
            <summary>设置 Time.get_Display() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.DisplaySetString">
            <summary>设置 Time.set_Display(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.TzGet">
            <summary>设置 Time.get_Tz() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.TzSetString">
            <summary>设置 Time.set_Tz(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.UtcGet">
            <summary>设置 Time.get_Utc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.AllInstances.UtcSetString">
            <summary>设置 Time.set_Utc(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.Constructor">
            <summary>设置 Time.Time() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.DisplayGet">
            <summary>设置 Time.get_Display() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.DisplaySetString">
            <summary>设置 Time.set_Display(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.TzGet">
            <summary>设置 Time.get_Tz() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.TzSetString">
            <summary>设置 Time.set_Tz(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.UtcGet">
            <summary>设置 Time.get_Utc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTime.UtcSetString">
            <summary>设置 Time.set_Utc(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq">
            <summary>agsXMPP.protocol.iq.time.TimeIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.#ctor(agsXMPP.protocol.iq.time.TimeIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.AllInstances.QueryGet">
            <summary>设置 TimeIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.Constructor">
            <summary>设置 TimeIq.TimeIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.ConstructorIqType">
            <summary>设置 TimeIq.TimeIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.ConstructorIqTypeJid">
            <summary>设置 TimeIq.TimeIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.ConstructorIqTypeJidJid">
            <summary>设置 TimeIq.TimeIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.ShimTimeIq.QueryGet">
            <summary>设置 TimeIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.StubTime">
            <summary>agsXMPP.protocol.iq.time.Time 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTime.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTime.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTime.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTime.AttachBackingFieldToValue">
            <summary>附加委托以将 StubTime.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTime.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTime.InitializeStub">
            <summary>初始化 type StubTime 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTime.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTime.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTime.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTime.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTime.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTime.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTime.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.time.Fakes.StubTimeIq">
            <summary>agsXMPP.protocol.iq.time.TimeIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubTimeIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubTimeIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubTimeIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubTimeIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.InitializeStub">
            <summary>初始化 type StubTimeIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.time.Fakes.StubTimeIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress">
            <summary>agsXMPP.protocol.iq.vcard.Address 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.#ctor(agsXMPP.protocol.iq.vcard.Address)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.CountryGet">
            <summary>设置 Address.get_Country() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.CountrySetString">
            <summary>设置 Address.set_Country(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.ExtraAddressGet">
            <summary>设置 Address.get_ExtraAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.ExtraAddressSetString">
            <summary>设置 Address.set_ExtraAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.IsPreferedGet">
            <summary>设置 Address.get_IsPrefered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.IsPreferedSetBoolean">
            <summary>设置 Address.set_IsPrefered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.LocalityGet">
            <summary>设置 Address.get_Locality() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.LocalitySetString">
            <summary>设置 Address.set_Locality(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.LocationGet">
            <summary>设置 Address.get_Location() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.LocationSetAddressLocation">
            <summary>设置 Address.set_Location(AddressLocation value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.PostalCodeGet">
            <summary>设置 Address.get_PostalCode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.PostalCodeSetString">
            <summary>设置 Address.set_PostalCode(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.RegionGet">
            <summary>设置 Address.get_Region() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.RegionSetString">
            <summary>设置 Address.set_Region(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.StreetGet">
            <summary>设置 Address.get_Street() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.AllInstances.StreetSetString">
            <summary>设置 Address.set_Street(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.Constructor">
            <summary>设置 Address.Address() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.ConstructorAddressLocationStringStringStringStringStringStringBoolean">
            <summary>设置 Address.Address(AddressLocation loc, String extra, String street, String locality, String region, String postalcode, String country, Boolean prefered) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.CountryGet">
            <summary>设置 Address.get_Country() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.CountrySetString">
            <summary>设置 Address.set_Country(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.ExtraAddressGet">
            <summary>设置 Address.get_ExtraAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.ExtraAddressSetString">
            <summary>设置 Address.set_ExtraAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.IsPreferedGet">
            <summary>设置 Address.get_IsPrefered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.IsPreferedSetBoolean">
            <summary>设置 Address.set_IsPrefered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.LocalityGet">
            <summary>设置 Address.get_Locality() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.LocalitySetString">
            <summary>设置 Address.set_Locality(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.LocationGet">
            <summary>设置 Address.get_Location() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.LocationSetAddressLocation">
            <summary>设置 Address.set_Location(AddressLocation value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.PostalCodeGet">
            <summary>设置 Address.get_PostalCode() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.PostalCodeSetString">
            <summary>设置 Address.set_PostalCode(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.RegionGet">
            <summary>设置 Address.get_Region() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.RegionSetString">
            <summary>设置 Address.set_Region(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.StreetGet">
            <summary>设置 Address.get_Street() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimAddress.StreetSetString">
            <summary>设置 Address.set_Street(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail">
            <summary>agsXMPP.protocol.iq.vcard.Email 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.#ctor(agsXMPP.protocol.iq.vcard.Email)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.IsPreferedGet">
            <summary>设置 Email.get_IsPrefered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.IsPreferedSetBoolean">
            <summary>设置 Email.set_IsPrefered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.TypeGet">
            <summary>设置 Email.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.TypeSetEmailType">
            <summary>设置 Email.set_Type(EmailType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.UserIdGet">
            <summary>设置 Email.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.AllInstances.UserIdSetString">
            <summary>设置 Email.set_UserId(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.Constructor">
            <summary>设置 Email.Email() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.ConstructorEmailTypeStringBoolean">
            <summary>设置 Email.Email(EmailType type, String userid, Boolean prefered) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.IsPreferedGet">
            <summary>设置 Email.get_IsPrefered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.IsPreferedSetBoolean">
            <summary>设置 Email.set_IsPrefered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.TypeGet">
            <summary>设置 Email.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.TypeSetEmailType">
            <summary>设置 Email.set_Type(EmailType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.UserIdGet">
            <summary>设置 Email.get_UserId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimEmail.UserIdSetString">
            <summary>设置 Email.set_UserId(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimName">
            <summary>agsXMPP.protocol.iq.vcard.Name 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimName.#ctor(agsXMPP.protocol.iq.vcard.Name)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.FamilyGet">
            <summary>设置 Name.get_Family() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.FamilySetString">
            <summary>设置 Name.set_Family(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.GivenGet">
            <summary>设置 Name.get_Given() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.GivenSetString">
            <summary>设置 Name.set_Given(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.MiddleGet">
            <summary>设置 Name.get_Middle() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.AllInstances.MiddleSetString">
            <summary>设置 Name.set_Middle(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.Constructor">
            <summary>设置 Name.Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.ConstructorStringStringString">
            <summary>设置 Name.Name(String family, String given, String middle) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.FamilyGet">
            <summary>设置 Name.get_Family() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.FamilySetString">
            <summary>设置 Name.set_Family(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.GivenGet">
            <summary>设置 Name.get_Given() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.GivenSetString">
            <summary>设置 Name.set_Given(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.MiddleGet">
            <summary>设置 Name.get_Middle() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimName.MiddleSetString">
            <summary>设置 Name.set_Middle(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization">
            <summary>agsXMPP.protocol.iq.vcard.Organization 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.#ctor(agsXMPP.protocol.iq.vcard.Organization)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.AllInstances.NameGet">
            <summary>设置 Organization.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.AllInstances.NameSetString">
            <summary>设置 Organization.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.AllInstances.UnitGet">
            <summary>设置 Organization.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.AllInstances.UnitSetString">
            <summary>设置 Organization.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.Constructor">
            <summary>设置 Organization.Organization() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.ConstructorStringString">
            <summary>设置 Organization.Organization(String name, String unit) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.NameGet">
            <summary>设置 Organization.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.NameSetString">
            <summary>设置 Organization.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.UnitGet">
            <summary>设置 Organization.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimOrganization.UnitSetString">
            <summary>设置 Organization.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto">
            <summary>agsXMPP.protocol.iq.vcard.Photo 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.#ctor(agsXMPP.protocol.iq.vcard.Photo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.ImageFormatGet">
            <summary>设置 Photo.get_ImageFormat() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.ImageGet">
            <summary>设置 Photo.get_Image() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.SetImageImageImageFormat">
            <summary>设置 Photo.SetImage(Image image, ImageFormat format) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.SetImageString">
            <summary>设置 Photo.SetImage(String url) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.TypeGet">
            <summary>设置 Photo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.AllInstances.TypeSetString">
            <summary>设置 Photo.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.Constructor">
            <summary>设置 Photo.Photo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.ConstructorImageImageFormat">
            <summary>设置 Photo.Photo(Image image, ImageFormat format) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.ConstructorString">
            <summary>设置 Photo.Photo(String url) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.ImageFormatGet">
            <summary>设置 Photo.get_ImageFormat() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.ImageGet">
            <summary>设置 Photo.get_Image() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.SetImageImageImageFormat">
            <summary>设置 Photo.SetImage(Image image, ImageFormat format) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.SetImageString">
            <summary>设置 Photo.SetImage(String url) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.TypeGet">
            <summary>设置 Photo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimPhoto.TypeSetString">
            <summary>设置 Photo.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone">
            <summary>agsXMPP.protocol.iq.vcard.Telephone 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.#ctor(agsXMPP.protocol.iq.vcard.Telephone)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.LocationGet">
            <summary>设置 Telephone.get_Location() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.LocationSetTelephoneLocation">
            <summary>设置 Telephone.set_Location(TelephoneLocation value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.NumberGet">
            <summary>设置 Telephone.get_Number() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.NumberSetString">
            <summary>设置 Telephone.set_Number(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.TypeGet">
            <summary>设置 Telephone.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.AllInstances.TypeSetTelephoneType">
            <summary>设置 Telephone.set_Type(TelephoneType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.Constructor">
            <summary>设置 Telephone.Telephone() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.ConstructorTelephoneLocationTelephoneTypeString">
            <summary>设置 Telephone.Telephone(TelephoneLocation loc, TelephoneType type, String number) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.LocationGet">
            <summary>设置 Telephone.get_Location() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.LocationSetTelephoneLocation">
            <summary>设置 Telephone.set_Location(TelephoneLocation value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.NumberGet">
            <summary>设置 Telephone.get_Number() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.NumberSetString">
            <summary>设置 Telephone.set_Number(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.TypeGet">
            <summary>设置 Telephone.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimTelephone.TypeSetTelephoneType">
            <summary>设置 Telephone.set_Type(TelephoneType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard">
            <summary>agsXMPP.protocol.iq.vcard.Vcard 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.#ctor(agsXMPP.protocol.iq.vcard.Vcard)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AddAddressAddress">
            <summary>设置 Vcard.AddAddress(Address addr) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AddEmailAddressEmail">
            <summary>设置 Vcard.AddEmailAddress(Email mail) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AddTelephoneNumberTelephone">
            <summary>设置 Vcard.AddTelephoneNumber(Telephone tel) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.AddAddressAddress">
            <summary>设置 Vcard.AddAddress(Address addr) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.AddEmailAddressEmail">
            <summary>设置 Vcard.AddEmailAddress(Email mail) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.AddTelephoneNumberTelephone">
            <summary>设置 Vcard.AddTelephoneNumber(Telephone tel) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.BirthdayGet">
            <summary>设置 Vcard.get_Birthday() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.BirthdaySetDateTime">
            <summary>设置 Vcard.set_Birthday(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.DescriptionGet">
            <summary>设置 Vcard.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.DescriptionSetString">
            <summary>设置 Vcard.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.FullnameGet">
            <summary>设置 Vcard.get_Fullname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.FullnameSetString">
            <summary>设置 Vcard.set_Fullname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetAddressAddressLocation">
            <summary>设置 Vcard.GetAddress(AddressLocation loc) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetAddresses">
            <summary>设置 Vcard.GetAddresses() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetEmailAddressEmailType">
            <summary>设置 Vcard.GetEmailAddress(EmailType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetEmailAddresses">
            <summary>设置 Vcard.GetEmailAddresses() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetPreferedAddress">
            <summary>设置 Vcard.GetPreferedAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetPreferedEmailAddress">
            <summary>设置 Vcard.GetPreferedEmailAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetTelephoneNumberTelephoneTypeTelephoneLocation">
            <summary>设置 Vcard.GetTelephoneNumber(TelephoneType type, TelephoneLocation loc) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.GetTelephoneNumbers">
            <summary>设置 Vcard.GetTelephoneNumbers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.JabberIdGet">
            <summary>设置 Vcard.get_JabberId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.JabberIdSetJid">
            <summary>设置 Vcard.set_JabberId(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.NameGet">
            <summary>设置 Vcard.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.NameSetName">
            <summary>设置 Vcard.set_Name(Name value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.NicknameGet">
            <summary>设置 Vcard.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.NicknameSetString">
            <summary>设置 Vcard.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.OrganizationGet">
            <summary>设置 Vcard.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.OrganizationSetOrganization">
            <summary>设置 Vcard.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.PhotoGet">
            <summary>设置 Vcard.get_Photo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.PhotoSetPhoto">
            <summary>设置 Vcard.set_Photo(Photo value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.RoleGet">
            <summary>设置 Vcard.get_Role() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.RoleSetString">
            <summary>设置 Vcard.set_Role(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.TitleGet">
            <summary>设置 Vcard.get_Title() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.TitleSetString">
            <summary>设置 Vcard.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.UrlGet">
            <summary>设置 Vcard.get_Url() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.AllInstances.UrlSetString">
            <summary>设置 Vcard.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.BirthdayGet">
            <summary>设置 Vcard.get_Birthday() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.BirthdaySetDateTime">
            <summary>设置 Vcard.set_Birthday(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.Constructor">
            <summary>设置 Vcard.Vcard() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.DescriptionGet">
            <summary>设置 Vcard.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.DescriptionSetString">
            <summary>设置 Vcard.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.FullnameGet">
            <summary>设置 Vcard.get_Fullname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.FullnameSetString">
            <summary>设置 Vcard.set_Fullname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetAddressAddressLocation">
            <summary>设置 Vcard.GetAddress(AddressLocation loc) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetAddresses">
            <summary>设置 Vcard.GetAddresses() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetEmailAddressEmailType">
            <summary>设置 Vcard.GetEmailAddress(EmailType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetEmailAddresses">
            <summary>设置 Vcard.GetEmailAddresses() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetPreferedAddress">
            <summary>设置 Vcard.GetPreferedAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetPreferedEmailAddress">
            <summary>设置 Vcard.GetPreferedEmailAddress() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetTelephoneNumberTelephoneTypeTelephoneLocation">
            <summary>设置 Vcard.GetTelephoneNumber(TelephoneType type, TelephoneLocation loc) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.GetTelephoneNumbers">
            <summary>设置 Vcard.GetTelephoneNumbers() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.JabberIdGet">
            <summary>设置 Vcard.get_JabberId() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.JabberIdSetJid">
            <summary>设置 Vcard.set_JabberId(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.NameGet">
            <summary>设置 Vcard.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.NameSetName">
            <summary>设置 Vcard.set_Name(Name value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.NicknameGet">
            <summary>设置 Vcard.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.NicknameSetString">
            <summary>设置 Vcard.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.OrganizationGet">
            <summary>设置 Vcard.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.OrganizationSetOrganization">
            <summary>设置 Vcard.set_Organization(Organization value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.PhotoGet">
            <summary>设置 Vcard.get_Photo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.PhotoSetPhoto">
            <summary>设置 Vcard.set_Photo(Photo value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.RoleGet">
            <summary>设置 Vcard.get_Role() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.RoleSetString">
            <summary>设置 Vcard.set_Role(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.TitleGet">
            <summary>设置 Vcard.get_Title() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.TitleSetString">
            <summary>设置 Vcard.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.UrlGet">
            <summary>设置 Vcard.get_Url() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcard.UrlSetString">
            <summary>设置 Vcard.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq">
            <summary>agsXMPP.protocol.iq.vcard.VcardIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.#ctor(agsXMPP.protocol.iq.vcard.VcardIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.AllInstances.VcardGet">
            <summary>设置 VcardIq.get_Vcard() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.AllInstances.VcardSetVcard">
            <summary>设置 VcardIq.set_Vcard(Vcard value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.Constructor">
            <summary>设置 VcardIq.VcardIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqType">
            <summary>设置 VcardIq.VcardIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqTypeJid">
            <summary>设置 VcardIq.VcardIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqTypeJidJid">
            <summary>设置 VcardIq.VcardIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqTypeJidJidVcard">
            <summary>设置 VcardIq.VcardIq(IqType type, Jid to, Jid from, Vcard vcard) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqTypeJidVcard">
            <summary>设置 VcardIq.VcardIq(IqType type, Jid to, Vcard vcard) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.ConstructorIqTypeVcard">
            <summary>设置 VcardIq.VcardIq(IqType type, Vcard vcard) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.VcardGet">
            <summary>设置 VcardIq.get_Vcard() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.ShimVcardIq.VcardSetVcard">
            <summary>设置 VcardIq.set_Vcard(Vcard value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubAddress">
            <summary>agsXMPP.protocol.iq.vcard.Address 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.#ctor(agsXMPP.protocol.iq.vcard.AddressLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAddress.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.InitializeStub">
            <summary>初始化 type StubAddress 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubAddress.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubEmail">
            <summary>agsXMPP.protocol.iq.vcard.Email 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.#ctor(agsXMPP.protocol.iq.vcard.EmailType,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.AttachBackingFieldToValue">
            <summary>附加委托以将 StubEmail.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.InitializeStub">
            <summary>初始化 type StubEmail 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubEmail.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubName">
            <summary>agsXMPP.protocol.iq.vcard.Name 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubName.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.AttachBackingFieldToValue">
            <summary>附加委托以将 StubName.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.InitializeStub">
            <summary>初始化 type StubName 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubName.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubName.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubName.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubName.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubName.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization">
            <summary>agsXMPP.protocol.iq.vcard.Organization 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOrganization.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.InitializeStub">
            <summary>初始化 type StubOrganization 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubOrganization.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto">
            <summary>agsXMPP.protocol.iq.vcard.Photo 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.#ctor(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPhoto.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.InitializeStub">
            <summary>初始化 type StubPhoto 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubPhoto.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone">
            <summary>agsXMPP.protocol.iq.vcard.Telephone 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.#ctor(agsXMPP.protocol.iq.vcard.TelephoneLocation,agsXMPP.protocol.iq.vcard.TelephoneType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.AttachBackingFieldToValue">
            <summary>附加委托以将 StubTelephone.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.InitializeStub">
            <summary>初始化 type StubTelephone 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubTelephone.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubVcard">
            <summary>agsXMPP.protocol.iq.vcard.Vcard 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.AttachBackingFieldToValue">
            <summary>附加委托以将 StubVcard.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.InitializeStub">
            <summary>初始化 type StubVcard 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcard.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq">
            <summary>agsXMPP.protocol.iq.vcard.VcardIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.protocol.iq.vcard.Vcard)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.protocol.iq.vcard.Vcard)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid,agsXMPP.protocol.iq.vcard.Vcard)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubVcardIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubVcardIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubVcardIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubVcardIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.InitializeStub">
            <summary>初始化 type StubVcardIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.Vcard">
            <summary>设置 VcardIq.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.VcardGet">
            <summary>设置 VcardIq.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.vcard.Fakes.StubVcardIq.VcardSetVcard">
            <summary>设置 VcardIq.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.ShimVersion">
            <summary>agsXMPP.protocol.iq.version.Version 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersion.#ctor(agsXMPP.protocol.iq.version.Version)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.NameGet">
            <summary>设置 Version.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.NameSetString">
            <summary>设置 Version.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.OsGet">
            <summary>设置 Version.get_Os() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.OsSetString">
            <summary>设置 Version.set_Os(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.VerGet">
            <summary>设置 Version.get_Ver() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.AllInstances.VerSetString">
            <summary>设置 Version.set_Ver(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.Constructor">
            <summary>设置 Version.Version() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.NameGet">
            <summary>设置 Version.get_Name() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.NameSetString">
            <summary>设置 Version.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.OsGet">
            <summary>设置 Version.get_Os() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.OsSetString">
            <summary>设置 Version.set_Os(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.VerGet">
            <summary>设置 Version.get_Ver() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersion.VerSetString">
            <summary>设置 Version.set_Ver(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq">
            <summary>agsXMPP.protocol.iq.version.VersionIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.#ctor(agsXMPP.protocol.iq.version.VersionIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.AllInstances.QueryGet">
            <summary>设置 VersionIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.Constructor">
            <summary>设置 VersionIq.VersionIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.ConstructorIqType">
            <summary>设置 VersionIq.VersionIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.ConstructorIqTypeJid">
            <summary>设置 VersionIq.VersionIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.ConstructorIqTypeJidJid">
            <summary>设置 VersionIq.VersionIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.ShimVersionIq.QueryGet">
            <summary>设置 VersionIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.StubVersion">
            <summary>agsXMPP.protocol.iq.version.Version 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersion.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersion.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersion.AttachBackingFieldToValue">
            <summary>附加委托以将 StubVersion.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersion.InitializeStub">
            <summary>初始化 type StubVersion 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersion.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersion.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersion.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersion.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersion.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.iq.version.Fakes.StubVersionIq">
            <summary>agsXMPP.protocol.iq.version.VersionIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubVersionIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubVersionIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubVersionIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubVersionIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.InitializeStub">
            <summary>初始化 type StubVersionIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.iq.version.Fakes.StubVersionIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimAbort">
            <summary>agsXMPP.protocol.sasl.Abort 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAbort.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAbort.#ctor(agsXMPP.protocol.sasl.Abort)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimAbort.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAbort.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAbort.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAbort.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAbort.Constructor">
            <summary>设置 Abort.Abort() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimAuth">
            <summary>agsXMPP.protocol.sasl.Auth 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAuth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAuth.#ctor(agsXMPP.protocol.sasl.Auth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimAuth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.AllInstances.MechanismTypeGet">
            <summary>设置 Auth.get_MechanismType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.AllInstances.MechanismTypeSetMechanismType">
            <summary>设置 Auth.set_MechanismType(MechanismType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAuth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimAuth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.Constructor">
            <summary>设置 Auth.Auth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.ConstructorMechanismType">
            <summary>设置 Auth.Auth(MechanismType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.ConstructorMechanismTypeString">
            <summary>设置 Auth.Auth(MechanismType type, String text) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.MechanismTypeGet">
            <summary>设置 Auth.get_MechanismType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimAuth.MechanismTypeSetMechanismType">
            <summary>设置 Auth.set_MechanismType(MechanismType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimChallenge">
            <summary>agsXMPP.protocol.sasl.Challenge 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimChallenge.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimChallenge.#ctor(agsXMPP.protocol.sasl.Challenge)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimChallenge.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimChallenge.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimChallenge.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimChallenge.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimChallenge.Constructor">
            <summary>设置 Challenge.Challenge() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimFailure">
            <summary>agsXMPP.protocol.sasl.Failure 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimFailure.#ctor(agsXMPP.protocol.sasl.Failure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.AllInstances.ConditionGet">
            <summary>设置 Failure.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.AllInstances.ConditionSetFailureCondition">
            <summary>设置 Failure.set_Condition(FailureCondition value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.ConditionGet">
            <summary>设置 Failure.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.ConditionSetFailureCondition">
            <summary>设置 Failure.set_Condition(FailureCondition value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.Constructor">
            <summary>设置 Failure.Failure() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimFailure.ConstructorFailureCondition">
            <summary>设置 Failure.Failure(FailureCondition cond) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimMechanism">
            <summary>agsXMPP.protocol.sasl.Mechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanism.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanism.#ctor(agsXMPP.protocol.sasl.Mechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimMechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.AllInstances.MechanismTypeGet">
            <summary>设置 Mechanism.get_MechanismType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.AllInstances.MechanismTypeSetMechanismType">
            <summary>设置 Mechanism.set_MechanismType(MechanismType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.Constructor">
            <summary>设置 Mechanism.Mechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.ConstructorMechanismType">
            <summary>设置 Mechanism.Mechanism(MechanismType mechanism) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.GetMechanismNameMechanismType">
            <summary>设置 Mechanism.GetMechanismName(MechanismType mechanism) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.GetMechanismTypeString">
            <summary>设置 Mechanism.GetMechanismType(String mechanism) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.MechanismTypeGet">
            <summary>设置 Mechanism.get_MechanismType() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanism.MechanismTypeSetMechanismType">
            <summary>设置 Mechanism.set_MechanismType(MechanismType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimMechanisms">
            <summary>agsXMPP.protocol.sasl.Mechanisms 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.#ctor(agsXMPP.protocol.sasl.Mechanisms)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.AllInstances.GetMechanisms">
            <summary>设置 Mechanisms.GetMechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.AllInstances.SupportsMechanismMechanismType">
            <summary>设置 Mechanisms.SupportsMechanism(MechanismType type) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.Constructor">
            <summary>设置 Mechanisms.Mechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.GetMechanisms">
            <summary>设置 Mechanisms.GetMechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimMechanisms.SupportsMechanismMechanismType">
            <summary>设置 Mechanisms.SupportsMechanism(MechanismType type) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimResponse">
            <summary>agsXMPP.protocol.sasl.Response 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimResponse.#ctor(agsXMPP.protocol.sasl.Response)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimResponse.Constructor">
            <summary>设置 Response.Response() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimResponse.ConstructorString">
            <summary>设置 Response.Response(String text) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimSuccess">
            <summary>agsXMPP.protocol.sasl.Success 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimSuccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimSuccess.#ctor(agsXMPP.protocol.sasl.Success)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.ShimSuccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimSuccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.ShimSuccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimSuccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.ShimSuccess.Constructor">
            <summary>设置 Success.Success() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubAbort">
            <summary>agsXMPP.protocol.sasl.Abort 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAbort.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAbort.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAbort.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAbort.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAbort.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAbort.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAbort.InitializeStub">
            <summary>初始化 type StubAbort 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAbort.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAbort.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAbort.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAbort.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAbort.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAbort.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAbort.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubAuth">
            <summary>agsXMPP.protocol.sasl.Auth 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.#ctor(agsXMPP.protocol.sasl.MechanismType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.#ctor(agsXMPP.protocol.sasl.MechanismType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAuth.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAuth.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAuth.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.InitializeStub">
            <summary>初始化 type StubAuth 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAuth.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAuth.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubAuth.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAuth.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubAuth.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAuth.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubAuth.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubChallenge">
            <summary>agsXMPP.protocol.sasl.Challenge 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubChallenge.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubChallenge.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubChallenge.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubChallenge.AttachBackingFieldToValue">
            <summary>附加委托以将 StubChallenge.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubChallenge.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubChallenge.InitializeStub">
            <summary>初始化 type StubChallenge 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubChallenge.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubChallenge.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubChallenge.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubChallenge.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubChallenge.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubChallenge.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubChallenge.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubFailure">
            <summary>agsXMPP.protocol.sasl.Failure 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.#ctor(agsXMPP.protocol.sasl.FailureCondition)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubFailure.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFailure.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubFailure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.InitializeStub">
            <summary>初始化 type StubFailure 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubFailure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubFailure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubFailure.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubFailure.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubFailure.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubFailure.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubFailure.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubMechanism">
            <summary>agsXMPP.protocol.sasl.Mechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.#ctor(agsXMPP.protocol.sasl.MechanismType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanism.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMechanism.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.InitializeStub">
            <summary>初始化 type StubMechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanism.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanism.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanism.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanism.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanism.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubMechanisms">
            <summary>agsXMPP.protocol.sasl.Mechanisms 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanisms.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanisms.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanisms.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanisms.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMechanisms.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanisms.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanisms.InitializeStub">
            <summary>初始化 type StubMechanisms 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanisms.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanisms.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubMechanisms.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanisms.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubMechanisms.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanisms.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubMechanisms.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubResponse">
            <summary>agsXMPP.protocol.sasl.Response 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubResponse.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.AttachBackingFieldToValue">
            <summary>附加委托以将 StubResponse.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubResponse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.InitializeStub">
            <summary>初始化 type StubResponse 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubResponse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubResponse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubResponse.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubResponse.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubResponse.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubResponse.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubResponse.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.sasl.Fakes.StubSuccess">
            <summary>agsXMPP.protocol.sasl.Success 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubSuccess.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubSuccess.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubSuccess.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubSuccess.AttachBackingFieldToValue">
            <summary>附加委托以将 StubSuccess.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubSuccess.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubSuccess.InitializeStub">
            <summary>初始化 type StubSuccess 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubSuccess.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubSuccess.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.sasl.Fakes.StubSuccess.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubSuccess.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.sasl.Fakes.StubSuccess.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubSuccess.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.sasl.Fakes.StubSuccess.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.server.Fakes.ShimPresence">
            <summary>agsXMPP.protocol.server.Presence 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.ShimPresence.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.ShimPresence.#ctor(agsXMPP.protocol.server.Presence)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.server.Fakes.ShimPresence.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.ShimPresence.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.ShimPresence.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.ShimPresence.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.ShimPresence.Constructor">
            <summary>设置 Presence.Presence() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.server.Fakes.StubPresence">
            <summary>agsXMPP.protocol.server.Presence 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.StubPresence.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.StubPresence.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.server.Fakes.StubPresence.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.StubPresence.AttachBackingFieldToValue">
            <summary>附加委托以将 StubPresence.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.StubPresence.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.StubPresence.InitializeStub">
            <summary>初始化 type StubPresence 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.StubPresence.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.StubPresence.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.server.Fakes.StubPresence.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.server.Fakes.StubPresence.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.server.Fakes.StubPresence.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.server.Fakes.StubPresence.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.server.Fakes.StubPresence.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.ShimAvatar">
            <summary>agsXMPP.protocol.storage.Avatar 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatar.#ctor(agsXMPP.protocol.storage.Avatar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.ShimAvatar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatar.Constructor">
            <summary>设置 Avatar.Avatar() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.ShimAvatarIq">
            <summary>agsXMPP.protocol.storage.AvatarIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.#ctor(agsXMPP.protocol.storage.AvatarIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.AllInstances.QueryGet">
            <summary>设置 AvatarIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.Constructor">
            <summary>设置 AvatarIq.AvatarIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.ConstructorIqType">
            <summary>设置 AvatarIq.AvatarIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.ConstructorIqTypeJid">
            <summary>设置 AvatarIq.AvatarIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.ConstructorIqTypeJidJid">
            <summary>设置 AvatarIq.AvatarIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.ShimAvatarIq.QueryGet">
            <summary>设置 AvatarIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.StubAvatar">
            <summary>agsXMPP.protocol.storage.Avatar 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatar.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatar.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatar.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatar.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatar.InitializeStub">
            <summary>初始化 type StubAvatar 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatar.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatar.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatar.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatar.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatar.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.storage.Fakes.StubAvatarIq">
            <summary>agsXMPP.protocol.storage.AvatarIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubAvatarIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubAvatarIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatarIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubAvatarIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.InitializeStub">
            <summary>初始化 type StubAvatarIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.storage.Fakes.StubAvatarIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.storage.Fakes.StubAvatarIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.storage.Fakes.StubAvatarIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.Fakes.ShimFeatures">
            <summary>agsXMPP.protocol.stream.Features 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.ShimFeatures.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.ShimFeatures.#ctor(agsXMPP.protocol.stream.Features)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.BindGet">
            <summary>设置 Features.get_Bind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.BindSetBind">
            <summary>设置 Features.set_Bind(Bind value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.CompressionGet">
            <summary>设置 Features.get_Compression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.CompressionSetCompression">
            <summary>设置 Features.set_Compression(Compression value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.MechanismsGet">
            <summary>设置 Features.get_Mechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.MechanismsSetMechanisms">
            <summary>设置 Features.set_Mechanisms(Mechanisms value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.RegisterGet">
            <summary>设置 Features.get_Register() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.RegisterSetRegister">
            <summary>设置 Features.set_Register(Register value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.StartTlsGet">
            <summary>设置 Features.get_StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.StartTlsSetStartTls">
            <summary>设置 Features.set_StartTls(StartTls value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.SupportsBindGet">
            <summary>设置 Features.get_SupportsBind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.SupportsCompressionGet">
            <summary>设置 Features.get_SupportsCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.SupportsRegistrationGet">
            <summary>设置 Features.get_SupportsRegistration() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.AllInstances.SupportsStartTlsGet">
            <summary>设置 Features.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.ShimFeatures.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.ShimFeatures.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.BindGet">
            <summary>设置 Features.get_Bind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.BindSetBind">
            <summary>设置 Features.set_Bind(Bind value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.CompressionGet">
            <summary>设置 Features.get_Compression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.CompressionSetCompression">
            <summary>设置 Features.set_Compression(Compression value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.Constructor">
            <summary>设置 Features.Features() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.MechanismsGet">
            <summary>设置 Features.get_Mechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.MechanismsSetMechanisms">
            <summary>设置 Features.set_Mechanisms(Mechanisms value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.RegisterGet">
            <summary>设置 Features.get_Register() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.RegisterSetRegister">
            <summary>设置 Features.set_Register(Register value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.StartTlsGet">
            <summary>设置 Features.get_StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.StartTlsSetStartTls">
            <summary>设置 Features.set_StartTls(StartTls value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.SupportsBindGet">
            <summary>设置 Features.get_SupportsBind() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.SupportsCompressionGet">
            <summary>设置 Features.get_SupportsCompression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.SupportsRegistrationGet">
            <summary>设置 Features.get_SupportsRegistration() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.ShimFeatures.SupportsStartTlsGet">
            <summary>设置 Features.get_SupportsStartTls() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.Fakes.StubFeatures">
            <summary>agsXMPP.protocol.stream.Features 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.StubFeatures.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.StubFeatures.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.Fakes.StubFeatures.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.StubFeatures.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFeatures.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.StubFeatures.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.StubFeatures.InitializeStub">
            <summary>初始化 type StubFeatures 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.StubFeatures.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.StubFeatures.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.Fakes.StubFeatures.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.Fakes.StubFeatures.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.Fakes.StubFeatures.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.Fakes.StubFeatures.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.Fakes.StubFeatures.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.Fakes.ShimRegister">
            <summary>agsXMPP.protocol.stream.feature.Register 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.#ctor(agsXMPP.protocol.stream.feature.Register)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.ShimRegister.Constructor">
            <summary>设置 Register.Register() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.Fakes.StubRegister">
            <summary>agsXMPP.protocol.stream.feature.Register 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.StubRegister.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.StubRegister.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.Fakes.StubRegister.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.StubRegister.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRegister.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.StubRegister.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.StubRegister.InitializeStub">
            <summary>初始化 type StubRegister 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.StubRegister.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.StubRegister.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.Fakes.StubRegister.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.Fakes.StubRegister.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.Fakes.StubRegister.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.Fakes.StubRegister.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.Fakes.StubRegister.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression">
            <summary>agsXMPP.protocol.stream.feature.compression.Compression 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.#ctor(agsXMPP.protocol.stream.feature.compression.Compression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AddMethodCompressionMethod">
            <summary>设置 Compression.AddMethod(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances.AddMethodCompressionMethod">
            <summary>设置 Compression.AddMethod(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances.GetMethods">
            <summary>设置 Compression.GetMethods() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances.MethodGet">
            <summary>设置 Compression.get_Method() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances.MethodSetCompressionMethod">
            <summary>设置 Compression.set_Method(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.AllInstances.SupportsMethodCompressionMethod">
            <summary>设置 Compression.SupportsMethod(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.Constructor">
            <summary>设置 Compression.Compression() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.GetMethods">
            <summary>设置 Compression.GetMethods() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.MethodGet">
            <summary>设置 Compression.get_Method() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.MethodSetCompressionMethod">
            <summary>设置 Compression.set_Method(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimCompression.SupportsMethodCompressionMethod">
            <summary>设置 Compression.SupportsMethod(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod">
            <summary>agsXMPP.protocol.stream.feature.compression.Method 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.#ctor(agsXMPP.protocol.stream.feature.compression.Method)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.AllInstances.CompressionMethodGet">
            <summary>设置 Method.get_CompressionMethod() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.AllInstances.CompressionMethodSetCompressionMethod">
            <summary>设置 Method.set_CompressionMethod(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.CompressionMethodGet">
            <summary>设置 Method.get_CompressionMethod() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.CompressionMethodSetCompressionMethod">
            <summary>设置 Method.set_CompressionMethod(CompressionMethod value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.Constructor">
            <summary>设置 Method.Method() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.ShimMethod.ConstructorCompressionMethod">
            <summary>设置 Method.Method(CompressionMethod method) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression">
            <summary>agsXMPP.protocol.stream.feature.compression.Compression 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.AttachBackingFieldToValue">
            <summary>附加委托以将 StubCompression.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.InitializeStub">
            <summary>初始化 type StubCompression 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubCompression.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod">
            <summary>agsXMPP.protocol.stream.feature.compression.Method 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.#ctor(agsXMPP.protocol.extensions.compression.CompressionMethod)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMethod.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.InitializeStub">
            <summary>初始化 type StubMethod 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.stream.feature.compression.Fakes.StubMethod.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimFailure">
            <summary>agsXMPP.protocol.tls.Failure 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimFailure.#ctor(agsXMPP.protocol.tls.Failure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimFailure.Constructor">
            <summary>设置 Failure.Failure() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimProceed">
            <summary>agsXMPP.protocol.tls.Proceed 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimProceed.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimProceed.#ctor(agsXMPP.protocol.tls.Proceed)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimProceed.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimProceed.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimProceed.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimProceed.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimProceed.Constructor">
            <summary>设置 Proceed.Proceed() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimStartTls">
            <summary>agsXMPP.protocol.tls.StartTls 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimStartTls.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimStartTls.#ctor(agsXMPP.protocol.tls.StartTls)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.ShimStartTls.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.AllInstances.RequiredGet">
            <summary>设置 StartTls.get_Required() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.AllInstances.RequiredSetBoolean">
            <summary>设置 StartTls.set_Required(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimStartTls.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.ShimStartTls.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.Constructor">
            <summary>设置 StartTls.StartTls() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.RequiredGet">
            <summary>设置 StartTls.get_Required() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.ShimStartTls.RequiredSetBoolean">
            <summary>设置 StartTls.set_Required(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.StubFailure">
            <summary>agsXMPP.protocol.tls.Failure 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubFailure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubFailure.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubFailure.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubFailure.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFailure.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubFailure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubFailure.InitializeStub">
            <summary>初始化 type StubFailure 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubFailure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubFailure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubFailure.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubFailure.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubFailure.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubFailure.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubFailure.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.StubProceed">
            <summary>agsXMPP.protocol.tls.Proceed 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubProceed.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubProceed.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubProceed.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubProceed.AttachBackingFieldToValue">
            <summary>附加委托以将 StubProceed.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubProceed.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubProceed.InitializeStub">
            <summary>初始化 type StubProceed 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubProceed.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubProceed.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubProceed.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubProceed.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubProceed.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubProceed.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubProceed.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.tls.Fakes.StubStartTls">
            <summary>agsXMPP.protocol.tls.StartTls 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubStartTls.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubStartTls.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubStartTls.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubStartTls.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStartTls.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubStartTls.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubStartTls.InitializeStub">
            <summary>初始化 type StubStartTls 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubStartTls.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubStartTls.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.tls.Fakes.StubStartTls.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubStartTls.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.tls.Fakes.StubStartTls.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubStartTls.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.tls.Fakes.StubStartTls.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimAvatar">
            <summary>agsXMPP.protocol.x.Avatar 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimAvatar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimAvatar.#ctor(agsXMPP.protocol.x.Avatar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimAvatar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.AllInstances.HashGet">
            <summary>设置 Avatar.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.AllInstances.HashSetString">
            <summary>设置 Avatar.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimAvatar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimAvatar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.Constructor">
            <summary>设置 Avatar.Avatar() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.ConstructorString">
            <summary>设置 Avatar.Avatar(String hash) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.HashGet">
            <summary>设置 Avatar.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimAvatar.HashSetString">
            <summary>设置 Avatar.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimConference">
            <summary>agsXMPP.protocol.x.Conference 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimConference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimConference.#ctor(agsXMPP.protocol.x.Conference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimConference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.AllInstances.ChatroomGet">
            <summary>设置 Conference.get_Chatroom() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.AllInstances.ChatroomSetJid">
            <summary>设置 Conference.set_Chatroom(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimConference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimConference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.ChatroomGet">
            <summary>设置 Conference.get_Chatroom() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.ChatroomSetJid">
            <summary>设置 Conference.set_Chatroom(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.Constructor">
            <summary>设置 Conference.Conference() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimConference.ConstructorJid">
            <summary>设置 Conference.Conference(Jid room) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimDelay">
            <summary>agsXMPP.protocol.x.Delay 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimDelay.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimDelay.#ctor(agsXMPP.protocol.x.Delay)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimDelay.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.AllInstances.FromGet">
            <summary>设置 Delay.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.AllInstances.FromSetJid">
            <summary>设置 Delay.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.AllInstances.StampGet">
            <summary>设置 Delay.get_Stamp() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.AllInstances.StampSetDateTime">
            <summary>设置 Delay.set_Stamp(DateTime value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimDelay.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimDelay.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.Constructor">
            <summary>设置 Delay.Delay() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.FromGet">
            <summary>设置 Delay.get_From() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.FromSetJid">
            <summary>设置 Delay.set_From(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.StampGet">
            <summary>设置 Delay.get_Stamp() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimDelay.StampSetDateTime">
            <summary>设置 Delay.set_Stamp(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimEvent">
            <summary>agsXMPP.protocol.x.Event 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimEvent.#ctor(agsXMPP.protocol.x.Event)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.ComposingGet">
            <summary>设置 Event.get_Composing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.ComposingSetBoolean">
            <summary>设置 Event.set_Composing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.DeliveredGet">
            <summary>设置 Event.get_Delivered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.DeliveredSetBoolean">
            <summary>设置 Event.set_Delivered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.DisplayedGet">
            <summary>设置 Event.get_Displayed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.DisplayedSetBoolean">
            <summary>设置 Event.set_Displayed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.IdGet">
            <summary>设置 Event.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.IdSetString">
            <summary>设置 Event.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.OfflineGet">
            <summary>设置 Event.get_Offline() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.AllInstances.OfflineSetBoolean">
            <summary>设置 Event.set_Offline(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.ShimEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.ComposingGet">
            <summary>设置 Event.get_Composing() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.ComposingSetBoolean">
            <summary>设置 Event.set_Composing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.Constructor">
            <summary>设置 Event.Event() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.DeliveredGet">
            <summary>设置 Event.get_Delivered() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.DeliveredSetBoolean">
            <summary>设置 Event.set_Delivered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.DisplayedGet">
            <summary>设置 Event.get_Displayed() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.DisplayedSetBoolean">
            <summary>设置 Event.set_Displayed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.IdGet">
            <summary>设置 Event.get_Id() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.IdSetString">
            <summary>设置 Event.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.OfflineGet">
            <summary>设置 Event.get_Offline() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.ShimEvent.OfflineSetBoolean">
            <summary>设置 Event.set_Offline(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.StubAvatar">
            <summary>agsXMPP.protocol.x.Avatar 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubAvatar.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAvatar.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubAvatar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.InitializeStub">
            <summary>初始化 type StubAvatar 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubAvatar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubAvatar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubAvatar.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubAvatar.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubAvatar.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubAvatar.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubAvatar.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.StubConference">
            <summary>agsXMPP.protocol.x.Conference 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubConference.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.AttachBackingFieldToValue">
            <summary>附加委托以将 StubConference.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubConference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.InitializeStub">
            <summary>初始化 type StubConference 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubConference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubConference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubConference.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubConference.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubConference.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubConference.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubConference.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.StubDelay">
            <summary>agsXMPP.protocol.x.Delay 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubDelay.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubDelay.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubDelay.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubDelay.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDelay.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubDelay.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubDelay.InitializeStub">
            <summary>初始化 type StubDelay 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubDelay.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubDelay.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubDelay.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubDelay.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubDelay.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubDelay.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubDelay.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.Fakes.StubEvent">
            <summary>agsXMPP.protocol.x.Event 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubEvent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubEvent.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubEvent.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubEvent.AttachBackingFieldToValue">
            <summary>附加委托以将 StubEvent.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubEvent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubEvent.InitializeStub">
            <summary>初始化 type StubEvent 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubEvent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubEvent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.Fakes.StubEvent.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubEvent.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.Fakes.StubEvent.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubEvent.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.Fakes.StubEvent.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimData">
            <summary>agsXMPP.protocol.x.data.Data 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimData.#ctor(agsXMPP.protocol.x.data.Data)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AddItem">
            <summary>设置 Data.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AddItemItem">
            <summary>设置 Data.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.AddItem">
            <summary>设置 Data.AddItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.AddItemItem">
            <summary>设置 Data.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.GetItems">
            <summary>设置 Data.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.InstructionsGet">
            <summary>设置 Data.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.InstructionsSetString">
            <summary>设置 Data.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.ReportedGet">
            <summary>设置 Data.get_Reported() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.ReportedSetReported">
            <summary>设置 Data.set_Reported(Reported value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.TitleGet">
            <summary>设置 Data.get_Title() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.TitleSetString">
            <summary>设置 Data.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.TypeGet">
            <summary>设置 Data.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.AllInstances.TypeSetXDataFormType">
            <summary>设置 Data.set_Type(XDataFormType value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.Constructor">
            <summary>设置 Data.Data() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.ConstructorXDataFormType">
            <summary>设置 Data.Data(XDataFormType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.GetItems">
            <summary>设置 Data.GetItems() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.InstructionsGet">
            <summary>设置 Data.get_Instructions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.InstructionsSetString">
            <summary>设置 Data.set_Instructions(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.ReportedGet">
            <summary>设置 Data.get_Reported() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.ReportedSetReported">
            <summary>设置 Data.set_Reported(Reported value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.TitleGet">
            <summary>设置 Data.get_Title() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.TitleSetString">
            <summary>设置 Data.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.TypeGet">
            <summary>设置 Data.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimData.TypeSetXDataFormType">
            <summary>设置 Data.set_Type(XDataFormType value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimField">
            <summary>agsXMPP.protocol.x.data.Field 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimField.#ctor(agsXMPP.protocol.x.data.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AddOption">
            <summary>设置 Field.AddOption() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AddOptionOption">
            <summary>设置 Field.AddOption(Option opt) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AddOptionStringString">
            <summary>设置 Field.AddOption(String label, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AddValueString">
            <summary>设置 Field.AddValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AddValuesStringArray">
            <summary>设置 Field.AddValues(String[] vals) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.AddOption">
            <summary>设置 Field.AddOption() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.AddOptionOption">
            <summary>设置 Field.AddOption(Option opt) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.AddOptionStringString">
            <summary>设置 Field.AddOption(String label, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.AddValueString">
            <summary>设置 Field.AddValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.AddValuesStringArray">
            <summary>设置 Field.AddValues(String[] vals) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.DescriptionGet">
            <summary>设置 Field.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.DescriptionSetString">
            <summary>设置 Field.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.GetOptions">
            <summary>设置 Field.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.GetValue">
            <summary>设置 Field.GetValue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.GetValueBool">
            <summary>设置 Field.GetValueBool() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.GetValueJid">
            <summary>设置 Field.GetValueJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.GetValues">
            <summary>设置 Field.GetValues() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.HasValueString">
            <summary>设置 Field.HasValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.IsRequiredGet">
            <summary>设置 Field.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.IsRequiredSetBoolean">
            <summary>设置 Field.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.LabelGet">
            <summary>设置 Field.get_Label() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.LabelSetString">
            <summary>设置 Field.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.SetValueBoolBoolean">
            <summary>设置 Field.SetValueBool(Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.SetValueString">
            <summary>设置 Field.SetValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.SetValuesStringArray">
            <summary>设置 Field.SetValues(String[] vals) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.TypeGet">
            <summary>设置 Field.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.TypeSetFieldType">
            <summary>设置 Field.set_Type(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.VarGet">
            <summary>设置 Field.get_Var() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.AllInstances.VarSetString">
            <summary>设置 Field.set_Var(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.Constructor">
            <summary>设置 Field.Field() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.ConstructorFieldType">
            <summary>设置 Field.Field(FieldType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.ConstructorStringStringFieldType">
            <summary>设置 Field.Field(String var, String label, FieldType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.DescriptionGet">
            <summary>设置 Field.get_Description() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.DescriptionSetString">
            <summary>设置 Field.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.GetOptions">
            <summary>设置 Field.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.GetValue">
            <summary>设置 Field.GetValue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.GetValueBool">
            <summary>设置 Field.GetValueBool() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.GetValueJid">
            <summary>设置 Field.GetValueJid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.GetValues">
            <summary>设置 Field.GetValues() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.HasValueString">
            <summary>设置 Field.HasValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.IsRequiredGet">
            <summary>设置 Field.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.IsRequiredSetBoolean">
            <summary>设置 Field.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.LabelGet">
            <summary>设置 Field.get_Label() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.LabelSetString">
            <summary>设置 Field.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.SetValueBoolBoolean">
            <summary>设置 Field.SetValueBool(Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.SetValueString">
            <summary>设置 Field.SetValue(String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.SetValuesStringArray">
            <summary>设置 Field.SetValues(String[] vals) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.TypeGet">
            <summary>设置 Field.get_Type() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.TypeSetFieldType">
            <summary>设置 Field.set_Type(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.VarGet">
            <summary>设置 Field.get_Var() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimField.VarSetString">
            <summary>设置 Field.set_Var(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer">
            <summary>agsXMPP.protocol.x.data.FieldContainer 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.#ctor(agsXMPP.protocol.x.data.FieldContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AddField">
            <summary>设置 FieldContainer.AddField() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AddFieldField">
            <summary>设置 FieldContainer.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AllInstances.AddField">
            <summary>设置 FieldContainer.AddField() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AllInstances.AddFieldField">
            <summary>设置 FieldContainer.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AllInstances.GetFieldString">
            <summary>设置 FieldContainer.GetField(String var) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.AllInstances.GetFields">
            <summary>设置 FieldContainer.GetFields() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.Constructor">
            <summary>设置 FieldContainer.FieldContainer() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.GetFieldString">
            <summary>设置 FieldContainer.GetField(String var) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimFieldContainer.GetFields">
            <summary>设置 FieldContainer.GetFields() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimItem">
            <summary>agsXMPP.protocol.x.data.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimItem.#ctor(agsXMPP.protocol.x.data.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimOption">
            <summary>agsXMPP.protocol.x.data.Option 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimOption.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimOption.#ctor(agsXMPP.protocol.x.data.Option)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimOption.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.AllInstances.GetValue">
            <summary>设置 Option.GetValue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.AllInstances.LabelGet">
            <summary>设置 Option.get_Label() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.AllInstances.LabelSetString">
            <summary>设置 Option.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.AllInstances.SetValueString">
            <summary>设置 Option.SetValue(String val) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimOption.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimOption.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.Constructor">
            <summary>设置 Option.Option() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.ConstructorStringString">
            <summary>设置 Option.Option(String label, String val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.GetValue">
            <summary>设置 Option.GetValue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.LabelGet">
            <summary>设置 Option.get_Label() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.LabelSetString">
            <summary>设置 Option.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimOption.SetValueString">
            <summary>设置 Option.SetValue(String val) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimReported">
            <summary>agsXMPP.protocol.x.data.Reported 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimReported.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimReported.#ctor(agsXMPP.protocol.x.data.Reported)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimReported.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimReported.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimReported.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimReported.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimReported.Constructor">
            <summary>设置 Reported.Reported() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimValue">
            <summary>agsXMPP.protocol.x.data.Value 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimValue.#ctor(agsXMPP.protocol.x.data.Value)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.ShimValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.ShimValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimValue.Constructor">
            <summary>设置 Value.Value() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimValue.ConstructorBoolean">
            <summary>设置 Value.Value(Boolean val) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.ShimValue.ConstructorString">
            <summary>设置 Value.Value(String val) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubData">
            <summary>agsXMPP.protocol.x.data.Data 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.#ctor(agsXMPP.protocol.x.data.XDataFormType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubData.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.AttachBackingFieldToValue">
            <summary>附加委托以将 StubData.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.InitializeStub">
            <summary>初始化 type StubData 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubData.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubData.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubData.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubData.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubData.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubField">
            <summary>agsXMPP.protocol.x.data.Field 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.#ctor(agsXMPP.protocol.x.data.FieldType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.#ctor(System.String,System.String,agsXMPP.protocol.x.data.FieldType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubField.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.AttachBackingFieldToValue">
            <summary>附加委托以将 StubField.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.InitializeStub">
            <summary>初始化 type StubField 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubField.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubField.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubField.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubField.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubField.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubFieldContainer">
            <summary>agsXMPP.protocol.x.data.FieldContainer 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.AttachBackingFieldToValue">
            <summary>附加委托以将 StubFieldContainer.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.InitializeStub">
            <summary>初始化 type StubFieldContainer 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubFieldContainer.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubItem">
            <summary>agsXMPP.protocol.x.data.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubOption">
            <summary>agsXMPP.protocol.x.data.Option 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubOption.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOption.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubOption.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.InitializeStub">
            <summary>初始化 type StubOption 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubOption.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubOption.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubOption.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubOption.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubOption.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubOption.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubOption.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubReported">
            <summary>agsXMPP.protocol.x.data.Reported 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubReported.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubReported.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubReported.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubReported.AttachBackingFieldToValue">
            <summary>附加委托以将 StubReported.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubReported.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubReported.InitializeStub">
            <summary>初始化 type StubReported 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubReported.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubReported.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubReported.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubReported.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubReported.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubReported.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubReported.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.data.Fakes.StubValue">
            <summary>agsXMPP.protocol.x.data.Value 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubValue.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.InitializeStub">
            <summary>初始化 type StubValue 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.data.Fakes.StubValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.data.Fakes.StubValue.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.data.Fakes.StubValue.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimActor">
            <summary>agsXMPP.protocol.x.muc.Actor 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimActor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimActor.#ctor(agsXMPP.protocol.x.muc.Actor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimActor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.AllInstances.JidGet">
            <summary>设置 Actor.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.AllInstances.JidSetJid">
            <summary>设置 Actor.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimActor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimActor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.Constructor">
            <summary>设置 Actor.Actor() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.JidGet">
            <summary>设置 Actor.get_Jid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimActor.JidSetJid">
            <summary>设置 Actor.set_Jid(Jid value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimDecline">
            <summary>agsXMPP.protocol.x.muc.Decline 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDecline.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDecline.#ctor(agsXMPP.protocol.x.muc.Decline)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimDecline.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDecline.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDecline.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDecline.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDecline.Constructor">
            <summary>设置 Decline.Decline() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDecline.ConstructorJid">
            <summary>设置 Decline.Decline(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDecline.ConstructorJidString">
            <summary>设置 Decline.Decline(Jid to, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDecline.ConstructorString">
            <summary>设置 Decline.Decline(String reason) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimDestroy">
            <summary>agsXMPP.protocol.x.muc.Destroy 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.#ctor(agsXMPP.protocol.x.muc.Destroy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.AlternateVenueGet">
            <summary>设置 Destroy.get_AlternateVenue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.AlternateVenueSetJid">
            <summary>设置 Destroy.set_AlternateVenue(Jid value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.PasswordGet">
            <summary>设置 Destroy.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.PasswordSetString">
            <summary>设置 Destroy.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.ReasonGet">
            <summary>设置 Destroy.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AllInstances.ReasonSetString">
            <summary>设置 Destroy.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AlternateVenueGet">
            <summary>设置 Destroy.get_AlternateVenue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.AlternateVenueSetJid">
            <summary>设置 Destroy.set_AlternateVenue(Jid value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.Constructor">
            <summary>设置 Destroy.Destroy() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.ConstructorJid">
            <summary>设置 Destroy.Destroy(Jid altVenue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.ConstructorString">
            <summary>设置 Destroy.Destroy(String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.ConstructorStringJid">
            <summary>设置 Destroy.Destroy(String reason, Jid altVenue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.PasswordGet">
            <summary>设置 Destroy.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.PasswordSetString">
            <summary>设置 Destroy.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.ReasonGet">
            <summary>设置 Destroy.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimDestroy.ReasonSetString">
            <summary>设置 Destroy.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimHistory">
            <summary>agsXMPP.protocol.x.muc.History 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimHistory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimHistory.#ctor(agsXMPP.protocol.x.muc.History)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.MaxCharactersGet">
            <summary>设置 History.get_MaxCharacters() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.MaxCharactersSetInt32">
            <summary>设置 History.set_MaxCharacters(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.MaxStanzasGet">
            <summary>设置 History.get_MaxStanzas() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.MaxStanzasSetInt32">
            <summary>设置 History.set_MaxStanzas(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.SecondsGet">
            <summary>设置 History.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.SecondsSetInt32">
            <summary>设置 History.set_Seconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.SinceGet">
            <summary>设置 History.get_Since() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.AllInstances.SinceSetDateTime">
            <summary>设置 History.set_Since(DateTime value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimHistory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimHistory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.Constructor">
            <summary>设置 History.History() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.ConstructorDateTime">
            <summary>设置 History.History(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.ConstructorInt32">
            <summary>设置 History.History(Int32 max) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.MaxCharactersGet">
            <summary>设置 History.get_MaxCharacters() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.MaxCharactersSetInt32">
            <summary>设置 History.set_MaxCharacters(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.MaxStanzasGet">
            <summary>设置 History.get_MaxStanzas() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.MaxStanzasSetInt32">
            <summary>设置 History.set_MaxStanzas(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.SecondsGet">
            <summary>设置 History.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.SecondsSetInt32">
            <summary>设置 History.set_Seconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.SinceGet">
            <summary>设置 History.get_Since() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimHistory.SinceSetDateTime">
            <summary>设置 History.set_Since(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimInvitation">
            <summary>agsXMPP.protocol.x.muc.Invitation 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.#ctor(agsXMPP.protocol.x.muc.Invitation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.AllInstances.ReasonGet">
            <summary>设置 Invitation.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.AllInstances.ReasonSetString">
            <summary>设置 Invitation.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.Constructor">
            <summary>设置 Invitation.Invitation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.ReasonGet">
            <summary>设置 Invitation.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvitation.ReasonSetString">
            <summary>设置 Invitation.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimInvite">
            <summary>agsXMPP.protocol.x.muc.Invite 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvite.#ctor(agsXMPP.protocol.x.muc.Invite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimInvite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.AllInstances.ContinueGet">
            <summary>设置 Invite.get_Continue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.AllInstances.ContinueSetBoolean">
            <summary>设置 Invite.set_Continue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.AllInstances.NicknameGet">
            <summary>设置 Invite.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.AllInstances.NicknameSetNickname">
            <summary>设置 Invite.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimInvite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.Constructor">
            <summary>设置 Invite.Invite() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.ConstructorJid">
            <summary>设置 Invite.Invite(Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.ConstructorJidString">
            <summary>设置 Invite.Invite(Jid to, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.ConstructorString">
            <summary>设置 Invite.Invite(String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.ContinueGet">
            <summary>设置 Invite.get_Continue() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.ContinueSetBoolean">
            <summary>设置 Invite.set_Continue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.NicknameGet">
            <summary>设置 Invite.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimInvite.NicknameSetNickname">
            <summary>设置 Invite.set_Nickname(Nickname value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimItem">
            <summary>agsXMPP.protocol.x.muc.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimItem.#ctor(agsXMPP.protocol.x.muc.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ActorGet">
            <summary>设置 Item.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ActorSetActor">
            <summary>设置 Item.set_Actor(Actor value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AffiliationGet">
            <summary>设置 Item.get_Affiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AffiliationSetAffiliation">
            <summary>设置 Item.set_Affiliation(Affiliation value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.ActorGet">
            <summary>设置 Item.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.ActorSetActor">
            <summary>设置 Item.set_Actor(Actor value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.AffiliationGet">
            <summary>设置 Item.get_Affiliation() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.AffiliationSetAffiliation">
            <summary>设置 Item.set_Affiliation(Affiliation value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.NicknameGet">
            <summary>设置 Item.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.NicknameSetString">
            <summary>设置 Item.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.ReasonGet">
            <summary>设置 Item.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.ReasonSetString">
            <summary>设置 Item.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.RoleGet">
            <summary>设置 Item.get_Role() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.AllInstances.RoleSetRole">
            <summary>设置 Item.set_Role(Role value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ConstructorAffiliation">
            <summary>设置 Item.Item(Affiliation affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ConstructorAffiliationRole">
            <summary>设置 Item.Item(Affiliation affiliation, Role role) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ConstructorAffiliationRoleString">
            <summary>设置 Item.Item(Affiliation affiliation, Role role, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ConstructorRole">
            <summary>设置 Item.Item(Role role) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.NicknameGet">
            <summary>设置 Item.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.NicknameSetString">
            <summary>设置 Item.set_Nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ReasonGet">
            <summary>设置 Item.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.ReasonSetString">
            <summary>设置 Item.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.RoleGet">
            <summary>设置 Item.get_Role() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimItem.RoleSetRole">
            <summary>设置 Item.set_Role(Role value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimMuc">
            <summary>agsXMPP.protocol.x.muc.Muc 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMuc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMuc.#ctor(agsXMPP.protocol.x.muc.Muc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimMuc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.AllInstances.HistoryGet">
            <summary>设置 Muc.get_History() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.AllInstances.HistorySetHistory">
            <summary>设置 Muc.set_History(History value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.AllInstances.PasswordGet">
            <summary>设置 Muc.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.AllInstances.PasswordSetString">
            <summary>设置 Muc.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMuc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMuc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.Constructor">
            <summary>设置 Muc.Muc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.HistoryGet">
            <summary>设置 Muc.get_History() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.HistorySetHistory">
            <summary>设置 Muc.set_History(History value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.PasswordGet">
            <summary>设置 Muc.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMuc.PasswordSetString">
            <summary>设置 Muc.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimMucManager">
            <summary>agsXMPP.protocol.x.muc.MucManager 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.#ctor(agsXMPP.protocol.x.muc.MucManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AcceptDefaultConfigurationJid">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AcceptDefaultConfigurationJidIqCB">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AcceptDefaultConfigurationJidIqCBObject">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.AcceptDefaultConfigurationJid">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.AcceptDefaultConfigurationJidIqCB">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.AcceptDefaultConfigurationJidIqCBObject">
            <summary>设置 MucManager.AcceptDefaultConfiguration(Jid room, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.BanUserJidJid">
            <summary>设置 MucManager.BanUser(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.BanUserJidJidString">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.BanUserJidJidStringIqCB">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.BanUserJidJidStringIqCBObject">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeAffiliationAffiliationJidJidIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeAffiliationAffiliationJidJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, Jid user, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeAffiliationAffiliationJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeNicknameJidString">
            <summary>设置 MucManager.ChangeNickname(Jid room, String newNick) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeRoleRoleJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeRole(Role role, Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeSubjectJidString">
            <summary>设置 MucManager.ChangeSubject(Jid room, String newSubject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ChangeSubjectJidStringString">
            <summary>设置 MucManager.ChangeSubject(Jid room, String newSubject, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.CreateReservedRoomJid">
            <summary>设置 MucManager.CreateReservedRoom(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.CreateReservedRoomJidIqCB">
            <summary>设置 MucManager.CreateReservedRoom(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.CreateReservedRoomJidIqCBObject">
            <summary>设置 MucManager.CreateReservedRoom(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DeclineJidJid">
            <summary>设置 MucManager.Decline(Jid to, Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DeclineJidJidString">
            <summary>设置 MucManager.Decline(Jid to, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJid">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJidIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJidIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJidString">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJidStringIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidJidStringIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidString">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidStringIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.DestroyRoomJidStringIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantAdminPrivilegesJidJid">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantAdminPrivilegesJidJidIqCB">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantAdminPrivilegesJidJidIqCBObject">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidJid">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidJidString">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidJidStringIqCB">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidJidStringIqCBObject">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidString">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidStringString">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidStringStringIqCB">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantMembershipJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantModeratorPrivilegesJidString">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantModeratorPrivilegesJidStringString">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantModeratorPrivilegesJidStringStringIqCB">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantModeratorPrivilegesJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantOwnershipPrivilegesJidJid">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantOwnershipPrivilegesJidJidIqCB">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantOwnershipPrivilegesJidJidIqCBObject">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantVoiceJidString">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantVoiceJidStringString">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantVoiceJidStringStringIqCB">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.GrantVoiceJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.InviteJidArrayJidString">
            <summary>设置 MucManager.Invite(Jid[] jids, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.InviteJidJid">
            <summary>设置 MucManager.Invite(Jid to, Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.InviteJidJidString">
            <summary>设置 MucManager.Invite(Jid to, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.JoinRoomJidString">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.JoinRoomJidStringBoolean">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, Boolean disableHistory) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.JoinRoomJidStringString">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.JoinRoomJidStringStringBoolean">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, String password, Boolean disableHistory) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.KickOccupantJidString">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.KickOccupantJidStringString">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.KickOccupantJidStringStringIqCB">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.KickOccupantJidStringStringIqCBObject">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.LeaveRoomJidString">
            <summary>设置 MucManager.LeaveRoom(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ModifyListJidItemArray">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ModifyListJidItemArrayIqCB">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.ModifyListJidItemArrayIqCBObject">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestAdminListJid">
            <summary>设置 MucManager.RequestAdminList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestAdminListJidIqCB">
            <summary>设置 MucManager.RequestAdminList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestAdminListJidIqCBObject">
            <summary>设置 MucManager.RequestAdminList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestBanListJid">
            <summary>设置 MucManager.RequestBanList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestBanListJidIqCB">
            <summary>设置 MucManager.RequestBanList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestBanListJidIqCBObject">
            <summary>设置 MucManager.RequestBanList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestConfigurationFormJid">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestConfigurationFormJidIqCB">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestConfigurationFormJidIqCBObject">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestListAffiliationJidIqCBObject">
            <summary>设置 MucManager.RequestList(Affiliation affiliation, Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestListRoleJidIqCBObject">
            <summary>设置 MucManager.RequestList(Role role, Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestMemberListJid">
            <summary>设置 MucManager.RequestMemberList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestMemberListJidIqCB">
            <summary>设置 MucManager.RequestMemberList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestMemberListJidIqCBObject">
            <summary>设置 MucManager.RequestMemberList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestModeratorListJid">
            <summary>设置 MucManager.RequestModeratorList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestModeratorListJidIqCB">
            <summary>设置 MucManager.RequestModeratorList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestModeratorListJidIqCBObject">
            <summary>设置 MucManager.RequestModeratorList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestOwnerListJid">
            <summary>设置 MucManager.RequestOwnerList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestOwnerListJidIqCB">
            <summary>设置 MucManager.RequestOwnerList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestOwnerListJidIqCBObject">
            <summary>设置 MucManager.RequestOwnerList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestVoiceListJid">
            <summary>设置 MucManager.RequestVoiceList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestVoiceListJidIqCB">
            <summary>设置 MucManager.RequestVoiceList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RequestVoiceListJidIqCBObject">
            <summary>设置 MucManager.RequestVoiceList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeMembershipJidString">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeMembershipJidStringString">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeMembershipJidStringStringIqCB">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeMembershipJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeModeratorJidString">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeModeratorJidStringString">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeModeratorJidStringStringIqCB">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeModeratorJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeVoiceJidString">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeVoiceJidStringString">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeVoiceJidStringStringIqCB">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.AllInstances.RevokeVoiceJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BanUserJidJid">
            <summary>设置 MucManager.BanUser(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BanUserJidJidString">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BanUserJidJidStringIqCB">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BanUserJidJidStringIqCBObject">
            <summary>设置 MucManager.BanUser(Jid room, Jid user, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeAffiliationAffiliationJidJidIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeAffiliationAffiliationJidJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, Jid user, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeAffiliationAffiliationJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeAffiliation(Affiliation affiliation, Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeNicknameJidString">
            <summary>设置 MucManager.ChangeNickname(Jid room, String newNick) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeRoleRoleJidStringStringIqCBObject">
            <summary>设置 MucManager.ChangeRole(Role role, Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeSubjectJidString">
            <summary>设置 MucManager.ChangeSubject(Jid room, String newSubject) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ChangeSubjectJidStringString">
            <summary>设置 MucManager.ChangeSubject(Jid room, String newSubject, String body) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ConstructorXmppClientConnection">
            <summary>设置 MucManager.MucManager(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.CreateReservedRoomJid">
            <summary>设置 MucManager.CreateReservedRoom(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.CreateReservedRoomJidIqCB">
            <summary>设置 MucManager.CreateReservedRoom(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.CreateReservedRoomJidIqCBObject">
            <summary>设置 MucManager.CreateReservedRoom(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DeclineJidJid">
            <summary>设置 MucManager.Decline(Jid to, Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DeclineJidJidString">
            <summary>设置 MucManager.Decline(Jid to, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJid">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJidIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJidIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJidString">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJidStringIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidJidStringIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, Jid altVenue, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidString">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidStringIqCB">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.DestroyRoomJidStringIqCBObject">
            <summary>设置 MucManager.DestroyRoom(Jid room, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantAdminPrivilegesJidJid">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantAdminPrivilegesJidJidIqCB">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantAdminPrivilegesJidJidIqCBObject">
            <summary>设置 MucManager.GrantAdminPrivileges(Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidJid">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidJidString">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidJidStringIqCB">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidJidStringIqCBObject">
            <summary>设置 MucManager.GrantMembership(Jid room, Jid user, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidString">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidStringString">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidStringStringIqCB">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantMembershipJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantMembership(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantModeratorPrivilegesJidString">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantModeratorPrivilegesJidStringString">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantModeratorPrivilegesJidStringStringIqCB">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantModeratorPrivilegesJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantModeratorPrivileges(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantOwnershipPrivilegesJidJid">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantOwnershipPrivilegesJidJidIqCB">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantOwnershipPrivilegesJidJidIqCBObject">
            <summary>设置 MucManager.GrantOwnershipPrivileges(Jid room, Jid user, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantVoiceJidString">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantVoiceJidStringString">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantVoiceJidStringStringIqCB">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.GrantVoiceJidStringStringIqCBObject">
            <summary>设置 MucManager.GrantVoice(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.InviteJidArrayJidString">
            <summary>设置 MucManager.Invite(Jid[] jids, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.InviteJidJid">
            <summary>设置 MucManager.Invite(Jid to, Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.InviteJidJidString">
            <summary>设置 MucManager.Invite(Jid to, Jid room, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.JoinRoomJidString">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.JoinRoomJidStringBoolean">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, Boolean disableHistory) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.JoinRoomJidStringString">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, String password) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.JoinRoomJidStringStringBoolean">
            <summary>设置 MucManager.JoinRoom(Jid room, String nickname, String password, Boolean disableHistory) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.KickOccupantJidString">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.KickOccupantJidStringString">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.KickOccupantJidStringStringIqCB">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.KickOccupantJidStringStringIqCBObject">
            <summary>设置 MucManager.KickOccupant(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.LeaveRoomJidString">
            <summary>设置 MucManager.LeaveRoom(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ModifyListJidItemArray">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ModifyListJidItemArrayIqCB">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.ModifyListJidItemArrayIqCBObject">
            <summary>设置 MucManager.ModifyList(Jid room, Item[] items, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestAdminListJid">
            <summary>设置 MucManager.RequestAdminList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestAdminListJidIqCB">
            <summary>设置 MucManager.RequestAdminList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestAdminListJidIqCBObject">
            <summary>设置 MucManager.RequestAdminList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestBanListJid">
            <summary>设置 MucManager.RequestBanList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestBanListJidIqCB">
            <summary>设置 MucManager.RequestBanList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestBanListJidIqCBObject">
            <summary>设置 MucManager.RequestBanList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestConfigurationFormJid">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestConfigurationFormJidIqCB">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestConfigurationFormJidIqCBObject">
            <summary>设置 MucManager.RequestConfigurationForm(Jid room, IqCB cb, Object cbArgs) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestListAffiliationJidIqCBObject">
            <summary>设置 MucManager.RequestList(Affiliation affiliation, Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestListRoleJidIqCBObject">
            <summary>设置 MucManager.RequestList(Role role, Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestMemberListJid">
            <summary>设置 MucManager.RequestMemberList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestMemberListJidIqCB">
            <summary>设置 MucManager.RequestMemberList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestMemberListJidIqCBObject">
            <summary>设置 MucManager.RequestMemberList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestModeratorListJid">
            <summary>设置 MucManager.RequestModeratorList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestModeratorListJidIqCB">
            <summary>设置 MucManager.RequestModeratorList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestModeratorListJidIqCBObject">
            <summary>设置 MucManager.RequestModeratorList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestOwnerListJid">
            <summary>设置 MucManager.RequestOwnerList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestOwnerListJidIqCB">
            <summary>设置 MucManager.RequestOwnerList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestOwnerListJidIqCBObject">
            <summary>设置 MucManager.RequestOwnerList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestVoiceListJid">
            <summary>设置 MucManager.RequestVoiceList(Jid room) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestVoiceListJidIqCB">
            <summary>设置 MucManager.RequestVoiceList(Jid room, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RequestVoiceListJidIqCBObject">
            <summary>设置 MucManager.RequestVoiceList(Jid room, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeMembershipJidString">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeMembershipJidStringString">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeMembershipJidStringStringIqCB">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeMembershipJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeMembership(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeModeratorJidString">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeModeratorJidStringString">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeModeratorJidStringStringIqCB">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeModeratorJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeModerator(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeVoiceJidString">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeVoiceJidStringString">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeVoiceJidStringStringIqCB">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason, IqCB cb) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimMucManager.RevokeVoiceJidStringStringIqCBObject">
            <summary>设置 MucManager.RevokeVoice(Jid room, String nickname, String reason, IqCB cb, Object cbArg) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimStatus">
            <summary>agsXMPP.protocol.x.muc.Status 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimStatus.#ctor(agsXMPP.protocol.x.muc.Status)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.AllInstances.CodeGet">
            <summary>设置 Status.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.AllInstances.CodeSetStatusCode">
            <summary>设置 Status.set_Code(StatusCode value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.CodeGet">
            <summary>设置 Status.get_Code() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.CodeSetStatusCode">
            <summary>设置 Status.set_Code(StatusCode value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.Constructor">
            <summary>设置 Status.Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.ConstructorInt32">
            <summary>设置 Status.Status(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimStatus.ConstructorStatusCode">
            <summary>设置 Status.Status(StatusCode code) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimUser">
            <summary>agsXMPP.protocol.x.muc.User 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimUser.#ctor(agsXMPP.protocol.x.muc.User)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.DeclineGet">
            <summary>设置 User.get_Decline() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.DeclineSetDecline">
            <summary>设置 User.set_Decline(Decline value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.InviteGet">
            <summary>设置 User.get_Invite() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.InviteSetInvite">
            <summary>设置 User.set_Invite(Invite value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.ItemGet">
            <summary>设置 User.get_Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.ItemSetItem">
            <summary>设置 User.set_Item(Item value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.PasswordGet">
            <summary>设置 User.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.PasswordSetString">
            <summary>设置 User.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.StatusGet">
            <summary>设置 User.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.AllInstances.StatusSetStatus">
            <summary>设置 User.set_Status(Status value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.ShimUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.Constructor">
            <summary>设置 User.User() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.DeclineGet">
            <summary>设置 User.get_Decline() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.DeclineSetDecline">
            <summary>设置 User.set_Decline(Decline value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.InviteGet">
            <summary>设置 User.get_Invite() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.InviteSetInvite">
            <summary>设置 User.set_Invite(Invite value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.ItemGet">
            <summary>设置 User.get_Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.ItemSetItem">
            <summary>设置 User.set_Item(Item value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.PasswordGet">
            <summary>设置 User.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.PasswordSetString">
            <summary>设置 User.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.StatusGet">
            <summary>设置 User.get_Status() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.ShimUser.StatusSetStatus">
            <summary>设置 User.set_Status(Status value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubActor">
            <summary>agsXMPP.protocol.x.muc.Actor 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubActor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubActor.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubActor.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubActor.AttachBackingFieldToValue">
            <summary>附加委托以将 StubActor.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubActor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubActor.InitializeStub">
            <summary>初始化 type StubActor 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubActor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubActor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubActor.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubActor.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubActor.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubActor.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubActor.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubDecline">
            <summary>agsXMPP.protocol.x.muc.Decline 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDecline.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDecline.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDecline.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.InitializeStub">
            <summary>初始化 type StubDecline 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDecline.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDecline.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDecline.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDecline.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDecline.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDecline.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDecline.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubDestroy">
            <summary>agsXMPP.protocol.x.muc.Destroy 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.#ctor(System.String,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDestroy.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.AttachBackingFieldToValue">
            <summary>附加委托以将 StubDestroy.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDestroy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.InitializeStub">
            <summary>初始化 type StubDestroy 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDestroy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDestroy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubDestroy.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDestroy.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubDestroy.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDestroy.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubDestroy.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubHistory">
            <summary>agsXMPP.protocol.x.muc.History 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.#ctor(System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubHistory.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.AttachBackingFieldToValue">
            <summary>附加委托以将 StubHistory.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubHistory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.InitializeStub">
            <summary>初始化 type StubHistory 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubHistory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubHistory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubHistory.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubHistory.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubHistory.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubHistory.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubHistory.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubInvitation">
            <summary>agsXMPP.protocol.x.muc.Invitation 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvitation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvitation.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvitation.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvitation.AttachBackingFieldToValue">
            <summary>附加委托以将 StubInvitation.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvitation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvitation.InitializeStub">
            <summary>初始化 type StubInvitation 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvitation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvitation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvitation.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvitation.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvitation.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvitation.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvitation.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubInvite">
            <summary>agsXMPP.protocol.x.muc.Invite 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvite.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.AttachBackingFieldToValue">
            <summary>附加委托以将 StubInvite.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.InitializeStub">
            <summary>初始化 type StubInvite 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubInvite.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvite.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubInvite.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvite.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubInvite.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubItem">
            <summary>agsXMPP.protocol.x.muc.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Role)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubMuc">
            <summary>agsXMPP.protocol.x.muc.Muc 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMuc.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMuc.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubMuc.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMuc.AttachBackingFieldToValue">
            <summary>附加委托以将 StubMuc.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMuc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMuc.InitializeStub">
            <summary>初始化 type StubMuc 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMuc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMuc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMuc.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubMuc.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMuc.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubMuc.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubMuc.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubMucManager">
            <summary>agsXMPP.protocol.x.muc.MucManager 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMucManager.#ctor(agsXMPP.XmppClientConnection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMucManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubMucManager.InitializeStub">
            <summary>初始化 type StubMucManager 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMucManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubMucManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubStatus">
            <summary>agsXMPP.protocol.x.muc.Status 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.#ctor(agsXMPP.protocol.x.muc.StatusCode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubStatus.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.AttachBackingFieldToValue">
            <summary>附加委托以将 StubStatus.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubStatus.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.InitializeStub">
            <summary>初始化 type StubStatus 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubStatus.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubStatus.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubStatus.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubStatus.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubStatus.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubStatus.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubStatus.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.Fakes.StubUser">
            <summary>agsXMPP.protocol.x.muc.User 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubUser.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubUser.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubUser.AttachBackingFieldToValue">
            <summary>附加委托以将 StubUser.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubUser.InitializeStub">
            <summary>初始化 type StubUser 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.Fakes.StubUser.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubUser.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.Fakes.StubUser.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubUser.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.Fakes.StubUser.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin">
            <summary>agsXMPP.protocol.x.muc.iq.admin.Admin 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.#ctor(agsXMPP.protocol.x.muc.iq.admin.Admin)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AddItemItem">
            <summary>设置 Admin.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AddItemsItemArray">
            <summary>设置 Admin.AddItems(Item[] items) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AllInstances.AddItemItem">
            <summary>设置 Admin.AddItem(Item item) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AllInstances.AddItemsItemArray">
            <summary>设置 Admin.AddItems(Item[] items) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.AllInstances.GetItems">
            <summary>设置 Admin.GetItems() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.Constructor">
            <summary>设置 Admin.Admin() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdmin.GetItems">
            <summary>设置 Admin.GetItems() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq">
            <summary>agsXMPP.protocol.x.muc.iq.admin.AdminIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.#ctor(agsXMPP.protocol.x.muc.iq.admin.AdminIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.AllInstances.QueryGet">
            <summary>设置 AdminIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.Constructor">
            <summary>设置 AdminIq.AdminIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.ConstructorIqType">
            <summary>设置 AdminIq.AdminIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.ConstructorIqTypeJid">
            <summary>设置 AdminIq.AdminIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.ConstructorIqTypeJidJid">
            <summary>设置 AdminIq.AdminIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimAdminIq.QueryGet">
            <summary>设置 AdminIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem">
            <summary>agsXMPP.protocol.x.muc.iq.admin.Item 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.#ctor(agsXMPP.protocol.x.muc.iq.admin.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliation">
            <summary>设置 Item.Item(Affiliation affiliation) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliationJid">
            <summary>设置 Item.Item(Affiliation affiliation, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliationRole">
            <summary>设置 Item.Item(Affiliation affiliation, Role role) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliationRoleJid">
            <summary>设置 Item.Item(Affiliation affiliation, Role role, Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliationRoleJidString">
            <summary>设置 Item.Item(Affiliation affiliation, Role role, Jid jid, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorAffiliationRoleString">
            <summary>设置 Item.Item(Affiliation affiliation, Role role, String reason) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorJid">
            <summary>设置 Item.Item(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorRole">
            <summary>设置 Item.Item(Role role) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.ShimItem.ConstructorRoleJid">
            <summary>设置 Item.Item(Role role, Jid jid) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin">
            <summary>agsXMPP.protocol.x.muc.iq.admin.Admin 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAdmin.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.InitializeStub">
            <summary>初始化 type StubAdmin 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdmin.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq">
            <summary>agsXMPP.protocol.x.muc.iq.admin.AdminIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubAdminIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubAdminIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubAdminIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubAdminIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.InitializeStub">
            <summary>初始化 type StubAdminIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubAdminIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem">
            <summary>agsXMPP.protocol.x.muc.iq.admin.Item 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Role)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Role,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.#ctor(agsXMPP.protocol.x.muc.Affiliation,agsXMPP.protocol.x.muc.Role,agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.InitializeStub">
            <summary>初始化 type StubItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.admin.Fakes.StubItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner">
            <summary>agsXMPP.protocol.x.muc.iq.owner.Owner 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.#ctor(agsXMPP.protocol.x.muc.iq.owner.Owner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwner.Constructor">
            <summary>设置 Owner.Owner() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq">
            <summary>agsXMPP.protocol.x.muc.iq.owner.OwnerIq 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.#ctor(agsXMPP.protocol.x.muc.iq.owner.OwnerIq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.AllInstances.QueryGet">
            <summary>设置 OwnerIq.get_Query() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.Constructor">
            <summary>设置 OwnerIq.OwnerIq() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.ConstructorIqType">
            <summary>设置 OwnerIq.OwnerIq(IqType type) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.ConstructorIqTypeJid">
            <summary>设置 OwnerIq.OwnerIq(IqType type, Jid to) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.ConstructorIqTypeJidJid">
            <summary>设置 OwnerIq.OwnerIq(IqType type, Jid to, Jid from) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.ShimOwnerIq.QueryGet">
            <summary>设置 OwnerIq.get_Query() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner">
            <summary>agsXMPP.protocol.x.muc.iq.owner.Owner 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOwner.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.InitializeStub">
            <summary>初始化 type StubOwner 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwner.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq">
            <summary>agsXMPP.protocol.x.muc.iq.owner.OwnerIq 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.#ctor(agsXMPP.protocol.client.IqType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.#ctor(agsXMPP.protocol.client.IqType,agsXMPP.Jid,agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AttachBackingFieldToBind">
            <summary>附加委托以将 StubOwnerIq.Bind 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AttachBackingFieldToSession">
            <summary>附加委托以将 StubOwnerIq.Session 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AttachBackingFieldToValue">
            <summary>附加委托以将 StubOwnerIq.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.AttachBackingFieldToVcard">
            <summary>附加委托以将 StubOwnerIq.Vcard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.Bind">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.BindGet">
            <summary>设置 IQ.get_Bind() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.BindSetBind">
            <summary>设置 IQ.set_Bind(Bind value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.InitializeStub">
            <summary>初始化 type StubOwnerIq 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.Session">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.SessionGet">
            <summary>设置 IQ.get_Session() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.SessionSetSession">
            <summary>设置 IQ.set_Session(Session value) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.Vcard">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.VcardGet">
            <summary>设置 IQ.get_Vcard() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.muc.iq.owner.Fakes.StubOwnerIq.VcardSetVcard">
            <summary>设置 IQ.set_Vcard(Vcard value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem">
            <summary>agsXMPP.protocol.x.rosterx.RosterItem 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.#ctor(agsXMPP.protocol.x.rosterx.RosterItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.ActionGet">
            <summary>设置 RosterItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.ActionSetAction">
            <summary>设置 RosterItem.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.AllInstances.ActionGet">
            <summary>设置 RosterItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.AllInstances.ActionSetAction">
            <summary>设置 RosterItem.set_Action(Action value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.Constructor">
            <summary>设置 RosterItem.RosterItem() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.ConstructorJid">
            <summary>设置 RosterItem.RosterItem(Jid jid) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.ConstructorJidString">
            <summary>设置 RosterItem.RosterItem(Jid jid, String name) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterItem.ConstructorJidStringAction">
            <summary>设置 RosterItem.RosterItem(Jid jid, String name, Action action) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX">
            <summary>agsXMPP.protocol.x.rosterx.RosterX 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.#ctor(agsXMPP.protocol.x.rosterx.RosterX)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.AddRosterItemRosterItem">
            <summary>设置 RosterX.AddRosterItem(RosterItem r) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.AllInstances.AddRosterItemRosterItem">
            <summary>设置 RosterX.AddRosterItem(RosterItem r) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.AllInstances.GetRoster">
            <summary>设置 RosterX.GetRoster() 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.Constructor">
            <summary>设置 RosterX.RosterX() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.ShimRosterX.GetRoster">
            <summary>设置 RosterX.GetRoster() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem">
            <summary>agsXMPP.protocol.x.rosterx.RosterItem 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.#ctor(agsXMPP.Jid)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.#ctor(agsXMPP.Jid,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.#ctor(agsXMPP.Jid,System.String,agsXMPP.protocol.x.rosterx.Action)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRosterItem.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.InitializeStub">
            <summary>初始化 type StubRosterItem 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterItem.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX">
            <summary>agsXMPP.protocol.x.rosterx.RosterX 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.AttachBackingFieldToValue">
            <summary>附加委托以将 StubRosterX.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.InitializeStub">
            <summary>初始化 type StubRosterX 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.rosterx.Fakes.StubRosterX.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate">
            <summary>agsXMPP.protocol.x.vcard_update.VcardUpdate 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.#ctor(agsXMPP.protocol.x.vcard_update.VcardUpdate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.AllInstances.PhotoGet">
            <summary>设置 VcardUpdate.get_Photo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.AllInstances.PhotoSetString">
            <summary>设置 VcardUpdate.set_Photo(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.Constructor">
            <summary>设置 VcardUpdate.VcardUpdate() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.ConstructorString">
            <summary>设置 VcardUpdate.VcardUpdate(String photo) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.PhotoGet">
            <summary>设置 VcardUpdate.get_Photo() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.ShimVcardUpdate.PhotoSetString">
            <summary>设置 VcardUpdate.set_Photo(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate">
            <summary>agsXMPP.protocol.x.vcard_update.VcardUpdate 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.AddChild(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Node.AddChild(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.AddChildNode">
            <summary>设置 Node.AddChild(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.AttachBackingFieldToValue">
            <summary>附加委托以将 StubVcardUpdate.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.InitializeStub">
            <summary>初始化 type StubVcardUpdate 的新实例</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.ToString">
            <summary>设置 Node.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.ToString01">
            <summary>设置 Node.ToString() 的 stub</summary>
        </member>
        <member name="P:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.Value">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.ValueGet">
            <summary>设置 Element.get_Value() 的 stub</summary>
        </member>
        <member name="F:agsXMPP.protocol.x.vcard_update.Fakes.StubVcardUpdate.ValueSetString">
            <summary>设置 Element.set_Value(String value) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism">
            <summary>agsXMPP.sasl.Anonymous.AnonymousMechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.#ctor(agsXMPP.sasl.Anonymous.AnonymousMechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.AllInstances.InitXmppClientConnection">
            <summary>设置 AnonymousMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.AllInstances.ParseNode">
            <summary>设置 AnonymousMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.Constructor">
            <summary>设置 AnonymousMechanism.AnonymousMechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.InitXmppClientConnection">
            <summary>设置 AnonymousMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.ShimAnonymousMechanism.ParseNode">
            <summary>设置 AnonymousMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism">
            <summary>agsXMPP.sasl.Anonymous.AnonymousMechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 AnonymousMechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.InitXmppClientConnection">
            <summary>设置 AnonymousMechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.InitializeStub">
            <summary>初始化 type StubAnonymousMechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 AnonymousMechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Anonymous.Fakes.StubAnonymousMechanism.ParseNode">
            <summary>设置 AnonymousMechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism">
            <summary>agsXMPP.sasl.DigestMD5.DigestMD5Mechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.#ctor(agsXMPP.sasl.DigestMD5.DigestMD5Mechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.AllInstances.InitXmppClientConnection">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.AllInstances.ParseNode">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.Constructor">
            <summary>设置 DigestMD5Mechanism.DigestMD5Mechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.InitXmppClientConnection">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimDigestMD5Mechanism.ParseNode">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1">
            <summary>agsXMPP.sasl.DigestMD5.Step1 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.#ctor(agsXMPP.sasl.DigestMD5.Step1)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AlgorithmGet">
            <summary>设置 Step1.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AlgorithmSetString">
            <summary>设置 Step1.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.AlgorithmGet">
            <summary>设置 Step1.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.AlgorithmSetString">
            <summary>设置 Step1.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.CharsetGet">
            <summary>设置 Step1.get_Charset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.CharsetSetString">
            <summary>设置 Step1.set_Charset(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.NonceGet">
            <summary>设置 Step1.get_Nonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.NonceSetString">
            <summary>设置 Step1.set_Nonce(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.ParsePairString">
            <summary>设置 Step1.ParsePair(String pair) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.ParseString">
            <summary>设置 Step1.Parse(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.QopGet">
            <summary>设置 Step1.get_Qop() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.QopSetString">
            <summary>设置 Step1.set_Qop(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.RealmGet">
            <summary>设置 Step1.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.RealmSetString">
            <summary>设置 Step1.set_Realm(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.RspauthGet">
            <summary>设置 Step1.get_Rspauth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.AllInstances.RspauthSetString">
            <summary>设置 Step1.set_Rspauth(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.CharsetGet">
            <summary>设置 Step1.get_Charset() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.CharsetSetString">
            <summary>设置 Step1.set_Charset(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.Constructor">
            <summary>设置 Step1.Step1() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ConstructorString">
            <summary>设置 Step1.Step1(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.NonceGet">
            <summary>设置 Step1.get_Nonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.NonceSetString">
            <summary>设置 Step1.set_Nonce(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ParsePairString">
            <summary>设置 Step1.ParsePair(String pair) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ParseString">
            <summary>设置 Step1.Parse(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.QopGet">
            <summary>设置 Step1.get_Qop() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.QopSetString">
            <summary>设置 Step1.set_Qop(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.RealmGet">
            <summary>设置 Step1.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.RealmSetString">
            <summary>设置 Step1.set_Realm(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.RspauthGet">
            <summary>设置 Step1.get_Rspauth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.RspauthSetString">
            <summary>设置 Step1.set_Rspauth(String value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException">
            <summary>agsXMPP.sasl.DigestMD5.Step1+ChallengeParseException 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.#ctor(agsXMPP.sasl.DigestMD5.Step1.ChallengeParseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep1.ShimChallengeParseException.ConstructorString">
            <summary>设置 ChallengeParseException.ChallengeParseException(String message) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2">
            <summary>agsXMPP.sasl.DigestMD5.Step2 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.#ctor(agsXMPP.sasl.DigestMD5.Step2)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AddQuotesString">
            <summary>设置 Step2.AddQuotes(String s) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.AddQuotesString">
            <summary>设置 Step2.AddQuotes(String s) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.AuthzidGet">
            <summary>设置 Step2.get_Authzid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.AuthzidSetString">
            <summary>设置 Step2.set_Authzid(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.CnonceGet">
            <summary>设置 Step2.get_Cnonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.CnonceSetString">
            <summary>设置 Step2.set_Cnonce(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.DigestUriGet">
            <summary>设置 Step2.get_DigestUri() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.DigestUriSetString">
            <summary>设置 Step2.set_DigestUri(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.GenerateCnonce">
            <summary>设置 Step2.GenerateCnonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.GenerateDigestUri">
            <summary>设置 Step2.GenerateDigestUri() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.GenerateMessage">
            <summary>设置 Step2.GenerateMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.GenerateNc">
            <summary>设置 Step2.GenerateNc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.GenerateResponse">
            <summary>设置 Step2.GenerateResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.NcGet">
            <summary>设置 Step2.get_Nc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.NcSetString">
            <summary>设置 Step2.set_Nc(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.ResponseGet">
            <summary>设置 Step2.get_Response() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.ResponseSetString">
            <summary>设置 Step2.set_Response(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.SupportsAuthString">
            <summary>设置 Step2.SupportsAuth(String qop) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AllInstances.ToString01">
            <summary>设置 Step2.ToString() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AuthzidGet">
            <summary>设置 Step2.get_Authzid() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.AuthzidSetString">
            <summary>设置 Step2.set_Authzid(String value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.CnonceGet">
            <summary>设置 Step2.get_Cnonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.CnonceSetString">
            <summary>设置 Step2.set_Cnonce(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.Constructor">
            <summary>设置 Step2.Step2() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.ConstructorStep1StringStringString">
            <summary>设置 Step2.Step2(Step1 step1, String username, String password, String server) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.ConstructorString">
            <summary>设置 Step2.Step2(String message) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.DigestUriGet">
            <summary>设置 Step2.get_DigestUri() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.DigestUriSetString">
            <summary>设置 Step2.set_DigestUri(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.GenerateCnonce">
            <summary>设置 Step2.GenerateCnonce() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.GenerateDigestUri">
            <summary>设置 Step2.GenerateDigestUri() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.GenerateMessage">
            <summary>设置 Step2.GenerateMessage() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.GenerateNc">
            <summary>设置 Step2.GenerateNc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.GenerateResponse">
            <summary>设置 Step2.GenerateResponse() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.NcGet">
            <summary>设置 Step2.get_Nc() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.NcSetString">
            <summary>设置 Step2.set_Nc(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.ResponseGet">
            <summary>设置 Step2.get_Response() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.ResponseSetString">
            <summary>设置 Step2.set_Response(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.SupportsAuthString">
            <summary>设置 Step2.SupportsAuth(String qop) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.ShimStep2.ToString">
            <summary>设置 Step2.ToString() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism">
            <summary>agsXMPP.sasl.DigestMD5.DigestMD5Mechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.InitXmppClientConnection">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.InitializeStub">
            <summary>初始化 type StubDigestMD5Mechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubDigestMD5Mechanism.ParseNode">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.StubStep1">
            <summary>agsXMPP.sasl.DigestMD5.Step1 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.InitXmppClientConnection">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.InitializeStub">
            <summary>初始化 type StubStep1 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubStep1.ParseNode">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.DigestMD5.Fakes.StubStep2">
            <summary>agsXMPP.sasl.DigestMD5.Step2 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.#ctor(agsXMPP.sasl.DigestMD5.Step1,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.InitXmppClientConnection">
            <summary>设置 DigestMD5Mechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.InitializeStub">
            <summary>初始化 type StubStep2 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.ParseNode">
            <summary>设置 DigestMD5Mechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.ToString">
            <summary>设置 Step2.ToString() 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.DigestMD5.Fakes.StubStep2.ToString01">
            <summary>设置 Step2.ToString() 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.ShimMechanism">
            <summary>agsXMPP.sasl.Mechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimMechanism.#ctor(agsXMPP.sasl.Mechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.PasswordGet">
            <summary>设置 Mechanism.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.PasswordSetString">
            <summary>设置 Mechanism.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.ServerGet">
            <summary>设置 Mechanism.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.ServerSetString">
            <summary>设置 Mechanism.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.UsernameGet">
            <summary>设置 Mechanism.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.UsernameSetString">
            <summary>设置 Mechanism.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.XmppClientConnectionGet">
            <summary>设置 Mechanism.get_XmppClientConnection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.AllInstances.XmppClientConnectionSetXmppClientConnection">
            <summary>设置 Mechanism.set_XmppClientConnection(XmppClientConnection value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimMechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimMechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.Constructor">
            <summary>设置 Mechanism.Mechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.PasswordGet">
            <summary>设置 Mechanism.get_Password() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.PasswordSetString">
            <summary>设置 Mechanism.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.ServerGet">
            <summary>设置 Mechanism.get_Server() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.ServerSetString">
            <summary>设置 Mechanism.set_Server(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.UsernameGet">
            <summary>设置 Mechanism.get_Username() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.UsernameSetString">
            <summary>设置 Mechanism.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.XmppClientConnectionGet">
            <summary>设置 Mechanism.get_XmppClientConnection() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimMechanism.XmppClientConnectionSetXmppClientConnection">
            <summary>设置 Mechanism.set_XmppClientConnection(XmppClientConnection value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.ShimSaslEventArgs">
            <summary>agsXMPP.sasl.SaslEventArgs 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimSaslEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimSaslEventArgs.#ctor(agsXMPP.sasl.SaslEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.AutoGet">
            <summary>设置 SaslEventArgs.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.AutoSetBoolean">
            <summary>设置 SaslEventArgs.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.MechanismGet">
            <summary>设置 SaslEventArgs.get_Mechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.MechanismSetString">
            <summary>设置 SaslEventArgs.set_Mechanism(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.MechanismsGet">
            <summary>设置 SaslEventArgs.get_Mechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AllInstances.MechanismsSetMechanisms">
            <summary>设置 SaslEventArgs.set_Mechanisms(Mechanisms value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AutoGet">
            <summary>设置 SaslEventArgs.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.AutoSetBoolean">
            <summary>设置 SaslEventArgs.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimSaslEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.ShimSaslEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.Constructor">
            <summary>设置 SaslEventArgs.SaslEventArgs() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.ConstructorMechanisms">
            <summary>设置 SaslEventArgs.SaslEventArgs(Mechanisms mechanisms) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.MechanismGet">
            <summary>设置 SaslEventArgs.get_Mechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.MechanismSetString">
            <summary>设置 SaslEventArgs.set_Mechanism(String value) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.MechanismsGet">
            <summary>设置 SaslEventArgs.get_Mechanisms() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.ShimSaslEventArgs.MechanismsSetMechanisms">
            <summary>设置 SaslEventArgs.set_Mechanisms(Mechanisms value) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.StubMechanism">
            <summary>agsXMPP.sasl.Mechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubMechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubMechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubMechanism.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 Mechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Fakes.StubMechanism.InitXmppClientConnection">
            <summary>设置 Mechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubMechanism.InitializeStub">
            <summary>初始化 type StubMechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubMechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubMechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubMechanism.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 Mechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Fakes.StubMechanism.ParseNode">
            <summary>设置 Mechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.Fakes.StubSaslEventArgs">
            <summary>agsXMPP.sasl.SaslEventArgs 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubSaslEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubSaslEventArgs.#ctor(agsXMPP.protocol.sasl.Mechanisms)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubSaslEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Fakes.StubSaslEventArgs.InitializeStub">
            <summary>初始化 type StubSaslEventArgs 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubSaslEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.Fakes.StubSaslEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism">
            <summary>agsXMPP.sasl.Plain.PlainMechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.#ctor(agsXMPP.sasl.Plain.PlainMechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.AllInstances.InitXmppClientConnection">
            <summary>设置 PlainMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.AllInstances.Message">
            <summary>设置 PlainMechanism.Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.AllInstances.ParseNode">
            <summary>设置 PlainMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.Constructor">
            <summary>设置 PlainMechanism.PlainMechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.InitXmppClientConnection">
            <summary>设置 PlainMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.Message">
            <summary>设置 PlainMechanism.Message() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.ShimPlainMechanism.ParseNode">
            <summary>设置 PlainMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism">
            <summary>agsXMPP.sasl.Plain.PlainMechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 PlainMechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.InitXmppClientConnection">
            <summary>设置 PlainMechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.InitializeStub">
            <summary>初始化 type StubPlainMechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 PlainMechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.Plain.Fakes.StubPlainMechanism.ParseNode">
            <summary>设置 PlainMechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism">
            <summary>agsXMPP.sasl.XGoogleToken.XGoogleTokenMechanism 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.#ctor(agsXMPP.sasl.XGoogleToken.XGoogleTokenMechanism)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.DoClientAuth">
            <summary>设置 XGoogleTokenMechanism.DoClientAuth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.DoSaslAuth">
            <summary>设置 XGoogleTokenMechanism.DoSaslAuth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.GetTokenString">
            <summary>设置 XGoogleTokenMechanism.GetToken(String line) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.InitXmppClientConnection">
            <summary>设置 XGoogleTokenMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.OnGetClientAuthRequestStreamIAsyncResult">
            <summary>设置 XGoogleTokenMechanism.OnGetClientAuthRequestStream(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.OnGetClientAuthResponseIAsyncResult">
            <summary>设置 XGoogleTokenMechanism.OnGetClientAuthResponse(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.ParseClientAuthResponseStream">
            <summary>设置 XGoogleTokenMechanism.ParseClientAuthResponse(Stream responseStream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.AllInstances.ParseNode">
            <summary>设置 XGoogleTokenMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.Constructor">
            <summary>设置 XGoogleTokenMechanism.XGoogleTokenMechanism() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.DoClientAuth">
            <summary>设置 XGoogleTokenMechanism.DoClientAuth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.DoSaslAuth">
            <summary>设置 XGoogleTokenMechanism.DoSaslAuth() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.GetTokenString">
            <summary>设置 XGoogleTokenMechanism.GetToken(String line) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.InitXmppClientConnection">
            <summary>设置 XGoogleTokenMechanism.Init(XmppClientConnection con) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.OnGetClientAuthRequestStreamIAsyncResult">
            <summary>设置 XGoogleTokenMechanism.OnGetClientAuthRequestStream(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.OnGetClientAuthResponseIAsyncResult">
            <summary>设置 XGoogleTokenMechanism.OnGetClientAuthResponse(IAsyncResult result) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.ParseClientAuthResponseStream">
            <summary>设置 XGoogleTokenMechanism.ParseClientAuthResponse(Stream responseStream) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.ShimXGoogleTokenMechanism.ParseNode">
            <summary>设置 XGoogleTokenMechanism.Parse(Node e) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism">
            <summary>agsXMPP.sasl.XGoogleToken.XGoogleTokenMechanism 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.Init(agsXMPP.XmppClientConnection)">
            <summary>设置 XGoogleTokenMechanism.Init(XmppClientConnection con) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.InitXmppClientConnection">
            <summary>设置 XGoogleTokenMechanism.Init(XmppClientConnection con) 的 stub</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.InitializeStub">
            <summary>初始化 type StubXGoogleTokenMechanism 的新实例</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.Parse(agsXMPP.Xml.Dom.Node)">
            <summary>设置 XGoogleTokenMechanism.Parse(Node e) 的 存根</summary>
        </member>
        <member name="F:agsXMPP.sasl.XGoogleToken.Fakes.StubXGoogleTokenMechanism.ParseNode">
            <summary>设置 XGoogleTokenMechanism.Parse(Node e) 的 stub</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimEnum">
            <summary>agsXMPP.util.Enum 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimEnum.#ctor(agsXMPP.util.Enum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimEnum.Constructor">
            <summary>设置 Enum.Enum() 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimHash">
            <summary>agsXMPP.util.Hash 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimHash.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimHash.#ctor(agsXMPP.util.Hash)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimHash.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimHash.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimHash.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimHash.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimHash.Constructor">
            <summary>设置 Hash.Hash() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimHash.HexToStringByteArray">
            <summary>设置 Hash.HexToString(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimHash.Sha1HashBytesString">
            <summary>设置 Hash.Sha1HashBytes(String pass) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimHash.Sha1HashString">
            <summary>设置 Hash.Sha1Hash(String pass) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimTime">
            <summary>agsXMPP.util.Time 的填充码类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimTime.#ctor(agsXMPP.util.Time)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.ShimTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.ShimTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.Constructor">
            <summary>设置 Time.Time() 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.DateDateTime">
            <summary>设置 Time.Date(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.DateString">
            <summary>设置 Time.Date(String date) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.ISO_8601DateDateTime">
            <summary>设置 Time.ISO_8601Date(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.ShimTime.ISO_8601DateString">
            <summary>设置 Time.ISO_8601Date(String date) 的 填充码</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.StubEnum">
            <summary>agsXMPP.util.Enum 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubEnum.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubEnum.InitializeStub">
            <summary>初始化 type StubEnum 的新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.StubHash">
            <summary>agsXMPP.util.Hash 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubHash.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubHash.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubHash.InitializeStub">
            <summary>初始化 type StubHash 的新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubHash.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubHash.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:agsXMPP.util.Fakes.StubTime">
            <summary>agsXMPP.util.Time 的存根类型</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubTime.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubTime.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:agsXMPP.util.Fakes.StubTime.InitializeStub">
            <summary>初始化 type StubTime 的新实例</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubTime.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:agsXMPP.util.Fakes.StubTime.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
